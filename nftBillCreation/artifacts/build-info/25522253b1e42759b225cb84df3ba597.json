{
	"id": "25522253b1e42759b225cb84df3ba597",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Simplify/productStore.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\ncontract ProductStore is ERC721, Ownable {\r\n    IERC20 public token; // ERC20 token contract\r\n\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _billIds;\r\n\r\n    event BuyProduct(address indexed buyer, uint256 productId, uint256 amountPaid);\r\n\r\n    struct Product {\r\n        uint256 id;\r\n        string name;\r\n        uint256 price;\r\n    }\r\n\r\n    mapping(uint256 => Product) public products;\r\n    mapping(address => uint256[]) public userPurchases;\r\n\r\n    uint256 public nextProductId;\r\n\r\n    constructor(address _tokenAddress) ERC721(\"ProductBill\", \"PBL\") {\r\n        token = IERC20(_tokenAddress);\r\n    }\r\n\r\n    function addProduct(string memory _name, uint256 _price) external onlyOwner {\r\n        uint256 productId = nextProductId++;\r\n        products[productId] = Product(productId, _name, _price);\r\n    }\r\n\r\n    function buyProduct(uint256 _productId) external {\r\n        Product storage product = products[_productId];\r\n        require(product.id != 0, \"Product does not exist\");\r\n        require(token.transferFrom(msg.sender, address(this), product.price*10**18), \"Token transfer failed\");\r\n\r\n        // whenever user buy a product then unique nft bill is created with uinique id\r\n        uint256 billId = _billIds.current();\r\n        _safeMint(msg.sender, billId);\r\n\r\n        _billIds.increment();\r\n\r\n        // Record the purchase for the user\r\n        userPurchases[msg.sender].push(_productId);\r\n\r\n        emit BuyProduct(msg.sender, _productId, product.price);\r\n    }\r\n\r\n    function getUserProductDetails(address user) external view returns (Product[] memory) {\r\n        uint256[] memory purchasedProductIds = userPurchases[user];\r\n        Product[] memory userDetails = new Product[](purchasedProductIds.length);\r\n\r\n        for (uint256 i = 0; i < purchasedProductIds.length; i++) {\r\n            uint256 productId = purchasedProductIds[i];\r\n            userDetails[i] = products[productId];\r\n        }\r\n\r\n        return userDetails;\r\n    }\r\n}\r\n "
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 360,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 362,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 366,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 370,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 374,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Simplify/productStore.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Simplify/productStore.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Simplify/productStore.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Simplify/productStore.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Simplify/productStore.sol": {
				"ProductStore": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "productId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPaid",
									"type": "uint256"
								}
							],
							"name": "BuyProduct",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "addProduct",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_productId",
									"type": "uint256"
								}
							],
							"name": "buyProduct",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserProductDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct ProductStore.Product[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextProductId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "products",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userPurchases",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Simplify/productStore.sol\":292:2271  contract ProductStore is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Simplify/productStore.sol\":807:919  constructor(address _tokenAddress) ERC721(\"ProductBill\", \"PBL\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x50726f6475637442696c6c000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x50424c0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Simplify/productStore.sol\":897:910  _tokenAddress */\n  dup1\n    /* \"contracts/Simplify/productStore.sol\":882:887  token */\n  0x07\n  0x00\n    /* \"contracts/Simplify/productStore.sol\":882:911  token = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Simplify/productStore.sol\":807:919  constructor(address _tokenAddress) ERC721(\"ProductBill\", \"PBL\") {... */\n  pop\n    /* \"contracts/Simplify/productStore.sol\":292:2271  contract ProductStore is ERC721, Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_53\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_55\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_56:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_58\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_61\n  tag_21\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":932:1051   */\ntag_60:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_62\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_67:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_69\n  tag_29\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1909:1993   */\ntag_68:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_74\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2624:2663   */\n  tag_75\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_79\n    /* \"#utility.yul\":3013:3047   */\n  tag_80\n    /* \"#utility.yul\":3022:3046   */\n  tag_81\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_84\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3312:3403   */\n  tag_85\n    /* \"#utility.yul\":3361:3402   */\n  tag_86\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_89\n  tag_40\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3613:3678   */\n  tag_90\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_92:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_95\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_92)\ntag_94:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_98\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4101:4130   */\n  tag_99\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_100:\n    /* \"#utility.yul\":4328:4408   */\n  tag_101\n    /* \"#utility.yul\":4384:4406   */\n  tag_102\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_97:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_105\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_107\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_109\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_111\n  tag_28\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5233:5289   */\ntag_110:\n    /* \"#utility.yul\":5313:5351   */\n  tag_112\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5398:5465   */\n  tag_113\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_115\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_116:\n    /* \"#utility.yul\":6339:6406   */\n  tag_117\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_114)\n    /* \"#utility.yul\":5560:6178   */\ntag_115:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_118\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_119:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_123\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_122:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_114:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Simplify/productStore.sol\":292:2271  contract ProductStore is ERC721, Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Simplify/productStore.sol\":292:2271  contract ProductStore is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7acc0b20\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcf2c0334\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x7acc0b20\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8642269e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb15247d9\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x23b872dd\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4de91a63\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x019d2fbf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Simplify/productStore.sol\":1802:2268  function getUserProductDetails(address user) external view returns (Product[] memory) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/Simplify/productStore.sol\":770:798  uint256 public nextProductId */\n    tag_10:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/Simplify/productStore.sol\":661:704  mapping(uint256 => Product) public products */\n    tag_14:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Simplify/productStore.sol\":1131:1794  function buyProduct(uint256 _productId) external {... */\n    tag_15:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_18:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/Simplify/productStore.sol\":927:1123  function addProduct(string memory _name, uint256 _price) external onlyOwner {... */\n    tag_19:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_20:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_21:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Simplify/productStore.sol\":711:761  mapping(address => uint256[]) public userPurchases */\n    tag_22:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_23:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/Simplify/productStore.sol\":340:359  IERC20 public token */\n    tag_25:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Simplify/productStore.sol\":1802:2268  function getUserProductDetails(address user) external view returns (Product[] memory) {... */\n    tag_32:\n        /* \"contracts/Simplify/productStore.sol\":1870:1886  Product[] memory */\n      0x60\n        /* \"contracts/Simplify/productStore.sol\":1899:1935  uint256[] memory purchasedProductIds */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1938:1951  userPurchases */\n      0x0a\n        /* \"contracts/Simplify/productStore.sol\":1938:1957  userPurchases[user] */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1952:1956  user */\n      dup5\n        /* \"contracts/Simplify/productStore.sol\":1938:1957  userPurchases[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Simplify/productStore.sol\":1899:1957  uint256[] memory purchasedProductIds = userPurchases[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_124:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_124\n      jumpi\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1968:1996  Product[] memory userDetails */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":2013:2032  purchasedProductIds */\n      dup2\n        /* \"contracts/Simplify/productStore.sol\":2013:2039  purchasedProductIds.length */\n      mload\n        /* \"contracts/Simplify/productStore.sol\":1999:2040  new Product[](purchasedProductIds.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_125\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n    tag_125:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup2\n      0x20\n      add\n    tag_129:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_129\n      jumpi\n      swap1\n      pop\n    tag_128:\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1968:2040  Product[] memory userDetails = new Product[](purchasedProductIds.length) */\n      swap1\n      pop\n        /* \"contracts/Simplify/productStore.sol\":2058:2067  uint256 i */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":2053:2230  for (uint256 i = 0; i < purchasedProductIds.length; i++) {... */\n    tag_132:\n        /* \"contracts/Simplify/productStore.sol\":2077:2096  purchasedProductIds */\n      dup3\n        /* \"contracts/Simplify/productStore.sol\":2077:2103  purchasedProductIds.length */\n      mload\n        /* \"contracts/Simplify/productStore.sol\":2073:2074  i */\n      dup2\n        /* \"contracts/Simplify/productStore.sol\":2073:2103  i < purchasedProductIds.length */\n      lt\n        /* \"contracts/Simplify/productStore.sol\":2053:2230  for (uint256 i = 0; i < purchasedProductIds.length; i++) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/Simplify/productStore.sol\":2125:2142  uint256 productId */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":2145:2164  purchasedProductIds */\n      dup4\n        /* \"contracts/Simplify/productStore.sol\":2165:2166  i */\n      dup3\n        /* \"contracts/Simplify/productStore.sol\":2145:2167  purchasedProductIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_135\n      jumpi\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n    tag_135:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Simplify/productStore.sol\":2125:2167  uint256 productId = purchasedProductIds[i] */\n      swap1\n      pop\n        /* \"contracts/Simplify/productStore.sol\":2199:2207  products */\n      0x09\n        /* \"contracts/Simplify/productStore.sol\":2199:2218  products[productId] */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":2208:2217  productId */\n      dup3\n        /* \"contracts/Simplify/productStore.sol\":2199:2218  products[productId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Simplify/productStore.sol\":2182:2218  userDetails[i] = products[productId] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_139\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Simplify/productStore.sol\":2182:2193  userDetails */\n      dup4\n        /* \"contracts/Simplify/productStore.sol\":2194:2195  i */\n      dup4\n        /* \"contracts/Simplify/productStore.sol\":2182:2196  userDetails[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_145\n      tag_137\n      jump\t// in\n    tag_145:\n    tag_144:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Simplify/productStore.sol\":2182:2218  userDetails[i] = products[productId] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Simplify/productStore.sol\":2110:2230  {... */\n      pop\n        /* \"contracts/Simplify/productStore.sol\":2105:2108  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Simplify/productStore.sol\":2053:2230  for (uint256 i = 0; i < purchasedProductIds.length; i++) {... */\n      jump(tag_132)\n    tag_133:\n      pop\n        /* \"contracts/Simplify/productStore.sol\":2249:2260  userDetails */\n      dup1\n        /* \"contracts/Simplify/productStore.sol\":2242:2260  return userDetails */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1802:2268  function getUserProductDetails(address user) external view returns (Product[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_147\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_148\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_139\n      jump\t// in\n    tag_152:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_139\n      jump\t// in\n    tag_153:\n      dup1\n      iszero\n      tag_154\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_155\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_154)\n    tag_155:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_156:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_156\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_158:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Simplify/productStore.sol\":770:798  uint256 public nextProductId */\n    tag_63:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Simplify/productStore.sol\":661:704  mapping(uint256 => Product) public products */\n    tag_78:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_189\n      swap1\n      tag_139\n      jump\t// in\n    tag_189:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_139\n      jump\t// in\n    tag_190:\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/Simplify/productStore.sol\":1131:1794  function buyProduct(uint256 _productId) external {... */\n    tag_83:\n        /* \"contracts/Simplify/productStore.sol\":1191:1214  Product storage product */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1217:1225  products */\n      0x09\n        /* \"contracts/Simplify/productStore.sol\":1217:1237  products[_productId] */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1226:1236  _productId */\n      dup4\n        /* \"contracts/Simplify/productStore.sol\":1217:1237  products[_productId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Simplify/productStore.sol\":1191:1237  Product storage product = products[_productId] */\n      swap1\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1270:1271  0 */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1256:1263  product */\n      dup2\n        /* \"contracts/Simplify/productStore.sol\":1256:1266  product.id */\n      0x00\n      add\n      sload\n        /* \"contracts/Simplify/productStore.sol\":1256:1271  product.id != 0 */\n      sub\n        /* \"contracts/Simplify/productStore.sol\":1248:1298  require(product.id != 0, \"Product does not exist\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/Simplify/productStore.sol\":1317:1322  token */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Simplify/productStore.sol\":1317:1335  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Simplify/productStore.sol\":1336:1346  msg.sender */\n      caller\n        /* \"contracts/Simplify/productStore.sol\":1356:1360  this */\n      address\n        /* \"contracts/Simplify/productStore.sol\":1377:1383  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Simplify/productStore.sol\":1363:1370  product */\n      dup6\n        /* \"contracts/Simplify/productStore.sol\":1363:1376  product.price */\n      0x02\n      add\n      sload\n        /* \"contracts/Simplify/productStore.sol\":1363:1383  product.price*10**18 */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/Simplify/productStore.sol\":1317:1384  token.transferFrom(msg.sender, address(this), product.price*10**18) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/Simplify/productStore.sol\":1309:1410  require(token.transferFrom(msg.sender, address(this), product.price*10**18), \"Token transfer failed\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/Simplify/productStore.sol\":1511:1525  uint256 billId */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1528:1546  _billIds.current() */\n      tag_209\n        /* \"contracts/Simplify/productStore.sol\":1528:1536  _billIds */\n      0x08\n        /* \"contracts/Simplify/productStore.sol\":1528:1544  _billIds.current */\n      tag_210\n        /* \"contracts/Simplify/productStore.sol\":1528:1546  _billIds.current() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/Simplify/productStore.sol\":1511:1546  uint256 billId = _billIds.current() */\n      swap1\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1557:1586  _safeMint(msg.sender, billId) */\n      tag_211\n        /* \"contracts/Simplify/productStore.sol\":1567:1577  msg.sender */\n      caller\n        /* \"contracts/Simplify/productStore.sol\":1579:1585  billId */\n      dup3\n        /* \"contracts/Simplify/productStore.sol\":1557:1566  _safeMint */\n      tag_212\n        /* \"contracts/Simplify/productStore.sol\":1557:1586  _safeMint(msg.sender, billId) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Simplify/productStore.sol\":1599:1619  _billIds.increment() */\n      tag_213\n        /* \"contracts/Simplify/productStore.sol\":1599:1607  _billIds */\n      0x08\n        /* \"contracts/Simplify/productStore.sol\":1599:1617  _billIds.increment */\n      tag_214\n        /* \"contracts/Simplify/productStore.sol\":1599:1619  _billIds.increment() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/Simplify/productStore.sol\":1677:1690  userPurchases */\n      0x0a\n        /* \"contracts/Simplify/productStore.sol\":1677:1702  userPurchases[msg.sender] */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1691:1701  msg.sender */\n      caller\n        /* \"contracts/Simplify/productStore.sol\":1677:1702  userPurchases[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Simplify/productStore.sol\":1708:1718  _productId */\n      dup4\n        /* \"contracts/Simplify/productStore.sol\":1677:1719  userPurchases[msg.sender].push(_productId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/Simplify/productStore.sol\":1748:1758  msg.sender */\n      caller\n        /* \"contracts/Simplify/productStore.sol\":1737:1786  BuyProduct(msg.sender, _productId, product.price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52e9b4b2677873f4a0e6ac637221c8e8cfd2149accd54695cb8fdaf9491ddecc\n        /* \"contracts/Simplify/productStore.sol\":1760:1770  _productId */\n      dup5\n        /* \"contracts/Simplify/productStore.sol\":1772:1779  product */\n      dup5\n        /* \"contracts/Simplify/productStore.sol\":1772:1785  product.price */\n      0x02\n      add\n      sload\n        /* \"contracts/Simplify/productStore.sol\":1737:1786  BuyProduct(msg.sender, _productId, product.price) */\n      mload(0x40)\n      tag_216\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Simplify/productStore.sol\":1180:1794  {... */\n      pop\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1131:1794  function buyProduct(uint256 _productId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_220\n      swap1\n      tag_139\n      jump\t// in\n    tag_220:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_139\n      jump\t// in\n    tag_221:\n      dup1\n      iszero\n      tag_222\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_223\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_222)\n    tag_223:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_224:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_224\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Simplify/productStore.sol\":927:1123  function addProduct(string memory _name, uint256 _price) external onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/Simplify/productStore.sol\":1014:1031  uint256 productId */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1034:1047  nextProductId */\n      0x0b\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1034:1049  nextProductId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/Simplify/productStore.sol\":1014:1049  uint256 productId = nextProductId++ */\n      swap1\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1082:1115  Product(productId, _name, _price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Simplify/productStore.sol\":1090:1099  productId */\n      dup3\n        /* \"contracts/Simplify/productStore.sol\":1082:1115  Product(productId, _name, _price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Simplify/productStore.sol\":1101:1106  _name */\n      dup5\n        /* \"contracts/Simplify/productStore.sol\":1082:1115  Product(productId, _name, _price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Simplify/productStore.sol\":1108:1114  _price */\n      dup4\n        /* \"contracts/Simplify/productStore.sol\":1082:1115  Product(productId, _name, _price) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1060:1068  products */\n      0x09\n        /* \"contracts/Simplify/productStore.sol\":1060:1079  products[productId] */\n      0x00\n        /* \"contracts/Simplify/productStore.sol\":1069:1078  productId */\n      dup4\n        /* \"contracts/Simplify/productStore.sol\":1060:1079  products[productId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Simplify/productStore.sol\":1060:1115  products[productId] = Product(productId, _name, _price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/Simplify/productStore.sol\":1003:1123  {... */\n      pop\n        /* \"contracts/Simplify/productStore.sol\":927:1123  function addProduct(string memory _name, uint256 _price) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_241:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_244\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_245)\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Simplify/productStore.sol\":711:761  mapping(address => uint256[]) public userPurchases */\n    tag_108:\n      mstore(0x20, 0x0a)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Simplify/productStore.sol\":340:359  IERC20 public token */\n    tag_119:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_281\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_294\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      0x01\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_303\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_308\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_307)\n    tag_308:\n      0x60\n      swap2\n      pop\n    tag_307:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_317\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_318\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_319\n      jumpi\n      tag_320\n      tag_127\n      jump\t// in\n    tag_320:\n    tag_319:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_321\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_321:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_324\n      jumpi\n      tag_325\n      tag_326\n      jump\t// in\n    tag_325:\n    tag_324:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_330\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_333\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_334\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap3\n      swap2\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_349\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_354\n      jumpi\n      tag_355\n      tag_326\n      jump\t// in\n    tag_355:\n    tag_354:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_357\n      jumpi\n      tag_358\n      tag_326\n      jump\t// in\n    tag_358:\n    tag_357:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_360\n      jumpi\n      tag_361\n      tag_326\n      jump\t// in\n    tag_361:\n    tag_360:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_363\n      jumpi\n      tag_364\n      tag_326\n      jump\t// in\n    tag_364:\n    tag_363:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_366\n      jumpi\n      tag_367\n      tag_326\n      jump\t// in\n    tag_367:\n    tag_366:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_369\n      jumpi\n      tag_370\n      tag_326\n      jump\t// in\n    tag_370:\n    tag_369:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_373\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_374\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_375\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_376\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_377\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_379\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_380\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n    tag_131:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_384:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_385:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_386:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_387:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_388:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_471\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_387\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_389:\n        /* \"#utility.yul\":641:665   */\n      tag_473\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_388\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_474:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_390:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_476\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_389\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_31:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_479\n      tag_385\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":917:1036   */\n    tag_478:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_480\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_390\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1315   */\n    tag_391:\n        /* \"#utility.yul\":1268:1274   */\n      0x00\n        /* \"#utility.yul\":1302:1307   */\n      dup2\n        /* \"#utility.yul\":1296:1308   */\n      mload\n        /* \"#utility.yul\":1286:1308   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1530   */\n    tag_392:\n        /* \"#utility.yul\":1445:1456   */\n      0x00\n        /* \"#utility.yul\":1479:1485   */\n      dup3\n        /* \"#utility.yul\":1474:1477   */\n      dup3\n        /* \"#utility.yul\":1467:1486   */\n      mstore\n        /* \"#utility.yul\":1519:1523   */\n      0x20\n        /* \"#utility.yul\":1514:1517   */\n      dup3\n        /* \"#utility.yul\":1510:1524   */\n      add\n        /* \"#utility.yul\":1495:1524   */\n      swap1\n      pop\n        /* \"#utility.yul\":1321:1530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1536:1693   */\n    tag_393:\n        /* \"#utility.yul\":1628:1632   */\n      0x00\n        /* \"#utility.yul\":1651:1654   */\n      dup2\n        /* \"#utility.yul\":1643:1654   */\n      swap1\n      pop\n        /* \"#utility.yul\":1681:1685   */\n      0x20\n        /* \"#utility.yul\":1676:1679   */\n      dup3\n        /* \"#utility.yul\":1672:1686   */\n      add\n        /* \"#utility.yul\":1664:1686   */\n      swap1\n      pop\n        /* \"#utility.yul\":1536:1693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:1776   */\n    tag_394:\n        /* \"#utility.yul\":1736:1743   */\n      0x00\n        /* \"#utility.yul\":1765:1770   */\n      dup2\n        /* \"#utility.yul\":1754:1770   */\n      swap1\n      pop\n        /* \"#utility.yul\":1699:1776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1782:1890   */\n    tag_395:\n        /* \"#utility.yul\":1859:1883   */\n      tag_486\n        /* \"#utility.yul\":1877:1882   */\n      dup2\n        /* \"#utility.yul\":1859:1883   */\n      tag_394\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":1854:1857   */\n      dup3\n        /* \"#utility.yul\":1847:1884   */\n      mstore\n        /* \"#utility.yul\":1782:1890   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1896:1995   */\n    tag_396:\n        /* \"#utility.yul\":1948:1954   */\n      0x00\n        /* \"#utility.yul\":1982:1987   */\n      dup2\n        /* \"#utility.yul\":1976:1988   */\n      mload\n        /* \"#utility.yul\":1966:1988   */\n      swap1\n      pop\n        /* \"#utility.yul\":1896:1995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2160   */\n    tag_397:\n        /* \"#utility.yul\":2075:2086   */\n      0x00\n        /* \"#utility.yul\":2109:2115   */\n      dup3\n        /* \"#utility.yul\":2104:2107   */\n      dup3\n        /* \"#utility.yul\":2097:2116   */\n      mstore\n        /* \"#utility.yul\":2149:2153   */\n      0x20\n        /* \"#utility.yul\":2144:2147   */\n      dup3\n        /* \"#utility.yul\":2140:2154   */\n      add\n        /* \"#utility.yul\":2125:2154   */\n      swap1\n      pop\n        /* \"#utility.yul\":2001:2160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2412   */\n    tag_398:\n        /* \"#utility.yul\":2247:2248   */\n      0x00\n        /* \"#utility.yul\":2257:2370   */\n    tag_490:\n        /* \"#utility.yul\":2271:2277   */\n      dup4\n        /* \"#utility.yul\":2268:2269   */\n      dup2\n        /* \"#utility.yul\":2265:2278   */\n      lt\n        /* \"#utility.yul\":2257:2370   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":2356:2357   */\n      dup1\n        /* \"#utility.yul\":2351:2354   */\n      dup3\n        /* \"#utility.yul\":2347:2358   */\n      add\n        /* \"#utility.yul\":2341:2359   */\n      mload\n        /* \"#utility.yul\":2337:2338   */\n      dup2\n        /* \"#utility.yul\":2332:2335   */\n      dup5\n        /* \"#utility.yul\":2328:2339   */\n      add\n        /* \"#utility.yul\":2321:2360   */\n      mstore\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2290:2291   */\n      dup2\n        /* \"#utility.yul\":2286:2296   */\n      add\n        /* \"#utility.yul\":2281:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2257:2370   */\n      jump(tag_490)\n    tag_492:\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2395:2401   */\n      dup5\n        /* \"#utility.yul\":2390:2393   */\n      dup5\n        /* \"#utility.yul\":2386:2402   */\n      add\n        /* \"#utility.yul\":2379:2406   */\n      mstore\n        /* \"#utility.yul\":2228:2412   */\n      pop\n        /* \"#utility.yul\":2166:2412   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2418:2520   */\n    tag_399:\n        /* \"#utility.yul\":2459:2465   */\n      0x00\n        /* \"#utility.yul\":2510:2512   */\n      0x1f\n        /* \"#utility.yul\":2506:2513   */\n      not\n        /* \"#utility.yul\":2501:2503   */\n      0x1f\n        /* \"#utility.yul\":2494:2499   */\n      dup4\n        /* \"#utility.yul\":2490:2504   */\n      add\n        /* \"#utility.yul\":2486:2514   */\n      and\n        /* \"#utility.yul\":2476:2514   */\n      swap1\n      pop\n        /* \"#utility.yul\":2418:2520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2883   */\n    tag_400:\n        /* \"#utility.yul\":2604:2607   */\n      0x00\n        /* \"#utility.yul\":2632:2671   */\n      tag_495\n        /* \"#utility.yul\":2665:2670   */\n      dup3\n        /* \"#utility.yul\":2632:2671   */\n      tag_396\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":2687:2748   */\n      tag_496\n        /* \"#utility.yul\":2741:2747   */\n      dup2\n        /* \"#utility.yul\":2736:2739   */\n      dup6\n        /* \"#utility.yul\":2687:2748   */\n      tag_397\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":2680:2748   */\n      swap4\n      pop\n        /* \"#utility.yul\":2757:2822   */\n      tag_497\n        /* \"#utility.yul\":2815:2821   */\n      dup2\n        /* \"#utility.yul\":2810:2813   */\n      dup6\n        /* \"#utility.yul\":2803:2807   */\n      0x20\n        /* \"#utility.yul\":2796:2801   */\n      dup7\n        /* \"#utility.yul\":2792:2808   */\n      add\n        /* \"#utility.yul\":2757:2822   */\n      tag_398\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":2847:2876   */\n      tag_498\n        /* \"#utility.yul\":2869:2875   */\n      dup2\n        /* \"#utility.yul\":2847:2876   */\n      tag_399\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":2842:2845   */\n      dup5\n        /* \"#utility.yul\":2838:2877   */\n      add\n        /* \"#utility.yul\":2831:2877   */\n      swap2\n      pop\n        /* \"#utility.yul\":2608:2883   */\n      pop\n        /* \"#utility.yul\":2526:2883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2955:3724   */\n    tag_401:\n        /* \"#utility.yul\":3064:3067   */\n      0x00\n        /* \"#utility.yul\":3100:3104   */\n      0x60\n        /* \"#utility.yul\":3095:3098   */\n      dup4\n        /* \"#utility.yul\":3091:3105   */\n      add\n        /* \"#utility.yul\":3185:3189   */\n      0x00\n        /* \"#utility.yul\":3178:3183   */\n      dup4\n        /* \"#utility.yul\":3174:3190   */\n      add\n        /* \"#utility.yul\":3168:3191   */\n      mload\n        /* \"#utility.yul\":3204:3267   */\n      tag_500\n        /* \"#utility.yul\":3261:3265   */\n      0x00\n        /* \"#utility.yul\":3256:3259   */\n      dup7\n        /* \"#utility.yul\":3252:3266   */\n      add\n        /* \"#utility.yul\":3238:3250   */\n      dup3\n        /* \"#utility.yul\":3204:3267   */\n      tag_395\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":3115:3277   */\n      pop\n        /* \"#utility.yul\":3359:3363   */\n      0x20\n        /* \"#utility.yul\":3352:3357   */\n      dup4\n        /* \"#utility.yul\":3348:3364   */\n      add\n        /* \"#utility.yul\":3342:3365   */\n      mload\n        /* \"#utility.yul\":3412:3415   */\n      dup5\n        /* \"#utility.yul\":3406:3410   */\n      dup3\n        /* \"#utility.yul\":3402:3416   */\n      sub\n        /* \"#utility.yul\":3395:3399   */\n      0x20\n        /* \"#utility.yul\":3390:3393   */\n      dup7\n        /* \"#utility.yul\":3386:3400   */\n      add\n        /* \"#utility.yul\":3379:3417   */\n      mstore\n        /* \"#utility.yul\":3438:3511   */\n      tag_501\n        /* \"#utility.yul\":3506:3510   */\n      dup3\n        /* \"#utility.yul\":3492:3504   */\n      dup3\n        /* \"#utility.yul\":3438:3511   */\n      tag_400\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3430:3511   */\n      swap2\n      pop\n        /* \"#utility.yul\":3287:3522   */\n      pop\n        /* \"#utility.yul\":3605:3609   */\n      0x40\n        /* \"#utility.yul\":3598:3603   */\n      dup4\n        /* \"#utility.yul\":3594:3610   */\n      add\n        /* \"#utility.yul\":3588:3611   */\n      mload\n        /* \"#utility.yul\":3624:3687   */\n      tag_502\n        /* \"#utility.yul\":3681:3685   */\n      0x40\n        /* \"#utility.yul\":3676:3679   */\n      dup7\n        /* \"#utility.yul\":3672:3686   */\n      add\n        /* \"#utility.yul\":3658:3670   */\n      dup3\n        /* \"#utility.yul\":3624:3687   */\n      tag_395\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":3532:3697   */\n      pop\n        /* \"#utility.yul\":3714:3718   */\n      dup1\n        /* \"#utility.yul\":3707:3718   */\n      swap2\n      pop\n        /* \"#utility.yul\":3069:3724   */\n      pop\n        /* \"#utility.yul\":2955:3724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3730:3986   */\n    tag_402:\n        /* \"#utility.yul\":3849:3859   */\n      0x00\n        /* \"#utility.yul\":3884:3980   */\n      tag_504\n        /* \"#utility.yul\":3976:3979   */\n      dup4\n        /* \"#utility.yul\":3968:3974   */\n      dup4\n        /* \"#utility.yul\":3884:3980   */\n      tag_401\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":3870:3980   */\n      swap1\n      pop\n        /* \"#utility.yul\":3730:3986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3992:4130   */\n    tag_403:\n        /* \"#utility.yul\":4087:4091   */\n      0x00\n        /* \"#utility.yul\":4119:4123   */\n      0x20\n        /* \"#utility.yul\":4114:4117   */\n      dup3\n        /* \"#utility.yul\":4110:4124   */\n      add\n        /* \"#utility.yul\":4102:4124   */\n      swap1\n      pop\n        /* \"#utility.yul\":3992:4130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4206:5317   */\n    tag_404:\n        /* \"#utility.yul\":4375:4378   */\n      0x00\n        /* \"#utility.yul\":4404:4483   */\n      tag_507\n        /* \"#utility.yul\":4477:4482   */\n      dup3\n        /* \"#utility.yul\":4404:4483   */\n      tag_391\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4499:4610   */\n      tag_508\n        /* \"#utility.yul\":4603:4609   */\n      dup2\n        /* \"#utility.yul\":4598:4601   */\n      dup6\n        /* \"#utility.yul\":4499:4610   */\n      tag_392\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":4492:4610   */\n      swap4\n      pop\n        /* \"#utility.yul\":4636:4639   */\n      dup4\n        /* \"#utility.yul\":4681:4685   */\n      0x20\n        /* \"#utility.yul\":4673:4679   */\n      dup3\n        /* \"#utility.yul\":4669:4686   */\n      mul\n        /* \"#utility.yul\":4664:4667   */\n      dup6\n        /* \"#utility.yul\":4660:4687   */\n      add\n        /* \"#utility.yul\":4711:4792   */\n      tag_509\n        /* \"#utility.yul\":4786:4791   */\n      dup6\n        /* \"#utility.yul\":4711:4792   */\n      tag_393\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":4815:4822   */\n      dup1\n        /* \"#utility.yul\":4846:4847   */\n      0x00\n        /* \"#utility.yul\":4831:5272   */\n    tag_510:\n        /* \"#utility.yul\":4856:4862   */\n      dup6\n        /* \"#utility.yul\":4853:4854   */\n      dup2\n        /* \"#utility.yul\":4850:4863   */\n      lt\n        /* \"#utility.yul\":4831:5272   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":4927:4936   */\n      dup5\n        /* \"#utility.yul\":4921:4925   */\n      dup5\n        /* \"#utility.yul\":4917:4937   */\n      sub\n        /* \"#utility.yul\":4912:4915   */\n      dup10\n        /* \"#utility.yul\":4905:4938   */\n      mstore\n        /* \"#utility.yul\":4978:4984   */\n      dup2\n        /* \"#utility.yul\":4972:4985   */\n      mload\n        /* \"#utility.yul\":5006:5120   */\n      tag_513\n        /* \"#utility.yul\":5115:5119   */\n      dup6\n        /* \"#utility.yul\":5100:5113   */\n      dup3\n        /* \"#utility.yul\":5006:5120   */\n      tag_402\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":4998:5120   */\n      swap5\n      pop\n        /* \"#utility.yul\":5143:5228   */\n      tag_514\n        /* \"#utility.yul\":5221:5227   */\n      dup4\n        /* \"#utility.yul\":5143:5228   */\n      tag_403\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":5133:5228   */\n      swap3\n      pop\n        /* \"#utility.yul\":5257:5261   */\n      0x20\n        /* \"#utility.yul\":5252:5255   */\n      dup11\n        /* \"#utility.yul\":5248:5262   */\n      add\n        /* \"#utility.yul\":5241:5262   */\n      swap10\n      pop\n        /* \"#utility.yul\":4891:5272   */\n      pop\n        /* \"#utility.yul\":4878:4879   */\n      0x01\n        /* \"#utility.yul\":4875:4876   */\n      dup2\n        /* \"#utility.yul\":4871:4880   */\n      add\n        /* \"#utility.yul\":4866:4880   */\n      swap1\n      pop\n        /* \"#utility.yul\":4831:5272   */\n      jump(tag_510)\n    tag_512:\n        /* \"#utility.yul\":4835:4849   */\n      pop\n        /* \"#utility.yul\":5288:5292   */\n      dup3\n        /* \"#utility.yul\":5281:5292   */\n      swap8\n      pop\n        /* \"#utility.yul\":5308:5311   */\n      dup8\n        /* \"#utility.yul\":5301:5311   */\n      swap6\n      pop\n        /* \"#utility.yul\":4380:5317   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4206:5317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5323:5796   */\n    tag_34:\n        /* \"#utility.yul\":5516:5520   */\n      0x00\n        /* \"#utility.yul\":5554:5556   */\n      0x20\n        /* \"#utility.yul\":5543:5552   */\n      dup3\n        /* \"#utility.yul\":5539:5557   */\n      add\n        /* \"#utility.yul\":5531:5557   */\n      swap1\n      pop\n        /* \"#utility.yul\":5603:5612   */\n      dup2\n        /* \"#utility.yul\":5597:5601   */\n      dup2\n        /* \"#utility.yul\":5593:5613   */\n      sub\n        /* \"#utility.yul\":5589:5590   */\n      0x00\n        /* \"#utility.yul\":5578:5587   */\n      dup4\n        /* \"#utility.yul\":5574:5591   */\n      add\n        /* \"#utility.yul\":5567:5614   */\n      mstore\n        /* \"#utility.yul\":5631:5789   */\n      tag_516\n        /* \"#utility.yul\":5784:5788   */\n      dup2\n        /* \"#utility.yul\":5775:5781   */\n      dup5\n        /* \"#utility.yul\":5631:5789   */\n      tag_404\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5623:5789   */\n      swap1\n      pop\n        /* \"#utility.yul\":5323:5796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5802:5951   */\n    tag_405:\n        /* \"#utility.yul\":5838:5845   */\n      0x00\n        /* \"#utility.yul\":5878:5944   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5871:5876   */\n      dup3\n        /* \"#utility.yul\":5867:5945   */\n      and\n        /* \"#utility.yul\":5856:5945   */\n      swap1\n      pop\n        /* \"#utility.yul\":5802:5951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5957:6077   */\n    tag_406:\n        /* \"#utility.yul\":6029:6052   */\n      tag_519\n        /* \"#utility.yul\":6046:6051   */\n      dup2\n        /* \"#utility.yul\":6029:6052   */\n      tag_405\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":6022:6027   */\n      dup2\n        /* \"#utility.yul\":6019:6053   */\n      eq\n        /* \"#utility.yul\":6009:6071   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":6067:6068   */\n      0x00\n        /* \"#utility.yul\":6064:6065   */\n      dup1\n        /* \"#utility.yul\":6057:6069   */\n      revert\n        /* \"#utility.yul\":6009:6071   */\n    tag_520:\n        /* \"#utility.yul\":5957:6077   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6220   */\n    tag_407:\n        /* \"#utility.yul\":6128:6133   */\n      0x00\n        /* \"#utility.yul\":6166:6172   */\n      dup2\n        /* \"#utility.yul\":6153:6173   */\n      calldataload\n        /* \"#utility.yul\":6144:6173   */\n      swap1\n      pop\n        /* \"#utility.yul\":6182:6214   */\n      tag_522\n        /* \"#utility.yul\":6208:6213   */\n      dup2\n        /* \"#utility.yul\":6182:6214   */\n      tag_406\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6083:6220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6226:6553   */\n    tag_37:\n        /* \"#utility.yul\":6284:6290   */\n      0x00\n        /* \"#utility.yul\":6333:6335   */\n      0x20\n        /* \"#utility.yul\":6321:6330   */\n      dup3\n        /* \"#utility.yul\":6312:6319   */\n      dup5\n        /* \"#utility.yul\":6308:6331   */\n      sub\n        /* \"#utility.yul\":6304:6336   */\n      slt\n        /* \"#utility.yul\":6301:6420   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":6339:6418   */\n      tag_525\n      tag_385\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":6301:6420   */\n    tag_524:\n        /* \"#utility.yul\":6459:6460   */\n      0x00\n        /* \"#utility.yul\":6484:6536   */\n      tag_526\n        /* \"#utility.yul\":6528:6535   */\n      dup5\n        /* \"#utility.yul\":6519:6525   */\n      dup3\n        /* \"#utility.yul\":6508:6517   */\n      dup6\n        /* \"#utility.yul\":6504:6526   */\n      add\n        /* \"#utility.yul\":6484:6536   */\n      tag_407\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":6474:6536   */\n      swap2\n      pop\n        /* \"#utility.yul\":6430:6546   */\n      pop\n        /* \"#utility.yul\":6226:6553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6559:6649   */\n    tag_408:\n        /* \"#utility.yul\":6593:6600   */\n      0x00\n        /* \"#utility.yul\":6636:6641   */\n      dup2\n        /* \"#utility.yul\":6629:6642   */\n      iszero\n        /* \"#utility.yul\":6622:6643   */\n      iszero\n        /* \"#utility.yul\":6611:6643   */\n      swap1\n      pop\n        /* \"#utility.yul\":6559:6649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6655:6764   */\n    tag_409:\n        /* \"#utility.yul\":6736:6757   */\n      tag_529\n        /* \"#utility.yul\":6751:6756   */\n      dup2\n        /* \"#utility.yul\":6736:6757   */\n      tag_408\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6731:6734   */\n      dup3\n        /* \"#utility.yul\":6724:6758   */\n      mstore\n        /* \"#utility.yul\":6655:6764   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6980   */\n    tag_40:\n        /* \"#utility.yul\":6857:6861   */\n      0x00\n        /* \"#utility.yul\":6895:6897   */\n      0x20\n        /* \"#utility.yul\":6884:6893   */\n      dup3\n        /* \"#utility.yul\":6880:6898   */\n      add\n        /* \"#utility.yul\":6872:6898   */\n      swap1\n      pop\n        /* \"#utility.yul\":6908:6973   */\n      tag_531\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6959:6968   */\n      dup4\n        /* \"#utility.yul\":6955:6972   */\n      add\n        /* \"#utility.yul\":6946:6952   */\n      dup5\n        /* \"#utility.yul\":6908:6973   */\n      tag_409\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":6770:6980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6986:7155   */\n    tag_410:\n        /* \"#utility.yul\":7070:7081   */\n      0x00\n        /* \"#utility.yul\":7104:7110   */\n      dup3\n        /* \"#utility.yul\":7099:7102   */\n      dup3\n        /* \"#utility.yul\":7092:7111   */\n      mstore\n        /* \"#utility.yul\":7144:7148   */\n      0x20\n        /* \"#utility.yul\":7139:7142   */\n      dup3\n        /* \"#utility.yul\":7135:7149   */\n      add\n        /* \"#utility.yul\":7120:7149   */\n      swap1\n      pop\n        /* \"#utility.yul\":6986:7155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7161:7538   */\n    tag_411:\n        /* \"#utility.yul\":7249:7252   */\n      0x00\n        /* \"#utility.yul\":7277:7316   */\n      tag_534\n        /* \"#utility.yul\":7310:7315   */\n      dup3\n        /* \"#utility.yul\":7277:7316   */\n      tag_396\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7332:7403   */\n      tag_535\n        /* \"#utility.yul\":7396:7402   */\n      dup2\n        /* \"#utility.yul\":7391:7394   */\n      dup6\n        /* \"#utility.yul\":7332:7403   */\n      tag_410\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7325:7403   */\n      swap4\n      pop\n        /* \"#utility.yul\":7412:7477   */\n      tag_536\n        /* \"#utility.yul\":7470:7476   */\n      dup2\n        /* \"#utility.yul\":7465:7468   */\n      dup6\n        /* \"#utility.yul\":7458:7462   */\n      0x20\n        /* \"#utility.yul\":7451:7456   */\n      dup7\n        /* \"#utility.yul\":7447:7463   */\n      add\n        /* \"#utility.yul\":7412:7477   */\n      tag_398\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":7502:7531   */\n      tag_537\n        /* \"#utility.yul\":7524:7530   */\n      dup2\n        /* \"#utility.yul\":7502:7531   */\n      tag_399\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7497:7500   */\n      dup5\n        /* \"#utility.yul\":7493:7532   */\n      add\n        /* \"#utility.yul\":7486:7532   */\n      swap2\n      pop\n        /* \"#utility.yul\":7253:7538   */\n      pop\n        /* \"#utility.yul\":7161:7538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7544:7857   */\n    tag_44:\n        /* \"#utility.yul\":7657:7661   */\n      0x00\n        /* \"#utility.yul\":7695:7697   */\n      0x20\n        /* \"#utility.yul\":7684:7693   */\n      dup3\n        /* \"#utility.yul\":7680:7698   */\n      add\n        /* \"#utility.yul\":7672:7698   */\n      swap1\n      pop\n        /* \"#utility.yul\":7744:7753   */\n      dup2\n        /* \"#utility.yul\":7738:7742   */\n      dup2\n        /* \"#utility.yul\":7734:7754   */\n      sub\n        /* \"#utility.yul\":7730:7731   */\n      0x00\n        /* \"#utility.yul\":7719:7728   */\n      dup4\n        /* \"#utility.yul\":7715:7732   */\n      add\n        /* \"#utility.yul\":7708:7755   */\n      mstore\n        /* \"#utility.yul\":7772:7850   */\n      tag_539\n        /* \"#utility.yul\":7845:7849   */\n      dup2\n        /* \"#utility.yul\":7836:7842   */\n      dup5\n        /* \"#utility.yul\":7772:7850   */\n      tag_411\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7764:7850   */\n      swap1\n      pop\n        /* \"#utility.yul\":7544:7857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7863:7985   */\n    tag_412:\n        /* \"#utility.yul\":7936:7960   */\n      tag_541\n        /* \"#utility.yul\":7954:7959   */\n      dup2\n        /* \"#utility.yul\":7936:7960   */\n      tag_394\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7929:7934   */\n      dup2\n        /* \"#utility.yul\":7926:7961   */\n      eq\n        /* \"#utility.yul\":7916:7979   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":7975:7976   */\n      0x00\n        /* \"#utility.yul\":7972:7973   */\n      dup1\n        /* \"#utility.yul\":7965:7977   */\n      revert\n        /* \"#utility.yul\":7916:7979   */\n    tag_542:\n        /* \"#utility.yul\":7863:7985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7991:8130   */\n    tag_413:\n        /* \"#utility.yul\":8037:8042   */\n      0x00\n        /* \"#utility.yul\":8075:8081   */\n      dup2\n        /* \"#utility.yul\":8062:8082   */\n      calldataload\n        /* \"#utility.yul\":8053:8082   */\n      swap1\n      pop\n        /* \"#utility.yul\":8091:8124   */\n      tag_544\n        /* \"#utility.yul\":8118:8123   */\n      dup2\n        /* \"#utility.yul\":8091:8124   */\n      tag_412\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":7991:8130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8136:8465   */\n    tag_47:\n        /* \"#utility.yul\":8195:8201   */\n      0x00\n        /* \"#utility.yul\":8244:8246   */\n      0x20\n        /* \"#utility.yul\":8232:8241   */\n      dup3\n        /* \"#utility.yul\":8223:8230   */\n      dup5\n        /* \"#utility.yul\":8219:8242   */\n      sub\n        /* \"#utility.yul\":8215:8247   */\n      slt\n        /* \"#utility.yul\":8212:8331   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":8250:8329   */\n      tag_547\n      tag_385\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8212:8331   */\n    tag_546:\n        /* \"#utility.yul\":8370:8371   */\n      0x00\n        /* \"#utility.yul\":8395:8448   */\n      tag_548\n        /* \"#utility.yul\":8440:8447   */\n      dup5\n        /* \"#utility.yul\":8431:8437   */\n      dup3\n        /* \"#utility.yul\":8420:8429   */\n      dup6\n        /* \"#utility.yul\":8416:8438   */\n      add\n        /* \"#utility.yul\":8395:8448   */\n      tag_413\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8385:8448   */\n      swap2\n      pop\n        /* \"#utility.yul\":8341:8458   */\n      pop\n        /* \"#utility.yul\":8136:8465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8471:8589   */\n    tag_414:\n        /* \"#utility.yul\":8558:8582   */\n      tag_550\n        /* \"#utility.yul\":8576:8581   */\n      dup2\n        /* \"#utility.yul\":8558:8582   */\n      tag_388\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":8553:8556   */\n      dup3\n        /* \"#utility.yul\":8546:8583   */\n      mstore\n        /* \"#utility.yul\":8471:8589   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8595:8817   */\n    tag_50:\n        /* \"#utility.yul\":8688:8692   */\n      0x00\n        /* \"#utility.yul\":8726:8728   */\n      0x20\n        /* \"#utility.yul\":8715:8724   */\n      dup3\n        /* \"#utility.yul\":8711:8729   */\n      add\n        /* \"#utility.yul\":8703:8729   */\n      swap1\n      pop\n        /* \"#utility.yul\":8739:8810   */\n      tag_552\n        /* \"#utility.yul\":8807:8808   */\n      0x00\n        /* \"#utility.yul\":8796:8805   */\n      dup4\n        /* \"#utility.yul\":8792:8809   */\n      add\n        /* \"#utility.yul\":8783:8789   */\n      dup5\n        /* \"#utility.yul\":8739:8810   */\n      tag_414\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":8595:8817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8823:9297   */\n    tag_53:\n        /* \"#utility.yul\":8891:8897   */\n      0x00\n        /* \"#utility.yul\":8899:8905   */\n      dup1\n        /* \"#utility.yul\":8948:8950   */\n      0x40\n        /* \"#utility.yul\":8936:8945   */\n      dup4\n        /* \"#utility.yul\":8927:8934   */\n      dup6\n        /* \"#utility.yul\":8923:8946   */\n      sub\n        /* \"#utility.yul\":8919:8951   */\n      slt\n        /* \"#utility.yul\":8916:9035   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":8954:9033   */\n      tag_555\n      tag_385\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":8916:9035   */\n    tag_554:\n        /* \"#utility.yul\":9074:9075   */\n      0x00\n        /* \"#utility.yul\":9099:9152   */\n      tag_556\n        /* \"#utility.yul\":9144:9151   */\n      dup6\n        /* \"#utility.yul\":9135:9141   */\n      dup3\n        /* \"#utility.yul\":9124:9133   */\n      dup7\n        /* \"#utility.yul\":9120:9142   */\n      add\n        /* \"#utility.yul\":9099:9152   */\n      tag_390\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9089:9152   */\n      swap3\n      pop\n        /* \"#utility.yul\":9045:9162   */\n      pop\n        /* \"#utility.yul\":9201:9203   */\n      0x20\n        /* \"#utility.yul\":9227:9280   */\n      tag_557\n        /* \"#utility.yul\":9272:9279   */\n      dup6\n        /* \"#utility.yul\":9263:9269   */\n      dup3\n        /* \"#utility.yul\":9252:9261   */\n      dup7\n        /* \"#utility.yul\":9248:9270   */\n      add\n        /* \"#utility.yul\":9227:9280   */\n      tag_413\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9217:9280   */\n      swap2\n      pop\n        /* \"#utility.yul\":9172:9290   */\n      pop\n        /* \"#utility.yul\":8823:9297   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9303:9922   */\n    tag_57:\n        /* \"#utility.yul\":9380:9386   */\n      0x00\n        /* \"#utility.yul\":9388:9394   */\n      dup1\n        /* \"#utility.yul\":9396:9402   */\n      0x00\n        /* \"#utility.yul\":9445:9447   */\n      0x60\n        /* \"#utility.yul\":9433:9442   */\n      dup5\n        /* \"#utility.yul\":9424:9431   */\n      dup7\n        /* \"#utility.yul\":9420:9443   */\n      sub\n        /* \"#utility.yul\":9416:9448   */\n      slt\n        /* \"#utility.yul\":9413:9532   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":9451:9530   */\n      tag_560\n      tag_385\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":9413:9532   */\n    tag_559:\n        /* \"#utility.yul\":9571:9572   */\n      0x00\n        /* \"#utility.yul\":9596:9649   */\n      tag_561\n        /* \"#utility.yul\":9641:9648   */\n      dup7\n        /* \"#utility.yul\":9632:9638   */\n      dup3\n        /* \"#utility.yul\":9621:9630   */\n      dup8\n        /* \"#utility.yul\":9617:9639   */\n      add\n        /* \"#utility.yul\":9596:9649   */\n      tag_390\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":9586:9649   */\n      swap4\n      pop\n        /* \"#utility.yul\":9542:9659   */\n      pop\n        /* \"#utility.yul\":9698:9700   */\n      0x20\n        /* \"#utility.yul\":9724:9777   */\n      tag_562\n        /* \"#utility.yul\":9769:9776   */\n      dup7\n        /* \"#utility.yul\":9760:9766   */\n      dup3\n        /* \"#utility.yul\":9749:9758   */\n      dup8\n        /* \"#utility.yul\":9745:9767   */\n      add\n        /* \"#utility.yul\":9724:9777   */\n      tag_390\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":9714:9777   */\n      swap3\n      pop\n        /* \"#utility.yul\":9669:9787   */\n      pop\n        /* \"#utility.yul\":9826:9828   */\n      0x40\n        /* \"#utility.yul\":9852:9905   */\n      tag_563\n        /* \"#utility.yul\":9897:9904   */\n      dup7\n        /* \"#utility.yul\":9888:9894   */\n      dup3\n        /* \"#utility.yul\":9877:9886   */\n      dup8\n        /* \"#utility.yul\":9873:9895   */\n      add\n        /* \"#utility.yul\":9852:9905   */\n      tag_413\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":9842:9905   */\n      swap2\n      pop\n        /* \"#utility.yul\":9797:9915   */\n      pop\n        /* \"#utility.yul\":9303:9922   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9928:10046   */\n    tag_415:\n        /* \"#utility.yul\":10015:10039   */\n      tag_565\n        /* \"#utility.yul\":10033:10038   */\n      dup2\n        /* \"#utility.yul\":10015:10039   */\n      tag_394\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":10010:10013   */\n      dup3\n        /* \"#utility.yul\":10003:10040   */\n      mstore\n        /* \"#utility.yul\":9928:10046   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10052:10274   */\n    tag_65:\n        /* \"#utility.yul\":10145:10149   */\n      0x00\n        /* \"#utility.yul\":10183:10185   */\n      0x20\n        /* \"#utility.yul\":10172:10181   */\n      dup3\n        /* \"#utility.yul\":10168:10186   */\n      add\n        /* \"#utility.yul\":10160:10186   */\n      swap1\n      pop\n        /* \"#utility.yul\":10196:10267   */\n      tag_567\n        /* \"#utility.yul\":10264:10265   */\n      0x00\n        /* \"#utility.yul\":10253:10262   */\n      dup4\n        /* \"#utility.yul\":10249:10266   */\n      add\n        /* \"#utility.yul\":10240:10246   */\n      dup5\n        /* \"#utility.yul\":10196:10267   */\n      tag_415\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":10052:10274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10280:10813   */\n    tag_80:\n        /* \"#utility.yul\":10449:10453   */\n      0x00\n        /* \"#utility.yul\":10487:10489   */\n      0x60\n        /* \"#utility.yul\":10476:10485   */\n      dup3\n        /* \"#utility.yul\":10472:10490   */\n      add\n        /* \"#utility.yul\":10464:10490   */\n      swap1\n      pop\n        /* \"#utility.yul\":10500:10571   */\n      tag_569\n        /* \"#utility.yul\":10568:10569   */\n      0x00\n        /* \"#utility.yul\":10557:10566   */\n      dup4\n        /* \"#utility.yul\":10553:10570   */\n      add\n        /* \"#utility.yul\":10544:10550   */\n      dup7\n        /* \"#utility.yul\":10500:10571   */\n      tag_415\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":10618:10627   */\n      dup2\n        /* \"#utility.yul\":10612:10616   */\n      dup2\n        /* \"#utility.yul\":10608:10628   */\n      sub\n        /* \"#utility.yul\":10603:10605   */\n      0x20\n        /* \"#utility.yul\":10592:10601   */\n      dup4\n        /* \"#utility.yul\":10588:10606   */\n      add\n        /* \"#utility.yul\":10581:10629   */\n      mstore\n        /* \"#utility.yul\":10646:10724   */\n      tag_570\n        /* \"#utility.yul\":10719:10723   */\n      dup2\n        /* \"#utility.yul\":10710:10716   */\n      dup6\n        /* \"#utility.yul\":10646:10724   */\n      tag_411\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":10638:10724   */\n      swap1\n      pop\n        /* \"#utility.yul\":10734:10806   */\n      tag_571\n        /* \"#utility.yul\":10802:10804   */\n      0x40\n        /* \"#utility.yul\":10791:10800   */\n      dup4\n        /* \"#utility.yul\":10787:10805   */\n      add\n        /* \"#utility.yul\":10778:10784   */\n      dup5\n        /* \"#utility.yul\":10734:10806   */\n      tag_415\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":10280:10813   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:10935   */\n    tag_416:\n        /* \"#utility.yul\":10889:10910   */\n      tag_573\n        /* \"#utility.yul\":10904:10909   */\n      dup2\n        /* \"#utility.yul\":10889:10910   */\n      tag_408\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":10882:10887   */\n      dup2\n        /* \"#utility.yul\":10879:10911   */\n      eq\n        /* \"#utility.yul\":10869:10929   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":10925:10926   */\n      0x00\n        /* \"#utility.yul\":10922:10923   */\n      dup1\n        /* \"#utility.yul\":10915:10927   */\n      revert\n        /* \"#utility.yul\":10869:10929   */\n    tag_574:\n        /* \"#utility.yul\":10819:10935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10941:11074   */\n    tag_417:\n        /* \"#utility.yul\":10984:10989   */\n      0x00\n        /* \"#utility.yul\":11022:11028   */\n      dup2\n        /* \"#utility.yul\":11009:11029   */\n      calldataload\n        /* \"#utility.yul\":11000:11029   */\n      swap1\n      pop\n        /* \"#utility.yul\":11038:11068   */\n      tag_576\n        /* \"#utility.yul\":11062:11067   */\n      dup2\n        /* \"#utility.yul\":11038:11068   */\n      tag_416\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":10941:11074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11080:11548   */\n    tag_92:\n        /* \"#utility.yul\":11145:11151   */\n      0x00\n        /* \"#utility.yul\":11153:11159   */\n      dup1\n        /* \"#utility.yul\":11202:11204   */\n      0x40\n        /* \"#utility.yul\":11190:11199   */\n      dup4\n        /* \"#utility.yul\":11181:11188   */\n      dup6\n        /* \"#utility.yul\":11177:11200   */\n      sub\n        /* \"#utility.yul\":11173:11205   */\n      slt\n        /* \"#utility.yul\":11170:11289   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":11208:11287   */\n      tag_579\n      tag_385\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":11170:11289   */\n    tag_578:\n        /* \"#utility.yul\":11328:11329   */\n      0x00\n        /* \"#utility.yul\":11353:11406   */\n      tag_580\n        /* \"#utility.yul\":11398:11405   */\n      dup6\n        /* \"#utility.yul\":11389:11395   */\n      dup3\n        /* \"#utility.yul\":11378:11387   */\n      dup7\n        /* \"#utility.yul\":11374:11396   */\n      add\n        /* \"#utility.yul\":11353:11406   */\n      tag_390\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":11343:11406   */\n      swap3\n      pop\n        /* \"#utility.yul\":11299:11416   */\n      pop\n        /* \"#utility.yul\":11455:11457   */\n      0x20\n        /* \"#utility.yul\":11481:11531   */\n      tag_581\n        /* \"#utility.yul\":11523:11530   */\n      dup6\n        /* \"#utility.yul\":11514:11520   */\n      dup3\n        /* \"#utility.yul\":11503:11512   */\n      dup7\n        /* \"#utility.yul\":11499:11521   */\n      add\n        /* \"#utility.yul\":11481:11531   */\n      tag_417\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":11471:11531   */\n      swap2\n      pop\n        /* \"#utility.yul\":11426:11541   */\n      pop\n        /* \"#utility.yul\":11080:11548   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11554:11671   */\n    tag_418:\n        /* \"#utility.yul\":11663:11664   */\n      0x00\n        /* \"#utility.yul\":11660:11661   */\n      dup1\n        /* \"#utility.yul\":11653:11665   */\n      revert\n        /* \"#utility.yul\":11677:11794   */\n    tag_419:\n        /* \"#utility.yul\":11786:11787   */\n      0x00\n        /* \"#utility.yul\":11783:11784   */\n      dup1\n        /* \"#utility.yul\":11776:11788   */\n      revert\n        /* \"#utility.yul\":11800:11980   */\n    tag_127:\n        /* \"#utility.yul\":11848:11925   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11845:11846   */\n      0x00\n        /* \"#utility.yul\":11838:11926   */\n      mstore\n        /* \"#utility.yul\":11945:11949   */\n      0x41\n        /* \"#utility.yul\":11942:11943   */\n      0x04\n        /* \"#utility.yul\":11935:11950   */\n      mstore\n        /* \"#utility.yul\":11969:11973   */\n      0x24\n        /* \"#utility.yul\":11966:11967   */\n      0x00\n        /* \"#utility.yul\":11959:11974   */\n      revert\n        /* \"#utility.yul\":11986:12267   */\n    tag_420:\n        /* \"#utility.yul\":12069:12096   */\n      tag_586\n        /* \"#utility.yul\":12091:12095   */\n      dup3\n        /* \"#utility.yul\":12069:12096   */\n      tag_399\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":12061:12067   */\n      dup2\n        /* \"#utility.yul\":12057:12097   */\n      add\n        /* \"#utility.yul\":12199:12205   */\n      dup2\n        /* \"#utility.yul\":12187:12197   */\n      dup2\n        /* \"#utility.yul\":12184:12206   */\n      lt\n        /* \"#utility.yul\":12163:12181   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12151:12161   */\n      dup3\n        /* \"#utility.yul\":12148:12182   */\n      gt\n        /* \"#utility.yul\":12145:12207   */\n      or\n        /* \"#utility.yul\":12142:12230   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":12210:12228   */\n      tag_588\n      tag_127\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":12142:12230   */\n    tag_587:\n        /* \"#utility.yul\":12250:12260   */\n      dup1\n        /* \"#utility.yul\":12246:12248   */\n      0x40\n        /* \"#utility.yul\":12239:12261   */\n      mstore\n        /* \"#utility.yul\":12029:12267   */\n      pop\n        /* \"#utility.yul\":11986:12267   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12273:12402   */\n    tag_421:\n        /* \"#utility.yul\":12307:12313   */\n      0x00\n        /* \"#utility.yul\":12334:12354   */\n      tag_590\n      tag_384\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":12324:12354   */\n      swap1\n      pop\n        /* \"#utility.yul\":12363:12396   */\n      tag_591\n        /* \"#utility.yul\":12391:12395   */\n      dup3\n        /* \"#utility.yul\":12383:12389   */\n      dup3\n        /* \"#utility.yul\":12363:12396   */\n      tag_420\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":12273:12402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12408:12716   */\n    tag_422:\n        /* \"#utility.yul\":12470:12474   */\n      0x00\n        /* \"#utility.yul\":12560:12578   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12552:12558   */\n      dup3\n        /* \"#utility.yul\":12549:12579   */\n      gt\n        /* \"#utility.yul\":12546:12602   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":12582:12600   */\n      tag_594\n      tag_127\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":12546:12602   */\n    tag_593:\n        /* \"#utility.yul\":12620:12649   */\n      tag_595\n        /* \"#utility.yul\":12642:12648   */\n      dup3\n        /* \"#utility.yul\":12620:12649   */\n      tag_399\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":12612:12649   */\n      swap1\n      pop\n        /* \"#utility.yul\":12704:12708   */\n      0x20\n        /* \"#utility.yul\":12698:12702   */\n      dup2\n        /* \"#utility.yul\":12694:12709   */\n      add\n        /* \"#utility.yul\":12686:12709   */\n      swap1\n      pop\n        /* \"#utility.yul\":12408:12716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12722:12868   */\n    tag_423:\n        /* \"#utility.yul\":12819:12825   */\n      dup3\n        /* \"#utility.yul\":12814:12817   */\n      dup2\n        /* \"#utility.yul\":12809:12812   */\n      dup4\n        /* \"#utility.yul\":12796:12826   */\n      calldatacopy\n        /* \"#utility.yul\":12860:12861   */\n      0x00\n        /* \"#utility.yul\":12851:12857   */\n      dup4\n        /* \"#utility.yul\":12846:12849   */\n      dup4\n        /* \"#utility.yul\":12842:12858   */\n      add\n        /* \"#utility.yul\":12835:12862   */\n      mstore\n        /* \"#utility.yul\":12722:12868   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12874:13299   */\n    tag_424:\n        /* \"#utility.yul\":12952:12957   */\n      0x00\n        /* \"#utility.yul\":12977:13043   */\n      tag_598\n        /* \"#utility.yul\":12993:13042   */\n      tag_599\n        /* \"#utility.yul\":13035:13041   */\n      dup5\n        /* \"#utility.yul\":12993:13042   */\n      tag_422\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":12977:13043   */\n      tag_421\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":12968:13043   */\n      swap1\n      pop\n        /* \"#utility.yul\":13066:13072   */\n      dup3\n        /* \"#utility.yul\":13059:13064   */\n      dup2\n        /* \"#utility.yul\":13052:13073   */\n      mstore\n        /* \"#utility.yul\":13104:13108   */\n      0x20\n        /* \"#utility.yul\":13097:13102   */\n      dup2\n        /* \"#utility.yul\":13093:13109   */\n      add\n        /* \"#utility.yul\":13142:13145   */\n      dup5\n        /* \"#utility.yul\":13133:13139   */\n      dup5\n        /* \"#utility.yul\":13128:13131   */\n      dup5\n        /* \"#utility.yul\":13124:13140   */\n      add\n        /* \"#utility.yul\":13121:13146   */\n      gt\n        /* \"#utility.yul\":13118:13230   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":13149:13228   */\n      tag_601\n      tag_419\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":13118:13230   */\n    tag_600:\n        /* \"#utility.yul\":13239:13293   */\n      tag_602\n        /* \"#utility.yul\":13286:13292   */\n      dup5\n        /* \"#utility.yul\":13281:13284   */\n      dup3\n        /* \"#utility.yul\":13276:13279   */\n      dup6\n        /* \"#utility.yul\":13239:13293   */\n      tag_423\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":12958:13299   */\n      pop\n        /* \"#utility.yul\":12874:13299   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13319:13659   */\n    tag_425:\n        /* \"#utility.yul\":13375:13380   */\n      0x00\n        /* \"#utility.yul\":13424:13427   */\n      dup3\n        /* \"#utility.yul\":13417:13421   */\n      0x1f\n        /* \"#utility.yul\":13409:13415   */\n      dup4\n        /* \"#utility.yul\":13405:13422   */\n      add\n        /* \"#utility.yul\":13401:13428   */\n      slt\n        /* \"#utility.yul\":13391:13513   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":13432:13511   */\n      tag_605\n      tag_418\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":13391:13513   */\n    tag_604:\n        /* \"#utility.yul\":13549:13555   */\n      dup2\n        /* \"#utility.yul\":13536:13556   */\n      calldataload\n        /* \"#utility.yul\":13574:13653   */\n      tag_606\n        /* \"#utility.yul\":13649:13652   */\n      dup5\n        /* \"#utility.yul\":13641:13647   */\n      dup3\n        /* \"#utility.yul\":13634:13638   */\n      0x20\n        /* \"#utility.yul\":13626:13632   */\n      dup7\n        /* \"#utility.yul\":13622:13639   */\n      add\n        /* \"#utility.yul\":13574:13653   */\n      tag_424\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":13565:13653   */\n      swap2\n      pop\n        /* \"#utility.yul\":13381:13659   */\n      pop\n        /* \"#utility.yul\":13319:13659   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13665:14319   */\n    tag_96:\n        /* \"#utility.yul\":13743:13749   */\n      0x00\n        /* \"#utility.yul\":13751:13757   */\n      dup1\n        /* \"#utility.yul\":13800:13802   */\n      0x40\n        /* \"#utility.yul\":13788:13797   */\n      dup4\n        /* \"#utility.yul\":13779:13786   */\n      dup6\n        /* \"#utility.yul\":13775:13798   */\n      sub\n        /* \"#utility.yul\":13771:13803   */\n      slt\n        /* \"#utility.yul\":13768:13887   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":13806:13885   */\n      tag_609\n      tag_385\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":13768:13887   */\n    tag_608:\n        /* \"#utility.yul\":13954:13955   */\n      0x00\n        /* \"#utility.yul\":13943:13952   */\n      dup4\n        /* \"#utility.yul\":13939:13956   */\n      add\n        /* \"#utility.yul\":13926:13957   */\n      calldataload\n        /* \"#utility.yul\":13984:14002   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13976:13982   */\n      dup2\n        /* \"#utility.yul\":13973:14003   */\n      gt\n        /* \"#utility.yul\":13970:14087   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":14006:14085   */\n      tag_611\n      tag_386\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":13970:14087   */\n    tag_610:\n        /* \"#utility.yul\":14111:14174   */\n      tag_612\n        /* \"#utility.yul\":14166:14173   */\n      dup6\n        /* \"#utility.yul\":14157:14163   */\n      dup3\n        /* \"#utility.yul\":14146:14155   */\n      dup7\n        /* \"#utility.yul\":14142:14164   */\n      add\n        /* \"#utility.yul\":14111:14174   */\n      tag_425\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":14101:14174   */\n      swap3\n      pop\n        /* \"#utility.yul\":13897:14184   */\n      pop\n        /* \"#utility.yul\":14223:14225   */\n      0x20\n        /* \"#utility.yul\":14249:14302   */\n      tag_613\n        /* \"#utility.yul\":14294:14301   */\n      dup6\n        /* \"#utility.yul\":14285:14291   */\n      dup3\n        /* \"#utility.yul\":14274:14283   */\n      dup7\n        /* \"#utility.yul\":14270:14292   */\n      add\n        /* \"#utility.yul\":14249:14302   */\n      tag_413\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":14239:14302   */\n      swap2\n      pop\n        /* \"#utility.yul\":14194:14312   */\n      pop\n        /* \"#utility.yul\":13665:14319   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14325:14632   */\n    tag_426:\n        /* \"#utility.yul\":14386:14390   */\n      0x00\n        /* \"#utility.yul\":14476:14494   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14468:14474   */\n      dup3\n        /* \"#utility.yul\":14465:14495   */\n      gt\n        /* \"#utility.yul\":14462:14518   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":14498:14516   */\n      tag_616\n      tag_127\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":14462:14518   */\n    tag_615:\n        /* \"#utility.yul\":14536:14565   */\n      tag_617\n        /* \"#utility.yul\":14558:14564   */\n      dup3\n        /* \"#utility.yul\":14536:14565   */\n      tag_399\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":14528:14565   */\n      swap1\n      pop\n        /* \"#utility.yul\":14620:14624   */\n      0x20\n        /* \"#utility.yul\":14614:14618   */\n      dup2\n        /* \"#utility.yul\":14610:14625   */\n      add\n        /* \"#utility.yul\":14602:14625   */\n      swap1\n      pop\n        /* \"#utility.yul\":14325:14632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14638:15061   */\n    tag_427:\n        /* \"#utility.yul\":14715:14720   */\n      0x00\n        /* \"#utility.yul\":14740:14805   */\n      tag_619\n        /* \"#utility.yul\":14756:14804   */\n      tag_620\n        /* \"#utility.yul\":14797:14803   */\n      dup5\n        /* \"#utility.yul\":14756:14804   */\n      tag_426\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":14740:14805   */\n      tag_421\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":14731:14805   */\n      swap1\n      pop\n        /* \"#utility.yul\":14828:14834   */\n      dup3\n        /* \"#utility.yul\":14821:14826   */\n      dup2\n        /* \"#utility.yul\":14814:14835   */\n      mstore\n        /* \"#utility.yul\":14866:14870   */\n      0x20\n        /* \"#utility.yul\":14859:14864   */\n      dup2\n        /* \"#utility.yul\":14855:14871   */\n      add\n        /* \"#utility.yul\":14904:14907   */\n      dup5\n        /* \"#utility.yul\":14895:14901   */\n      dup5\n        /* \"#utility.yul\":14890:14893   */\n      dup5\n        /* \"#utility.yul\":14886:14902   */\n      add\n        /* \"#utility.yul\":14883:14908   */\n      gt\n        /* \"#utility.yul\":14880:14992   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":14911:14990   */\n      tag_622\n      tag_419\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":14880:14992   */\n    tag_621:\n        /* \"#utility.yul\":15001:15055   */\n      tag_623\n        /* \"#utility.yul\":15048:15054   */\n      dup5\n        /* \"#utility.yul\":15043:15046   */\n      dup3\n        /* \"#utility.yul\":15038:15041   */\n      dup6\n        /* \"#utility.yul\":15001:15055   */\n      tag_423\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":14721:15061   */\n      pop\n        /* \"#utility.yul\":14638:15061   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15080:15418   */\n    tag_428:\n        /* \"#utility.yul\":15135:15140   */\n      0x00\n        /* \"#utility.yul\":15184:15187   */\n      dup3\n        /* \"#utility.yul\":15177:15181   */\n      0x1f\n        /* \"#utility.yul\":15169:15175   */\n      dup4\n        /* \"#utility.yul\":15165:15182   */\n      add\n        /* \"#utility.yul\":15161:15188   */\n      slt\n        /* \"#utility.yul\":15151:15273   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":15192:15271   */\n      tag_626\n      tag_418\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":15151:15273   */\n    tag_625:\n        /* \"#utility.yul\":15309:15315   */\n      dup2\n        /* \"#utility.yul\":15296:15316   */\n      calldataload\n        /* \"#utility.yul\":15334:15412   */\n      tag_627\n        /* \"#utility.yul\":15408:15411   */\n      dup5\n        /* \"#utility.yul\":15400:15406   */\n      dup3\n        /* \"#utility.yul\":15393:15397   */\n      0x20\n        /* \"#utility.yul\":15385:15391   */\n      dup7\n        /* \"#utility.yul\":15381:15398   */\n      add\n        /* \"#utility.yul\":15334:15412   */\n      tag_427\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":15325:15412   */\n      swap2\n      pop\n        /* \"#utility.yul\":15141:15418   */\n      pop\n        /* \"#utility.yul\":15080:15418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15424:16367   */\n    tag_100:\n        /* \"#utility.yul\":15519:15525   */\n      0x00\n        /* \"#utility.yul\":15527:15533   */\n      dup1\n        /* \"#utility.yul\":15535:15541   */\n      0x00\n        /* \"#utility.yul\":15543:15549   */\n      dup1\n        /* \"#utility.yul\":15592:15595   */\n      0x80\n        /* \"#utility.yul\":15580:15589   */\n      dup6\n        /* \"#utility.yul\":15571:15578   */\n      dup8\n        /* \"#utility.yul\":15567:15590   */\n      sub\n        /* \"#utility.yul\":15563:15596   */\n      slt\n        /* \"#utility.yul\":15560:15680   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":15599:15678   */\n      tag_630\n      tag_385\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":15560:15680   */\n    tag_629:\n        /* \"#utility.yul\":15719:15720   */\n      0x00\n        /* \"#utility.yul\":15744:15797   */\n      tag_631\n        /* \"#utility.yul\":15789:15796   */\n      dup8\n        /* \"#utility.yul\":15780:15786   */\n      dup3\n        /* \"#utility.yul\":15769:15778   */\n      dup9\n        /* \"#utility.yul\":15765:15787   */\n      add\n        /* \"#utility.yul\":15744:15797   */\n      tag_390\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":15734:15797   */\n      swap5\n      pop\n        /* \"#utility.yul\":15690:15807   */\n      pop\n        /* \"#utility.yul\":15846:15848   */\n      0x20\n        /* \"#utility.yul\":15872:15925   */\n      tag_632\n        /* \"#utility.yul\":15917:15924   */\n      dup8\n        /* \"#utility.yul\":15908:15914   */\n      dup3\n        /* \"#utility.yul\":15897:15906   */\n      dup9\n        /* \"#utility.yul\":15893:15915   */\n      add\n        /* \"#utility.yul\":15872:15925   */\n      tag_390\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":15862:15925   */\n      swap4\n      pop\n        /* \"#utility.yul\":15817:15935   */\n      pop\n        /* \"#utility.yul\":15974:15976   */\n      0x40\n        /* \"#utility.yul\":16000:16053   */\n      tag_633\n        /* \"#utility.yul\":16045:16052   */\n      dup8\n        /* \"#utility.yul\":16036:16042   */\n      dup3\n        /* \"#utility.yul\":16025:16034   */\n      dup9\n        /* \"#utility.yul\":16021:16043   */\n      add\n        /* \"#utility.yul\":16000:16053   */\n      tag_413\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":15990:16053   */\n      swap3\n      pop\n        /* \"#utility.yul\":15945:16063   */\n      pop\n        /* \"#utility.yul\":16130:16132   */\n      0x60\n        /* \"#utility.yul\":16119:16128   */\n      dup6\n        /* \"#utility.yul\":16115:16133   */\n      add\n        /* \"#utility.yul\":16102:16134   */\n      calldataload\n        /* \"#utility.yul\":16161:16179   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16153:16159   */\n      dup2\n        /* \"#utility.yul\":16150:16180   */\n      gt\n        /* \"#utility.yul\":16147:16264   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":16183:16262   */\n      tag_635\n      tag_386\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":16147:16264   */\n    tag_634:\n        /* \"#utility.yul\":16288:16350   */\n      tag_636\n        /* \"#utility.yul\":16342:16349   */\n      dup8\n        /* \"#utility.yul\":16333:16339   */\n      dup3\n        /* \"#utility.yul\":16322:16331   */\n      dup9\n        /* \"#utility.yul\":16318:16340   */\n      add\n        /* \"#utility.yul\":16288:16350   */\n      tag_428\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":16278:16350   */\n      swap2\n      pop\n        /* \"#utility.yul\":16073:16360   */\n      pop\n        /* \"#utility.yul\":15424:16367   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16373:16847   */\n    tag_112:\n        /* \"#utility.yul\":16441:16447   */\n      0x00\n        /* \"#utility.yul\":16449:16455   */\n      dup1\n        /* \"#utility.yul\":16498:16500   */\n      0x40\n        /* \"#utility.yul\":16486:16495   */\n      dup4\n        /* \"#utility.yul\":16477:16484   */\n      dup6\n        /* \"#utility.yul\":16473:16496   */\n      sub\n        /* \"#utility.yul\":16469:16501   */\n      slt\n        /* \"#utility.yul\":16466:16585   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":16504:16583   */\n      tag_639\n      tag_385\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":16466:16585   */\n    tag_638:\n        /* \"#utility.yul\":16624:16625   */\n      0x00\n        /* \"#utility.yul\":16649:16702   */\n      tag_640\n        /* \"#utility.yul\":16694:16701   */\n      dup6\n        /* \"#utility.yul\":16685:16691   */\n      dup3\n        /* \"#utility.yul\":16674:16683   */\n      dup7\n        /* \"#utility.yul\":16670:16692   */\n      add\n        /* \"#utility.yul\":16649:16702   */\n      tag_390\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":16639:16702   */\n      swap3\n      pop\n        /* \"#utility.yul\":16595:16712   */\n      pop\n        /* \"#utility.yul\":16751:16753   */\n      0x20\n        /* \"#utility.yul\":16777:16830   */\n      tag_641\n        /* \"#utility.yul\":16822:16829   */\n      dup6\n        /* \"#utility.yul\":16813:16819   */\n      dup3\n        /* \"#utility.yul\":16802:16811   */\n      dup7\n        /* \"#utility.yul\":16798:16820   */\n      add\n        /* \"#utility.yul\":16777:16830   */\n      tag_390\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":16767:16830   */\n      swap2\n      pop\n        /* \"#utility.yul\":16722:16840   */\n      pop\n        /* \"#utility.yul\":16373:16847   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16853:16913   */\n    tag_429:\n        /* \"#utility.yul\":16881:16884   */\n      0x00\n        /* \"#utility.yul\":16902:16907   */\n      dup2\n        /* \"#utility.yul\":16895:16907   */\n      swap1\n      pop\n        /* \"#utility.yul\":16853:16913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16919:17061   */\n    tag_430:\n        /* \"#utility.yul\":16969:16978   */\n      0x00\n        /* \"#utility.yul\":17002:17055   */\n      tag_644\n        /* \"#utility.yul\":17020:17054   */\n      tag_645\n        /* \"#utility.yul\":17029:17053   */\n      tag_646\n        /* \"#utility.yul\":17047:17052   */\n      dup5\n        /* \"#utility.yul\":17029:17053   */\n      tag_387\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":17020:17054   */\n      tag_429\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":17002:17055   */\n      tag_387\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":16989:17055   */\n      swap1\n      pop\n        /* \"#utility.yul\":16919:17061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17067:17193   */\n    tag_431:\n        /* \"#utility.yul\":17117:17126   */\n      0x00\n        /* \"#utility.yul\":17150:17187   */\n      tag_648\n        /* \"#utility.yul\":17181:17186   */\n      dup3\n        /* \"#utility.yul\":17150:17187   */\n      tag_430\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":17137:17187   */\n      swap1\n      pop\n        /* \"#utility.yul\":17067:17193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17199:17339   */\n    tag_432:\n        /* \"#utility.yul\":17263:17272   */\n      0x00\n        /* \"#utility.yul\":17296:17333   */\n      tag_650\n        /* \"#utility.yul\":17327:17332   */\n      dup3\n        /* \"#utility.yul\":17296:17333   */\n      tag_431\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":17283:17333   */\n      swap1\n      pop\n        /* \"#utility.yul\":17199:17339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17345:17504   */\n    tag_433:\n        /* \"#utility.yul\":17446:17497   */\n      tag_652\n        /* \"#utility.yul\":17491:17496   */\n      dup2\n        /* \"#utility.yul\":17446:17497   */\n      tag_432\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":17441:17444   */\n      dup3\n        /* \"#utility.yul\":17434:17498   */\n      mstore\n        /* \"#utility.yul\":17345:17504   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17510:17760   */\n    tag_121:\n        /* \"#utility.yul\":17617:17621   */\n      0x00\n        /* \"#utility.yul\":17655:17657   */\n      0x20\n        /* \"#utility.yul\":17644:17653   */\n      dup3\n        /* \"#utility.yul\":17640:17658   */\n      add\n        /* \"#utility.yul\":17632:17658   */\n      swap1\n      pop\n        /* \"#utility.yul\":17668:17753   */\n      tag_654\n        /* \"#utility.yul\":17750:17751   */\n      0x00\n        /* \"#utility.yul\":17739:17748   */\n      dup4\n        /* \"#utility.yul\":17735:17752   */\n      add\n        /* \"#utility.yul\":17726:17732   */\n      dup5\n        /* \"#utility.yul\":17668:17753   */\n      tag_433\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17510:17760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17766:17946   */\n    tag_137:\n        /* \"#utility.yul\":17814:17891   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17811:17812   */\n      0x00\n        /* \"#utility.yul\":17804:17892   */\n      mstore\n        /* \"#utility.yul\":17911:17915   */\n      0x32\n        /* \"#utility.yul\":17908:17909   */\n      0x04\n        /* \"#utility.yul\":17901:17916   */\n      mstore\n        /* \"#utility.yul\":17935:17939   */\n      0x24\n        /* \"#utility.yul\":17932:17933   */\n      0x00\n        /* \"#utility.yul\":17925:17940   */\n      revert\n        /* \"#utility.yul\":17952:18132   */\n    tag_434:\n        /* \"#utility.yul\":18000:18077   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17997:17998   */\n      0x00\n        /* \"#utility.yul\":17990:18078   */\n      mstore\n        /* \"#utility.yul\":18097:18101   */\n      0x22\n        /* \"#utility.yul\":18094:18095   */\n      0x04\n        /* \"#utility.yul\":18087:18102   */\n      mstore\n        /* \"#utility.yul\":18121:18125   */\n      0x24\n        /* \"#utility.yul\":18118:18119   */\n      0x00\n        /* \"#utility.yul\":18111:18126   */\n      revert\n        /* \"#utility.yul\":18138:18458   */\n    tag_139:\n        /* \"#utility.yul\":18182:18188   */\n      0x00\n        /* \"#utility.yul\":18219:18220   */\n      0x02\n        /* \"#utility.yul\":18213:18217   */\n      dup3\n        /* \"#utility.yul\":18209:18221   */\n      div\n        /* \"#utility.yul\":18199:18221   */\n      swap1\n      pop\n        /* \"#utility.yul\":18266:18267   */\n      0x01\n        /* \"#utility.yul\":18260:18264   */\n      dup3\n        /* \"#utility.yul\":18256:18268   */\n      and\n        /* \"#utility.yul\":18287:18305   */\n      dup1\n        /* \"#utility.yul\":18277:18358   */\n      tag_658\n      jumpi\n        /* \"#utility.yul\":18343:18347   */\n      0x7f\n        /* \"#utility.yul\":18335:18341   */\n      dup3\n        /* \"#utility.yul\":18331:18348   */\n      and\n        /* \"#utility.yul\":18321:18348   */\n      swap2\n      pop\n        /* \"#utility.yul\":18277:18358   */\n    tag_658:\n        /* \"#utility.yul\":18405:18407   */\n      0x20\n        /* \"#utility.yul\":18397:18403   */\n      dup3\n        /* \"#utility.yul\":18394:18408   */\n      lt\n        /* \"#utility.yul\":18374:18392   */\n      dup2\n        /* \"#utility.yul\":18371:18409   */\n      sub\n        /* \"#utility.yul\":18368:18452   */\n      tag_659\n      jumpi\n        /* \"#utility.yul\":18424:18442   */\n      tag_660\n      tag_434\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":18368:18452   */\n    tag_659:\n        /* \"#utility.yul\":18189:18458   */\n      pop\n        /* \"#utility.yul\":18138:18458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18464:18906   */\n    tag_175:\n        /* \"#utility.yul\":18613:18617   */\n      0x00\n        /* \"#utility.yul\":18651:18653   */\n      0x60\n        /* \"#utility.yul\":18640:18649   */\n      dup3\n        /* \"#utility.yul\":18636:18654   */\n      add\n        /* \"#utility.yul\":18628:18654   */\n      swap1\n      pop\n        /* \"#utility.yul\":18664:18735   */\n      tag_662\n        /* \"#utility.yul\":18732:18733   */\n      0x00\n        /* \"#utility.yul\":18721:18730   */\n      dup4\n        /* \"#utility.yul\":18717:18734   */\n      add\n        /* \"#utility.yul\":18708:18714   */\n      dup7\n        /* \"#utility.yul\":18664:18735   */\n      tag_414\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":18745:18817   */\n      tag_663\n        /* \"#utility.yul\":18813:18815   */\n      0x20\n        /* \"#utility.yul\":18802:18811   */\n      dup4\n        /* \"#utility.yul\":18798:18816   */\n      add\n        /* \"#utility.yul\":18789:18795   */\n      dup6\n        /* \"#utility.yul\":18745:18817   */\n      tag_415\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":18827:18899   */\n      tag_664\n        /* \"#utility.yul\":18895:18897   */\n      0x40\n        /* \"#utility.yul\":18884:18893   */\n      dup4\n        /* \"#utility.yul\":18880:18898   */\n      add\n        /* \"#utility.yul\":18871:18877   */\n      dup5\n        /* \"#utility.yul\":18827:18899   */\n      tag_414\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":18464:18906   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18912:19084   */\n    tag_435:\n        /* \"#utility.yul\":19052:19076   */\n      0x50726f6475637420646f6573206e6f7420657869737400000000000000000000\n        /* \"#utility.yul\":19048:19049   */\n      0x00\n        /* \"#utility.yul\":19040:19046   */\n      dup3\n        /* \"#utility.yul\":19036:19050   */\n      add\n        /* \"#utility.yul\":19029:19077   */\n      mstore\n        /* \"#utility.yul\":18912:19084   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19090:19456   */\n    tag_436:\n        /* \"#utility.yul\":19232:19235   */\n      0x00\n        /* \"#utility.yul\":19253:19320   */\n      tag_667\n        /* \"#utility.yul\":19317:19319   */\n      0x16\n        /* \"#utility.yul\":19312:19315   */\n      dup4\n        /* \"#utility.yul\":19253:19320   */\n      tag_410\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":19246:19320   */\n      swap2\n      pop\n        /* \"#utility.yul\":19329:19422   */\n      tag_668\n        /* \"#utility.yul\":19418:19421   */\n      dup3\n        /* \"#utility.yul\":19329:19422   */\n      tag_435\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19447:19449   */\n      0x20\n        /* \"#utility.yul\":19442:19445   */\n      dup3\n        /* \"#utility.yul\":19438:19450   */\n      add\n        /* \"#utility.yul\":19431:19450   */\n      swap1\n      pop\n        /* \"#utility.yul\":19090:19456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19462:19881   */\n    tag_197:\n        /* \"#utility.yul\":19628:19632   */\n      0x00\n        /* \"#utility.yul\":19666:19668   */\n      0x20\n        /* \"#utility.yul\":19655:19664   */\n      dup3\n        /* \"#utility.yul\":19651:19669   */\n      add\n        /* \"#utility.yul\":19643:19669   */\n      swap1\n      pop\n        /* \"#utility.yul\":19715:19724   */\n      dup2\n        /* \"#utility.yul\":19709:19713   */\n      dup2\n        /* \"#utility.yul\":19705:19725   */\n      sub\n        /* \"#utility.yul\":19701:19702   */\n      0x00\n        /* \"#utility.yul\":19690:19699   */\n      dup4\n        /* \"#utility.yul\":19686:19703   */\n      add\n        /* \"#utility.yul\":19679:19726   */\n      mstore\n        /* \"#utility.yul\":19743:19874   */\n      tag_670\n        /* \"#utility.yul\":19869:19873   */\n      dup2\n        /* \"#utility.yul\":19743:19874   */\n      tag_436\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":19735:19874   */\n      swap1\n      pop\n        /* \"#utility.yul\":19462:19881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19887:20067   */\n    tag_437:\n        /* \"#utility.yul\":19935:20012   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19932:19933   */\n      0x00\n        /* \"#utility.yul\":19925:20013   */\n      mstore\n        /* \"#utility.yul\":20032:20036   */\n      0x11\n        /* \"#utility.yul\":20029:20030   */\n      0x04\n        /* \"#utility.yul\":20022:20037   */\n      mstore\n        /* \"#utility.yul\":20056:20060   */\n      0x24\n        /* \"#utility.yul\":20053:20054   */\n      0x00\n        /* \"#utility.yul\":20046:20061   */\n      revert\n        /* \"#utility.yul\":20073:20483   */\n    tag_199:\n        /* \"#utility.yul\":20113:20120   */\n      0x00\n        /* \"#utility.yul\":20136:20156   */\n      tag_673\n        /* \"#utility.yul\":20154:20155   */\n      dup3\n        /* \"#utility.yul\":20136:20156   */\n      tag_394\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":20131:20156   */\n      swap2\n      pop\n        /* \"#utility.yul\":20170:20190   */\n      tag_674\n        /* \"#utility.yul\":20188:20189   */\n      dup4\n        /* \"#utility.yul\":20170:20190   */\n      tag_394\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":20165:20190   */\n      swap3\n      pop\n        /* \"#utility.yul\":20225:20226   */\n      dup3\n        /* \"#utility.yul\":20222:20223   */\n      dup3\n        /* \"#utility.yul\":20218:20227   */\n      mul\n        /* \"#utility.yul\":20247:20277   */\n      tag_675\n        /* \"#utility.yul\":20265:20276   */\n      dup2\n        /* \"#utility.yul\":20247:20277   */\n      tag_394\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":20236:20277   */\n      swap2\n      pop\n        /* \"#utility.yul\":20426:20427   */\n      dup3\n        /* \"#utility.yul\":20417:20424   */\n      dup3\n        /* \"#utility.yul\":20413:20428   */\n      div\n        /* \"#utility.yul\":20410:20411   */\n      dup5\n        /* \"#utility.yul\":20407:20429   */\n      eq\n        /* \"#utility.yul\":20387:20388   */\n      dup4\n        /* \"#utility.yul\":20380:20389   */\n      iszero\n        /* \"#utility.yul\":20360:20443   */\n      or\n        /* \"#utility.yul\":20337:20476   */\n      tag_676\n      jumpi\n        /* \"#utility.yul\":20456:20474   */\n      tag_677\n      tag_437\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":20337:20476   */\n    tag_676:\n        /* \"#utility.yul\":20121:20483   */\n      pop\n        /* \"#utility.yul\":20073:20483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20489:20931   */\n    tag_201:\n        /* \"#utility.yul\":20638:20642   */\n      0x00\n        /* \"#utility.yul\":20676:20678   */\n      0x60\n        /* \"#utility.yul\":20665:20674   */\n      dup3\n        /* \"#utility.yul\":20661:20679   */\n      add\n        /* \"#utility.yul\":20653:20679   */\n      swap1\n      pop\n        /* \"#utility.yul\":20689:20760   */\n      tag_679\n        /* \"#utility.yul\":20757:20758   */\n      0x00\n        /* \"#utility.yul\":20746:20755   */\n      dup4\n        /* \"#utility.yul\":20742:20759   */\n      add\n        /* \"#utility.yul\":20733:20739   */\n      dup7\n        /* \"#utility.yul\":20689:20760   */\n      tag_414\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":20770:20842   */\n      tag_680\n        /* \"#utility.yul\":20838:20840   */\n      0x20\n        /* \"#utility.yul\":20827:20836   */\n      dup4\n        /* \"#utility.yul\":20823:20841   */\n      add\n        /* \"#utility.yul\":20814:20820   */\n      dup6\n        /* \"#utility.yul\":20770:20842   */\n      tag_414\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":20852:20924   */\n      tag_681\n        /* \"#utility.yul\":20920:20922   */\n      0x40\n        /* \"#utility.yul\":20909:20918   */\n      dup4\n        /* \"#utility.yul\":20905:20923   */\n      add\n        /* \"#utility.yul\":20896:20902   */\n      dup5\n        /* \"#utility.yul\":20852:20924   */\n      tag_415\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":20489:20931   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20937:21074   */\n    tag_438:\n        /* \"#utility.yul\":20991:20996   */\n      0x00\n        /* \"#utility.yul\":21022:21028   */\n      dup2\n        /* \"#utility.yul\":21016:21029   */\n      mload\n        /* \"#utility.yul\":21007:21029   */\n      swap1\n      pop\n        /* \"#utility.yul\":21038:21068   */\n      tag_683\n        /* \"#utility.yul\":21062:21067   */\n      dup2\n        /* \"#utility.yul\":21038:21068   */\n      tag_416\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":20937:21074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21080:21425   */\n    tag_205:\n        /* \"#utility.yul\":21147:21153   */\n      0x00\n        /* \"#utility.yul\":21196:21198   */\n      0x20\n        /* \"#utility.yul\":21184:21193   */\n      dup3\n        /* \"#utility.yul\":21175:21182   */\n      dup5\n        /* \"#utility.yul\":21171:21194   */\n      sub\n        /* \"#utility.yul\":21167:21199   */\n      slt\n        /* \"#utility.yul\":21164:21283   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":21202:21281   */\n      tag_686\n      tag_385\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":21164:21283   */\n    tag_685:\n        /* \"#utility.yul\":21322:21323   */\n      0x00\n        /* \"#utility.yul\":21347:21408   */\n      tag_687\n        /* \"#utility.yul\":21400:21407   */\n      dup5\n        /* \"#utility.yul\":21391:21397   */\n      dup3\n        /* \"#utility.yul\":21380:21389   */\n      dup6\n        /* \"#utility.yul\":21376:21398   */\n      add\n        /* \"#utility.yul\":21347:21408   */\n      tag_438\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":21337:21408   */\n      swap2\n      pop\n        /* \"#utility.yul\":21293:21418   */\n      pop\n        /* \"#utility.yul\":21080:21425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21431:21602   */\n    tag_439:\n        /* \"#utility.yul\":21571:21594   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":21567:21568   */\n      0x00\n        /* \"#utility.yul\":21559:21565   */\n      dup3\n        /* \"#utility.yul\":21555:21569   */\n      add\n        /* \"#utility.yul\":21548:21595   */\n      mstore\n        /* \"#utility.yul\":21431:21602   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21608:21974   */\n    tag_440:\n        /* \"#utility.yul\":21750:21753   */\n      0x00\n        /* \"#utility.yul\":21771:21838   */\n      tag_690\n        /* \"#utility.yul\":21835:21837   */\n      0x15\n        /* \"#utility.yul\":21830:21833   */\n      dup4\n        /* \"#utility.yul\":21771:21838   */\n      tag_410\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":21764:21838   */\n      swap2\n      pop\n        /* \"#utility.yul\":21847:21940   */\n      tag_691\n        /* \"#utility.yul\":21936:21939   */\n      dup3\n        /* \"#utility.yul\":21847:21940   */\n      tag_439\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":21965:21967   */\n      0x20\n        /* \"#utility.yul\":21960:21963   */\n      dup3\n        /* \"#utility.yul\":21956:21968   */\n      add\n        /* \"#utility.yul\":21949:21968   */\n      swap1\n      pop\n        /* \"#utility.yul\":21608:21974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21980:22399   */\n    tag_208:\n        /* \"#utility.yul\":22146:22150   */\n      0x00\n        /* \"#utility.yul\":22184:22186   */\n      0x20\n        /* \"#utility.yul\":22173:22182   */\n      dup3\n        /* \"#utility.yul\":22169:22187   */\n      add\n        /* \"#utility.yul\":22161:22187   */\n      swap1\n      pop\n        /* \"#utility.yul\":22233:22242   */\n      dup2\n        /* \"#utility.yul\":22227:22231   */\n      dup2\n        /* \"#utility.yul\":22223:22243   */\n      sub\n        /* \"#utility.yul\":22219:22220   */\n      0x00\n        /* \"#utility.yul\":22208:22217   */\n      dup4\n        /* \"#utility.yul\":22204:22221   */\n      add\n        /* \"#utility.yul\":22197:22244   */\n      mstore\n        /* \"#utility.yul\":22261:22392   */\n      tag_693\n        /* \"#utility.yul\":22387:22391   */\n      dup2\n        /* \"#utility.yul\":22261:22392   */\n      tag_440\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":22253:22392   */\n      swap1\n      pop\n        /* \"#utility.yul\":21980:22399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22405:22737   */\n    tag_217:\n        /* \"#utility.yul\":22526:22530   */\n      0x00\n        /* \"#utility.yul\":22564:22566   */\n      0x40\n        /* \"#utility.yul\":22553:22562   */\n      dup3\n        /* \"#utility.yul\":22549:22567   */\n      add\n        /* \"#utility.yul\":22541:22567   */\n      swap1\n      pop\n        /* \"#utility.yul\":22577:22648   */\n      tag_695\n        /* \"#utility.yul\":22645:22646   */\n      0x00\n        /* \"#utility.yul\":22634:22643   */\n      dup4\n        /* \"#utility.yul\":22630:22647   */\n      add\n        /* \"#utility.yul\":22621:22627   */\n      dup6\n        /* \"#utility.yul\":22577:22648   */\n      tag_415\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":22658:22730   */\n      tag_696\n        /* \"#utility.yul\":22726:22728   */\n      0x20\n        /* \"#utility.yul\":22715:22724   */\n      dup4\n        /* \"#utility.yul\":22711:22729   */\n      add\n        /* \"#utility.yul\":22702:22708   */\n      dup5\n        /* \"#utility.yul\":22658:22730   */\n      tag_415\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":22405:22737   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22743:22976   */\n    tag_233:\n        /* \"#utility.yul\":22782:22785   */\n      0x00\n        /* \"#utility.yul\":22805:22829   */\n      tag_698\n        /* \"#utility.yul\":22823:22828   */\n      dup3\n        /* \"#utility.yul\":22805:22829   */\n      tag_394\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":22796:22829   */\n      swap2\n      pop\n        /* \"#utility.yul\":22851:22917   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22844:22849   */\n      dup3\n        /* \"#utility.yul\":22841:22918   */\n      sub\n        /* \"#utility.yul\":22838:22941   */\n      tag_699\n      jumpi\n        /* \"#utility.yul\":22921:22939   */\n      tag_700\n      tag_437\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":22838:22941   */\n    tag_699:\n        /* \"#utility.yul\":22968:22969   */\n      0x01\n        /* \"#utility.yul\":22961:22966   */\n      dup3\n        /* \"#utility.yul\":22957:22970   */\n      add\n        /* \"#utility.yul\":22950:22970   */\n      swap1\n      pop\n        /* \"#utility.yul\":22743:22976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22982:23123   */\n    tag_441:\n        /* \"#utility.yul\":23031:23035   */\n      0x00\n        /* \"#utility.yul\":23054:23057   */\n      dup2\n        /* \"#utility.yul\":23046:23057   */\n      swap1\n      pop\n        /* \"#utility.yul\":23077:23080   */\n      dup2\n        /* \"#utility.yul\":23074:23075   */\n      0x00\n        /* \"#utility.yul\":23067:23081   */\n      mstore\n        /* \"#utility.yul\":23111:23115   */\n      0x20\n        /* \"#utility.yul\":23108:23109   */\n      0x00\n        /* \"#utility.yul\":23098:23116   */\n      keccak256\n        /* \"#utility.yul\":23090:23116   */\n      swap1\n      pop\n        /* \"#utility.yul\":22982:23123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23129:23222   */\n    tag_442:\n        /* \"#utility.yul\":23166:23172   */\n      0x00\n        /* \"#utility.yul\":23213:23215   */\n      0x20\n        /* \"#utility.yul\":23208:23210   */\n      0x1f\n        /* \"#utility.yul\":23201:23206   */\n      dup4\n        /* \"#utility.yul\":23197:23211   */\n      add\n        /* \"#utility.yul\":23193:23216   */\n      div\n        /* \"#utility.yul\":23183:23216   */\n      swap1\n      pop\n        /* \"#utility.yul\":23129:23222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23228:23335   */\n    tag_443:\n        /* \"#utility.yul\":23272:23280   */\n      0x00\n        /* \"#utility.yul\":23322:23327   */\n      dup3\n        /* \"#utility.yul\":23316:23320   */\n      dup3\n        /* \"#utility.yul\":23312:23328   */\n      shl\n        /* \"#utility.yul\":23291:23328   */\n      swap1\n      pop\n        /* \"#utility.yul\":23228:23335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23341:23734   */\n    tag_444:\n        /* \"#utility.yul\":23410:23416   */\n      0x00\n        /* \"#utility.yul\":23460:23461   */\n      0x08\n        /* \"#utility.yul\":23448:23458   */\n      dup4\n        /* \"#utility.yul\":23444:23462   */\n      mul\n        /* \"#utility.yul\":23483:23580   */\n      tag_705\n        /* \"#utility.yul\":23513:23579   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23502:23511   */\n      dup3\n        /* \"#utility.yul\":23483:23580   */\n      tag_443\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":23601:23640   */\n      tag_706\n        /* \"#utility.yul\":23631:23639   */\n      dup7\n        /* \"#utility.yul\":23620:23629   */\n      dup4\n        /* \"#utility.yul\":23601:23640   */\n      tag_443\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":23589:23640   */\n      swap6\n      pop\n        /* \"#utility.yul\":23673:23677   */\n      dup1\n        /* \"#utility.yul\":23669:23678   */\n      not\n        /* \"#utility.yul\":23662:23667   */\n      dup5\n        /* \"#utility.yul\":23658:23679   */\n      and\n        /* \"#utility.yul\":23649:23679   */\n      swap4\n      pop\n        /* \"#utility.yul\":23722:23726   */\n      dup1\n        /* \"#utility.yul\":23712:23720   */\n      dup7\n        /* \"#utility.yul\":23708:23727   */\n      and\n        /* \"#utility.yul\":23701:23706   */\n      dup5\n        /* \"#utility.yul\":23698:23728   */\n      or\n        /* \"#utility.yul\":23688:23728   */\n      swap3\n      pop\n        /* \"#utility.yul\":23417:23734   */\n      pop\n      pop\n        /* \"#utility.yul\":23341:23734   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23740:23882   */\n    tag_445:\n        /* \"#utility.yul\":23790:23799   */\n      0x00\n        /* \"#utility.yul\":23823:23876   */\n      tag_708\n        /* \"#utility.yul\":23841:23875   */\n      tag_709\n        /* \"#utility.yul\":23850:23874   */\n      tag_710\n        /* \"#utility.yul\":23868:23873   */\n      dup5\n        /* \"#utility.yul\":23850:23874   */\n      tag_394\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":23841:23875   */\n      tag_429\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":23823:23876   */\n      tag_394\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":23810:23876   */\n      swap1\n      pop\n        /* \"#utility.yul\":23740:23882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23888:23963   */\n    tag_446:\n        /* \"#utility.yul\":23931:23934   */\n      0x00\n        /* \"#utility.yul\":23952:23957   */\n      dup2\n        /* \"#utility.yul\":23945:23957   */\n      swap1\n      pop\n        /* \"#utility.yul\":23888:23963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23969:24238   */\n    tag_447:\n        /* \"#utility.yul\":24079:24118   */\n      tag_713\n        /* \"#utility.yul\":24110:24117   */\n      dup4\n        /* \"#utility.yul\":24079:24118   */\n      tag_445\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":24140:24231   */\n      tag_714\n        /* \"#utility.yul\":24189:24230   */\n      tag_715\n        /* \"#utility.yul\":24213:24229   */\n      dup3\n        /* \"#utility.yul\":24189:24230   */\n      tag_446\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":24181:24187   */\n      dup5\n        /* \"#utility.yul\":24174:24178   */\n      dup5\n        /* \"#utility.yul\":24168:24179   */\n      sload\n        /* \"#utility.yul\":24140:24231   */\n      tag_444\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":24134:24138   */\n      dup3\n        /* \"#utility.yul\":24127:24232   */\n      sstore\n        /* \"#utility.yul\":24045:24238   */\n      pop\n        /* \"#utility.yul\":23969:24238   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24244:24317   */\n    tag_448:\n        /* \"#utility.yul\":24289:24292   */\n      0x00\n        /* \"#utility.yul\":24244:24317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24323:24512   */\n    tag_449:\n        /* \"#utility.yul\":24400:24432   */\n      tag_718\n      tag_448\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":24441:24506   */\n      tag_719\n        /* \"#utility.yul\":24499:24505   */\n      dup2\n        /* \"#utility.yul\":24491:24497   */\n      dup5\n        /* \"#utility.yul\":24485:24489   */\n      dup5\n        /* \"#utility.yul\":24441:24506   */\n      tag_447\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":24376:24512   */\n      pop\n        /* \"#utility.yul\":24323:24512   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24518:24704   */\n    tag_450:\n        /* \"#utility.yul\":24578:24698   */\n    tag_721:\n        /* \"#utility.yul\":24595:24598   */\n      dup2\n        /* \"#utility.yul\":24588:24593   */\n      dup2\n        /* \"#utility.yul\":24585:24599   */\n      lt\n        /* \"#utility.yul\":24578:24698   */\n      iszero\n      tag_723\n      jumpi\n        /* \"#utility.yul\":24649:24688   */\n      tag_724\n        /* \"#utility.yul\":24686:24687   */\n      0x00\n        /* \"#utility.yul\":24679:24684   */\n      dup3\n        /* \"#utility.yul\":24649:24688   */\n      tag_449\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":24622:24623   */\n      0x01\n        /* \"#utility.yul\":24615:24620   */\n      dup2\n        /* \"#utility.yul\":24611:24624   */\n      add\n        /* \"#utility.yul\":24602:24624   */\n      swap1\n      pop\n        /* \"#utility.yul\":24578:24698   */\n      jump(tag_721)\n    tag_723:\n        /* \"#utility.yul\":24518:24704   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24710:25253   */\n    tag_451:\n        /* \"#utility.yul\":24811:24813   */\n      0x1f\n        /* \"#utility.yul\":24806:24809   */\n      dup3\n        /* \"#utility.yul\":24803:24814   */\n      gt\n        /* \"#utility.yul\":24800:25246   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":24845:24883   */\n      tag_727\n        /* \"#utility.yul\":24877:24882   */\n      dup2\n        /* \"#utility.yul\":24845:24883   */\n      tag_441\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":24929:24958   */\n      tag_728\n        /* \"#utility.yul\":24947:24957   */\n      dup5\n        /* \"#utility.yul\":24929:24958   */\n      tag_442\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":24919:24927   */\n      dup2\n        /* \"#utility.yul\":24915:24959   */\n      add\n        /* \"#utility.yul\":25112:25114   */\n      0x20\n        /* \"#utility.yul\":25100:25110   */\n      dup6\n        /* \"#utility.yul\":25097:25115   */\n      lt\n        /* \"#utility.yul\":25094:25143   */\n      iszero\n      tag_729\n      jumpi\n        /* \"#utility.yul\":25133:25141   */\n      dup2\n        /* \"#utility.yul\":25118:25141   */\n      swap1\n      pop\n        /* \"#utility.yul\":25094:25143   */\n    tag_729:\n        /* \"#utility.yul\":25156:25236   */\n      tag_730\n        /* \"#utility.yul\":25212:25234   */\n      tag_731\n        /* \"#utility.yul\":25230:25233   */\n      dup6\n        /* \"#utility.yul\":25212:25234   */\n      tag_442\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":25202:25210   */\n      dup4\n        /* \"#utility.yul\":25198:25235   */\n      add\n        /* \"#utility.yul\":25185:25196   */\n      dup3\n        /* \"#utility.yul\":25156:25236   */\n      tag_450\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":24815:25246   */\n      pop\n      pop\n        /* \"#utility.yul\":24800:25246   */\n    tag_726:\n        /* \"#utility.yul\":24710:25253   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25259:25376   */\n    tag_452:\n        /* \"#utility.yul\":25313:25321   */\n      0x00\n        /* \"#utility.yul\":25363:25368   */\n      dup3\n        /* \"#utility.yul\":25357:25361   */\n      dup3\n        /* \"#utility.yul\":25353:25369   */\n      shr\n        /* \"#utility.yul\":25332:25369   */\n      swap1\n      pop\n        /* \"#utility.yul\":25259:25376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25382:25551   */\n    tag_453:\n        /* \"#utility.yul\":25426:25432   */\n      0x00\n        /* \"#utility.yul\":25459:25510   */\n      tag_734\n        /* \"#utility.yul\":25507:25508   */\n      0x00\n        /* \"#utility.yul\":25503:25509   */\n      not\n        /* \"#utility.yul\":25495:25500   */\n      dup5\n        /* \"#utility.yul\":25492:25493   */\n      0x08\n        /* \"#utility.yul\":25488:25501   */\n      mul\n        /* \"#utility.yul\":25459:25510   */\n      tag_452\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":25455:25511   */\n      not\n        /* \"#utility.yul\":25540:25544   */\n      dup1\n        /* \"#utility.yul\":25534:25538   */\n      dup4\n        /* \"#utility.yul\":25530:25545   */\n      and\n        /* \"#utility.yul\":25520:25545   */\n      swap2\n      pop\n        /* \"#utility.yul\":25433:25551   */\n      pop\n        /* \"#utility.yul\":25382:25551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25556:25851   */\n    tag_454:\n        /* \"#utility.yul\":25632:25636   */\n      0x00\n        /* \"#utility.yul\":25778:25807   */\n      tag_736\n        /* \"#utility.yul\":25803:25806   */\n      dup4\n        /* \"#utility.yul\":25797:25801   */\n      dup4\n        /* \"#utility.yul\":25778:25807   */\n      tag_453\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":25770:25807   */\n      swap2\n      pop\n        /* \"#utility.yul\":25840:25843   */\n      dup3\n        /* \"#utility.yul\":25837:25838   */\n      0x02\n        /* \"#utility.yul\":25833:25844   */\n      mul\n        /* \"#utility.yul\":25827:25831   */\n      dup3\n        /* \"#utility.yul\":25824:25845   */\n      or\n        /* \"#utility.yul\":25816:25845   */\n      swap1\n      pop\n        /* \"#utility.yul\":25556:25851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25856:27251   */\n    tag_235:\n        /* \"#utility.yul\":25973:26010   */\n      tag_738\n        /* \"#utility.yul\":26006:26009   */\n      dup3\n        /* \"#utility.yul\":25973:26010   */\n      tag_396\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":26075:26093   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26067:26073   */\n      dup2\n        /* \"#utility.yul\":26064:26094   */\n      gt\n        /* \"#utility.yul\":26061:26117   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":26097:26115   */\n      tag_740\n      tag_127\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":26061:26117   */\n    tag_739:\n        /* \"#utility.yul\":26141:26179   */\n      tag_741\n        /* \"#utility.yul\":26173:26177   */\n      dup3\n        /* \"#utility.yul\":26167:26178   */\n      sload\n        /* \"#utility.yul\":26141:26179   */\n      tag_139\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":26226:26293   */\n      tag_742\n        /* \"#utility.yul\":26286:26292   */\n      dup3\n        /* \"#utility.yul\":26278:26284   */\n      dup3\n        /* \"#utility.yul\":26272:26276   */\n      dup6\n        /* \"#utility.yul\":26226:26293   */\n      tag_451\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":26320:26321   */\n      0x00\n        /* \"#utility.yul\":26344:26348   */\n      0x20\n        /* \"#utility.yul\":26331:26348   */\n      swap1\n      pop\n        /* \"#utility.yul\":26376:26378   */\n      0x1f\n        /* \"#utility.yul\":26368:26374   */\n      dup4\n        /* \"#utility.yul\":26365:26379   */\n      gt\n        /* \"#utility.yul\":26393:26394   */\n      0x01\n        /* \"#utility.yul\":26388:27006   */\n      dup2\n      eq\n      tag_744\n      jumpi\n        /* \"#utility.yul\":27050:27051   */\n      0x00\n        /* \"#utility.yul\":27067:27073   */\n      dup5\n        /* \"#utility.yul\":27064:27141   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":27116:27125   */\n      dup3\n        /* \"#utility.yul\":27111:27114   */\n      dup8\n        /* \"#utility.yul\":27107:27126   */\n      add\n        /* \"#utility.yul\":27101:27127   */\n      mload\n        /* \"#utility.yul\":27092:27127   */\n      swap1\n      pop\n        /* \"#utility.yul\":27064:27141   */\n    tag_745:\n        /* \"#utility.yul\":27167:27234   */\n      tag_746\n        /* \"#utility.yul\":27227:27233   */\n      dup6\n        /* \"#utility.yul\":27220:27225   */\n      dup3\n        /* \"#utility.yul\":27167:27234   */\n      tag_454\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":27161:27165   */\n      dup7\n        /* \"#utility.yul\":27154:27235   */\n      sstore\n        /* \"#utility.yul\":27023:27245   */\n      pop\n        /* \"#utility.yul\":26358:27245   */\n      jump(tag_743)\n        /* \"#utility.yul\":26388:27006   */\n    tag_744:\n        /* \"#utility.yul\":26440:26444   */\n      0x1f\n        /* \"#utility.yul\":26436:26445   */\n      not\n        /* \"#utility.yul\":26428:26434   */\n      dup5\n        /* \"#utility.yul\":26424:26446   */\n      and\n        /* \"#utility.yul\":26474:26511   */\n      tag_747\n        /* \"#utility.yul\":26506:26510   */\n      dup7\n        /* \"#utility.yul\":26474:26511   */\n      tag_441\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":26533:26534   */\n      0x00\n        /* \"#utility.yul\":26547:26755   */\n    tag_748:\n        /* \"#utility.yul\":26561:26568   */\n      dup3\n        /* \"#utility.yul\":26558:26559   */\n      dup2\n        /* \"#utility.yul\":26555:26569   */\n      lt\n        /* \"#utility.yul\":26547:26755   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":26640:26649   */\n      dup5\n        /* \"#utility.yul\":26635:26638   */\n      dup10\n        /* \"#utility.yul\":26631:26650   */\n      add\n        /* \"#utility.yul\":26625:26651   */\n      mload\n        /* \"#utility.yul\":26617:26623   */\n      dup3\n        /* \"#utility.yul\":26610:26652   */\n      sstore\n        /* \"#utility.yul\":26691:26692   */\n      0x01\n        /* \"#utility.yul\":26683:26689   */\n      dup3\n        /* \"#utility.yul\":26679:26693   */\n      add\n        /* \"#utility.yul\":26669:26693   */\n      swap2\n      pop\n        /* \"#utility.yul\":26738:26740   */\n      0x20\n        /* \"#utility.yul\":26727:26736   */\n      dup6\n        /* \"#utility.yul\":26723:26741   */\n      add\n        /* \"#utility.yul\":26710:26741   */\n      swap5\n      pop\n        /* \"#utility.yul\":26584:26588   */\n      0x20\n        /* \"#utility.yul\":26581:26582   */\n      dup2\n        /* \"#utility.yul\":26577:26589   */\n      add\n        /* \"#utility.yul\":26572:26589   */\n      swap1\n      pop\n        /* \"#utility.yul\":26547:26755   */\n      jump(tag_748)\n    tag_750:\n        /* \"#utility.yul\":26783:26789   */\n      dup7\n        /* \"#utility.yul\":26774:26781   */\n      dup4\n        /* \"#utility.yul\":26771:26790   */\n      lt\n        /* \"#utility.yul\":26768:26947   */\n      iszero\n      tag_751\n      jumpi\n        /* \"#utility.yul\":26841:26850   */\n      dup5\n        /* \"#utility.yul\":26836:26839   */\n      dup10\n        /* \"#utility.yul\":26832:26851   */\n      add\n        /* \"#utility.yul\":26826:26852   */\n      mload\n        /* \"#utility.yul\":26884:26932   */\n      tag_752\n        /* \"#utility.yul\":26926:26930   */\n      0x1f\n        /* \"#utility.yul\":26918:26924   */\n      dup10\n        /* \"#utility.yul\":26914:26931   */\n      and\n        /* \"#utility.yul\":26903:26912   */\n      dup3\n        /* \"#utility.yul\":26884:26932   */\n      tag_453\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":26876:26882   */\n      dup4\n        /* \"#utility.yul\":26869:26933   */\n      sstore\n        /* \"#utility.yul\":26791:26947   */\n      pop\n        /* \"#utility.yul\":26768:26947   */\n    tag_751:\n        /* \"#utility.yul\":26993:26994   */\n      0x01\n        /* \"#utility.yul\":26989:26990   */\n      0x02\n        /* \"#utility.yul\":26981:26987   */\n      dup9\n        /* \"#utility.yul\":26977:26991   */\n      mul\n        /* \"#utility.yul\":26973:26995   */\n      add\n        /* \"#utility.yul\":26967:26971   */\n      dup9\n        /* \"#utility.yul\":26960:26996   */\n      sstore\n        /* \"#utility.yul\":26395:27006   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26358:27245   */\n    tag_743:\n      pop\n        /* \"#utility.yul\":25948:27251   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25856:27251   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27257:27405   */\n    tag_455:\n        /* \"#utility.yul\":27359:27370   */\n      0x00\n        /* \"#utility.yul\":27396:27399   */\n      dup2\n        /* \"#utility.yul\":27381:27399   */\n      swap1\n      pop\n        /* \"#utility.yul\":27257:27405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27411:27801   */\n    tag_456:\n        /* \"#utility.yul\":27517:27520   */\n      0x00\n        /* \"#utility.yul\":27545:27584   */\n      tag_755\n        /* \"#utility.yul\":27578:27583   */\n      dup3\n        /* \"#utility.yul\":27545:27584   */\n      tag_396\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":27600:27689   */\n      tag_756\n        /* \"#utility.yul\":27682:27688   */\n      dup2\n        /* \"#utility.yul\":27677:27680   */\n      dup6\n        /* \"#utility.yul\":27600:27689   */\n      tag_455\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":27593:27689   */\n      swap4\n      pop\n        /* \"#utility.yul\":27698:27763   */\n      tag_757\n        /* \"#utility.yul\":27756:27762   */\n      dup2\n        /* \"#utility.yul\":27751:27754   */\n      dup6\n        /* \"#utility.yul\":27744:27748   */\n      0x20\n        /* \"#utility.yul\":27737:27742   */\n      dup7\n        /* \"#utility.yul\":27733:27749   */\n      add\n        /* \"#utility.yul\":27698:27763   */\n      tag_398\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":27788:27794   */\n      dup1\n        /* \"#utility.yul\":27783:27786   */\n      dup5\n        /* \"#utility.yul\":27779:27795   */\n      add\n        /* \"#utility.yul\":27772:27795   */\n      swap2\n      pop\n        /* \"#utility.yul\":27521:27801   */\n      pop\n        /* \"#utility.yul\":27411:27801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27807:28242   */\n    tag_249:\n        /* \"#utility.yul\":27987:27990   */\n      0x00\n        /* \"#utility.yul\":28009:28104   */\n      tag_759\n        /* \"#utility.yul\":28100:28103   */\n      dup3\n        /* \"#utility.yul\":28091:28097   */\n      dup6\n        /* \"#utility.yul\":28009:28104   */\n      tag_456\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":28002:28104   */\n      swap2\n      pop\n        /* \"#utility.yul\":28121:28216   */\n      tag_760\n        /* \"#utility.yul\":28212:28215   */\n      dup3\n        /* \"#utility.yul\":28203:28209   */\n      dup5\n        /* \"#utility.yul\":28121:28216   */\n      tag_456\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":28114:28216   */\n      swap2\n      pop\n        /* \"#utility.yul\":28233:28236   */\n      dup2\n        /* \"#utility.yul\":28226:28236   */\n      swap1\n      pop\n        /* \"#utility.yul\":27807:28242   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28248:28473   */\n    tag_457:\n        /* \"#utility.yul\":28388:28422   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":28384:28385   */\n      0x00\n        /* \"#utility.yul\":28376:28382   */\n      dup3\n        /* \"#utility.yul\":28372:28386   */\n      add\n        /* \"#utility.yul\":28365:28423   */\n      mstore\n        /* \"#utility.yul\":28457:28465   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28452:28454   */\n      0x20\n        /* \"#utility.yul\":28444:28450   */\n      dup3\n        /* \"#utility.yul\":28440:28455   */\n      add\n        /* \"#utility.yul\":28433:28466   */\n      mstore\n        /* \"#utility.yul\":28248:28473   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28479:28845   */\n    tag_458:\n        /* \"#utility.yul\":28621:28624   */\n      0x00\n        /* \"#utility.yul\":28642:28709   */\n      tag_763\n        /* \"#utility.yul\":28706:28708   */\n      0x26\n        /* \"#utility.yul\":28701:28704   */\n      dup4\n        /* \"#utility.yul\":28642:28709   */\n      tag_410\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":28635:28709   */\n      swap2\n      pop\n        /* \"#utility.yul\":28718:28811   */\n      tag_764\n        /* \"#utility.yul\":28807:28810   */\n      dup3\n        /* \"#utility.yul\":28718:28811   */\n      tag_457\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":28836:28838   */\n      0x40\n        /* \"#utility.yul\":28831:28834   */\n      dup3\n        /* \"#utility.yul\":28827:28839   */\n      add\n        /* \"#utility.yul\":28820:28839   */\n      swap1\n      pop\n        /* \"#utility.yul\":28479:28845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28851:29270   */\n    tag_258:\n        /* \"#utility.yul\":29017:29021   */\n      0x00\n        /* \"#utility.yul\":29055:29057   */\n      0x20\n        /* \"#utility.yul\":29044:29053   */\n      dup3\n        /* \"#utility.yul\":29040:29058   */\n      add\n        /* \"#utility.yul\":29032:29058   */\n      swap1\n      pop\n        /* \"#utility.yul\":29104:29113   */\n      dup2\n        /* \"#utility.yul\":29098:29102   */\n      dup2\n        /* \"#utility.yul\":29094:29114   */\n      sub\n        /* \"#utility.yul\":29090:29091   */\n      0x00\n        /* \"#utility.yul\":29079:29088   */\n      dup4\n        /* \"#utility.yul\":29075:29092   */\n      add\n        /* \"#utility.yul\":29068:29115   */\n      mstore\n        /* \"#utility.yul\":29132:29263   */\n      tag_766\n        /* \"#utility.yul\":29258:29262   */\n      dup2\n        /* \"#utility.yul\":29132:29263   */\n      tag_458\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":29124:29263   */\n      swap1\n      pop\n        /* \"#utility.yul\":28851:29270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29276:29458   */\n    tag_459:\n        /* \"#utility.yul\":29416:29450   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":29412:29413   */\n      0x00\n        /* \"#utility.yul\":29404:29410   */\n      dup3\n        /* \"#utility.yul\":29400:29414   */\n      add\n        /* \"#utility.yul\":29393:29451   */\n      mstore\n        /* \"#utility.yul\":29276:29458   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29464:29830   */\n    tag_460:\n        /* \"#utility.yul\":29606:29609   */\n      0x00\n        /* \"#utility.yul\":29627:29694   */\n      tag_769\n        /* \"#utility.yul\":29691:29693   */\n      0x20\n        /* \"#utility.yul\":29686:29689   */\n      dup4\n        /* \"#utility.yul\":29627:29694   */\n      tag_410\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":29620:29694   */\n      swap2\n      pop\n        /* \"#utility.yul\":29703:29796   */\n      tag_770\n        /* \"#utility.yul\":29792:29795   */\n      dup3\n        /* \"#utility.yul\":29703:29796   */\n      tag_459\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":29821:29823   */\n      0x20\n        /* \"#utility.yul\":29816:29819   */\n      dup3\n        /* \"#utility.yul\":29812:29824   */\n      add\n        /* \"#utility.yul\":29805:29824   */\n      swap1\n      pop\n        /* \"#utility.yul\":29464:29830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29836:30255   */\n    tag_284:\n        /* \"#utility.yul\":30002:30006   */\n      0x00\n        /* \"#utility.yul\":30040:30042   */\n      0x20\n        /* \"#utility.yul\":30029:30038   */\n      dup3\n        /* \"#utility.yul\":30025:30043   */\n      add\n        /* \"#utility.yul\":30017:30043   */\n      swap1\n      pop\n        /* \"#utility.yul\":30089:30098   */\n      dup2\n        /* \"#utility.yul\":30083:30087   */\n      dup2\n        /* \"#utility.yul\":30079:30099   */\n      sub\n        /* \"#utility.yul\":30075:30076   */\n      0x00\n        /* \"#utility.yul\":30064:30073   */\n      dup4\n        /* \"#utility.yul\":30060:30077   */\n      add\n        /* \"#utility.yul\":30053:30100   */\n      mstore\n        /* \"#utility.yul\":30117:30248   */\n      tag_772\n        /* \"#utility.yul\":30243:30247   */\n      dup2\n        /* \"#utility.yul\":30117:30248   */\n      tag_460\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":30109:30248   */\n      swap1\n      pop\n        /* \"#utility.yul\":29836:30255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30261:30359   */\n    tag_461:\n        /* \"#utility.yul\":30312:30318   */\n      0x00\n        /* \"#utility.yul\":30346:30351   */\n      dup2\n        /* \"#utility.yul\":30340:30352   */\n      mload\n        /* \"#utility.yul\":30330:30352   */\n      swap1\n      pop\n        /* \"#utility.yul\":30261:30359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30365:30533   */\n    tag_462:\n        /* \"#utility.yul\":30448:30459   */\n      0x00\n        /* \"#utility.yul\":30482:30488   */\n      dup3\n        /* \"#utility.yul\":30477:30480   */\n      dup3\n        /* \"#utility.yul\":30470:30489   */\n      mstore\n        /* \"#utility.yul\":30522:30526   */\n      0x20\n        /* \"#utility.yul\":30517:30520   */\n      dup3\n        /* \"#utility.yul\":30513:30527   */\n      add\n        /* \"#utility.yul\":30498:30527   */\n      swap1\n      pop\n        /* \"#utility.yul\":30365:30533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30539:30912   */\n    tag_463:\n        /* \"#utility.yul\":30625:30628   */\n      0x00\n        /* \"#utility.yul\":30653:30691   */\n      tag_776\n        /* \"#utility.yul\":30685:30690   */\n      dup3\n        /* \"#utility.yul\":30653:30691   */\n      tag_461\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":30707:30777   */\n      tag_777\n        /* \"#utility.yul\":30770:30776   */\n      dup2\n        /* \"#utility.yul\":30765:30768   */\n      dup6\n        /* \"#utility.yul\":30707:30777   */\n      tag_462\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":30700:30777   */\n      swap4\n      pop\n        /* \"#utility.yul\":30786:30851   */\n      tag_778\n        /* \"#utility.yul\":30844:30850   */\n      dup2\n        /* \"#utility.yul\":30839:30842   */\n      dup6\n        /* \"#utility.yul\":30832:30836   */\n      0x20\n        /* \"#utility.yul\":30825:30830   */\n      dup7\n        /* \"#utility.yul\":30821:30837   */\n      add\n        /* \"#utility.yul\":30786:30851   */\n      tag_398\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":30876:30905   */\n      tag_779\n        /* \"#utility.yul\":30898:30904   */\n      dup2\n        /* \"#utility.yul\":30876:30905   */\n      tag_399\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":30871:30874   */\n      dup5\n        /* \"#utility.yul\":30867:30906   */\n      add\n        /* \"#utility.yul\":30860:30906   */\n      swap2\n      pop\n        /* \"#utility.yul\":30629:30912   */\n      pop\n        /* \"#utility.yul\":30539:30912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30918:31558   */\n    tag_299:\n        /* \"#utility.yul\":31113:31117   */\n      0x00\n        /* \"#utility.yul\":31151:31154   */\n      0x80\n        /* \"#utility.yul\":31140:31149   */\n      dup3\n        /* \"#utility.yul\":31136:31155   */\n      add\n        /* \"#utility.yul\":31128:31155   */\n      swap1\n      pop\n        /* \"#utility.yul\":31165:31236   */\n      tag_781\n        /* \"#utility.yul\":31233:31234   */\n      0x00\n        /* \"#utility.yul\":31222:31231   */\n      dup4\n        /* \"#utility.yul\":31218:31235   */\n      add\n        /* \"#utility.yul\":31209:31215   */\n      dup8\n        /* \"#utility.yul\":31165:31236   */\n      tag_414\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":31246:31318   */\n      tag_782\n        /* \"#utility.yul\":31314:31316   */\n      0x20\n        /* \"#utility.yul\":31303:31312   */\n      dup4\n        /* \"#utility.yul\":31299:31317   */\n      add\n        /* \"#utility.yul\":31290:31296   */\n      dup7\n        /* \"#utility.yul\":31246:31318   */\n      tag_414\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":31328:31400   */\n      tag_783\n        /* \"#utility.yul\":31396:31398   */\n      0x40\n        /* \"#utility.yul\":31385:31394   */\n      dup4\n        /* \"#utility.yul\":31381:31399   */\n      add\n        /* \"#utility.yul\":31372:31378   */\n      dup6\n        /* \"#utility.yul\":31328:31400   */\n      tag_415\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":31447:31456   */\n      dup2\n        /* \"#utility.yul\":31441:31445   */\n      dup2\n        /* \"#utility.yul\":31437:31457   */\n      sub\n        /* \"#utility.yul\":31432:31434   */\n      0x60\n        /* \"#utility.yul\":31421:31430   */\n      dup4\n        /* \"#utility.yul\":31417:31435   */\n      add\n        /* \"#utility.yul\":31410:31458   */\n      mstore\n        /* \"#utility.yul\":31475:31551   */\n      tag_784\n        /* \"#utility.yul\":31546:31550   */\n      dup2\n        /* \"#utility.yul\":31537:31543   */\n      dup5\n        /* \"#utility.yul\":31475:31551   */\n      tag_463\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":31467:31551   */\n      swap1\n      pop\n        /* \"#utility.yul\":30918:31558   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31564:31705   */\n    tag_464:\n        /* \"#utility.yul\":31620:31625   */\n      0x00\n        /* \"#utility.yul\":31651:31657   */\n      dup2\n        /* \"#utility.yul\":31645:31658   */\n      mload\n        /* \"#utility.yul\":31636:31658   */\n      swap1\n      pop\n        /* \"#utility.yul\":31667:31699   */\n      tag_786\n        /* \"#utility.yul\":31693:31698   */\n      dup2\n        /* \"#utility.yul\":31667:31699   */\n      tag_406\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":31564:31705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31711:32060   */\n    tag_302:\n        /* \"#utility.yul\":31780:31786   */\n      0x00\n        /* \"#utility.yul\":31829:31831   */\n      0x20\n        /* \"#utility.yul\":31817:31826   */\n      dup3\n        /* \"#utility.yul\":31808:31815   */\n      dup5\n        /* \"#utility.yul\":31804:31827   */\n      sub\n        /* \"#utility.yul\":31800:31832   */\n      slt\n        /* \"#utility.yul\":31797:31916   */\n      iszero\n      tag_788\n      jumpi\n        /* \"#utility.yul\":31835:31914   */\n      tag_789\n      tag_385\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":31797:31916   */\n    tag_788:\n        /* \"#utility.yul\":31955:31956   */\n      0x00\n        /* \"#utility.yul\":31980:32043   */\n      tag_790\n        /* \"#utility.yul\":32035:32042   */\n      dup5\n        /* \"#utility.yul\":32026:32032   */\n      dup3\n        /* \"#utility.yul\":32015:32024   */\n      dup6\n        /* \"#utility.yul\":32011:32033   */\n      add\n        /* \"#utility.yul\":31980:32043   */\n      tag_464\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":31970:32043   */\n      swap2\n      pop\n        /* \"#utility.yul\":31926:32053   */\n      pop\n        /* \"#utility.yul\":31711:32060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32066:32246   */\n    tag_326:\n        /* \"#utility.yul\":32114:32191   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32111:32112   */\n      0x00\n        /* \"#utility.yul\":32104:32192   */\n      mstore\n        /* \"#utility.yul\":32211:32215   */\n      0x12\n        /* \"#utility.yul\":32208:32209   */\n      0x04\n        /* \"#utility.yul\":32201:32216   */\n      mstore\n        /* \"#utility.yul\":32235:32239   */\n      0x24\n        /* \"#utility.yul\":32232:32233   */\n      0x00\n        /* \"#utility.yul\":32225:32240   */\n      revert\n        /* \"#utility.yul\":32252:32584   */\n    tag_347:\n        /* \"#utility.yul\":32373:32377   */\n      0x00\n        /* \"#utility.yul\":32411:32413   */\n      0x40\n        /* \"#utility.yul\":32400:32409   */\n      dup3\n        /* \"#utility.yul\":32396:32414   */\n      add\n        /* \"#utility.yul\":32388:32414   */\n      swap1\n      pop\n        /* \"#utility.yul\":32424:32495   */\n      tag_793\n        /* \"#utility.yul\":32492:32493   */\n      0x00\n        /* \"#utility.yul\":32481:32490   */\n      dup4\n        /* \"#utility.yul\":32477:32494   */\n      add\n        /* \"#utility.yul\":32468:32474   */\n      dup6\n        /* \"#utility.yul\":32424:32495   */\n      tag_414\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":32505:32577   */\n      tag_794\n        /* \"#utility.yul\":32573:32575   */\n      0x20\n        /* \"#utility.yul\":32562:32571   */\n      dup4\n        /* \"#utility.yul\":32558:32576   */\n      add\n        /* \"#utility.yul\":32549:32555   */\n      dup5\n        /* \"#utility.yul\":32505:32577   */\n      tag_415\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":32252:32584   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209d12e630dbaee6201dcca645506ae7ba042529c523195945bc9894904e7eca8864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3108": {
									"entryPoint": null,
									"id": 3108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1511": {
									"entryPoint": 302,
									"id": 1511,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 309,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6426:15",
										"nodeType": "YulBlock",
										"src": "0:6426:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "922:274:15",
													"nodeType": "YulBlock",
													"src": "922:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:15",
																"nodeType": "YulBlock",
																"src": "968:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:15"
																			},
																			"nativeSrc": "970:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:15"
																		},
																		"nativeSrc": "970:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:15"
																		},
																		"nativeSrc": "939:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:15",
																		"nodeType": "YulLiteral",
																		"src": "964:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:15"
																},
																"nativeSrc": "935:32:15",
																"nodeType": "YulFunctionCall",
																"src": "935:32:15"
															},
															"nativeSrc": "932:119:15",
															"nodeType": "YulIf",
															"src": "932:119:15"
														},
														{
															"nativeSrc": "1061:128:15",
															"nodeType": "YulBlock",
															"src": "1061:128:15",
															"statements": [
																{
																	"nativeSrc": "1076:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:15"
																				},
																				"nativeSrc": "1147:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:15"
																		},
																		"nativeSrc": "1115:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:15",
														"nodeType": "YulTypedName",
														"src": "892:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:15",
														"nodeType": "YulTypedName",
														"src": "903:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:15",
														"nodeType": "YulTypedName",
														"src": "915:6:15",
														"type": ""
													}
												],
												"src": "845:351:15"
											},
											{
												"body": {
													"nativeSrc": "1261:40:15",
													"nodeType": "YulBlock",
													"src": "1261:40:15",
													"statements": [
														{
															"nativeSrc": "1272:22:15",
															"nodeType": "YulAssignment",
															"src": "1272:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:15"
																},
																"nativeSrc": "1282:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:15",
														"nodeType": "YulTypedName",
														"src": "1244:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:15",
														"nodeType": "YulTypedName",
														"src": "1254:6:15",
														"type": ""
													}
												],
												"src": "1202:99:15"
											},
											{
												"body": {
													"nativeSrc": "1335:152:15",
													"nodeType": "YulBlock",
													"src": "1335:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:15",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:15"
																},
																"nativeSrc": "1345:88:15",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:15"
															},
															"nativeSrc": "1345:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:15"
																},
																"nativeSrc": "1442:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:15"
															},
															"nativeSrc": "1442:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:15"
																},
																"nativeSrc": "1466:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:15"
															},
															"nativeSrc": "1466:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:15"
											},
											{
												"body": {
													"nativeSrc": "1521:152:15",
													"nodeType": "YulBlock",
													"src": "1521:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:15",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:15"
																},
																"nativeSrc": "1531:88:15",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:15"
															},
															"nativeSrc": "1531:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:15"
																},
																"nativeSrc": "1628:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:15"
															},
															"nativeSrc": "1628:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:15"
																},
																"nativeSrc": "1652:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:15"
															},
															"nativeSrc": "1652:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:15"
											},
											{
												"body": {
													"nativeSrc": "1730:269:15",
													"nodeType": "YulBlock",
													"src": "1730:269:15",
													"statements": [
														{
															"nativeSrc": "1740:22:15",
															"nodeType": "YulAssignment",
															"src": "1740:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:15"
																},
																"nativeSrc": "1750:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:15"
																}
															]
														},
														{
															"nativeSrc": "1771:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:15"
																},
																"nativeSrc": "1797:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:15",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:15",
																"nodeType": "YulBlock",
																"src": "1848:51:15",
																"statements": [
																	{
																		"nativeSrc": "1862:27:15",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:15"
																			},
																			"nativeSrc": "1872:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:15"
																},
																"nativeSrc": "1821:26:15",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:15"
															},
															"nativeSrc": "1818:81:15",
															"nodeType": "YulIf",
															"src": "1818:81:15"
														},
														{
															"body": {
																"nativeSrc": "1951:42:15",
																"nodeType": "YulBlock",
																"src": "1951:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:15"
																			},
																			"nativeSrc": "1965:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:15"
																		},
																		"nativeSrc": "1965:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:15"
																		},
																		"nativeSrc": "1935:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:15"
																},
																"nativeSrc": "1912:38:15",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:15"
															},
															"nativeSrc": "1909:84:15",
															"nodeType": "YulIf",
															"src": "1909:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:15",
														"nodeType": "YulTypedName",
														"src": "1714:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:15",
														"nodeType": "YulTypedName",
														"src": "1723:6:15",
														"type": ""
													}
												],
												"src": "1679:320:15"
											},
											{
												"body": {
													"nativeSrc": "2059:87:15",
													"nodeType": "YulBlock",
													"src": "2059:87:15",
													"statements": [
														{
															"nativeSrc": "2069:11:15",
															"nodeType": "YulAssignment",
															"src": "2069:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:15",
																"nodeType": "YulIdentifier",
																"src": "2077:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:15"
																},
																"nativeSrc": "2090:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:15"
															},
															"nativeSrc": "2090:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:15"
														},
														{
															"nativeSrc": "2113:26:15",
															"nodeType": "YulAssignment",
															"src": "2113:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:15"
																},
																"nativeSrc": "2121:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:15",
														"nodeType": "YulTypedName",
														"src": "2046:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:15",
														"nodeType": "YulTypedName",
														"src": "2054:4:15",
														"type": ""
													}
												],
												"src": "2005:141:15"
											},
											{
												"body": {
													"nativeSrc": "2196:49:15",
													"nodeType": "YulBlock",
													"src": "2196:49:15",
													"statements": [
														{
															"nativeSrc": "2206:33:15",
															"nodeType": "YulAssignment",
															"src": "2206:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:15"
																		},
																		"nativeSrc": "2220:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:15"
																},
																"nativeSrc": "2216:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:15",
														"nodeType": "YulTypedName",
														"src": "2179:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:15",
														"nodeType": "YulTypedName",
														"src": "2189:6:15",
														"type": ""
													}
												],
												"src": "2152:93:15"
											},
											{
												"body": {
													"nativeSrc": "2304:54:15",
													"nodeType": "YulBlock",
													"src": "2304:54:15",
													"statements": [
														{
															"nativeSrc": "2314:37:15",
															"nodeType": "YulAssignment",
															"src": "2314:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:15"
																},
																"nativeSrc": "2335:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:15",
														"nodeType": "YulTypedName",
														"src": "2279:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:15",
														"nodeType": "YulTypedName",
														"src": "2285:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:15",
														"nodeType": "YulTypedName",
														"src": "2295:8:15",
														"type": ""
													}
												],
												"src": "2251:107:15"
											},
											{
												"body": {
													"nativeSrc": "2440:317:15",
													"nodeType": "YulBlock",
													"src": "2440:317:15",
													"statements": [
														{
															"nativeSrc": "2450:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:15"
																},
																"nativeSrc": "2467:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:15",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:15",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:15"
																},
																"nativeSrc": "2506:97:15",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:15",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:15",
															"nodeType": "YulAssignment",
															"src": "2612:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:15"
																},
																"nativeSrc": "2624:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:15"
																}
															]
														},
														{
															"nativeSrc": "2672:30:15",
															"nodeType": "YulAssignment",
															"src": "2672:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:15"
																		},
																		"nativeSrc": "2692:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:15"
																},
																"nativeSrc": "2681:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:15"
																}
															]
														},
														{
															"nativeSrc": "2711:40:15",
															"nodeType": "YulAssignment",
															"src": "2711:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:15"
																		},
																		"nativeSrc": "2731:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:15"
																},
																"nativeSrc": "2721:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:15",
														"nodeType": "YulTypedName",
														"src": "2401:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:15",
														"nodeType": "YulTypedName",
														"src": "2408:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:15",
														"nodeType": "YulTypedName",
														"src": "2420:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:15",
														"nodeType": "YulTypedName",
														"src": "2433:6:15",
														"type": ""
													}
												],
												"src": "2364:393:15"
											},
											{
												"body": {
													"nativeSrc": "2808:32:15",
													"nodeType": "YulBlock",
													"src": "2808:32:15",
													"statements": [
														{
															"nativeSrc": "2818:16:15",
															"nodeType": "YulAssignment",
															"src": "2818:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:15",
																"nodeType": "YulIdentifier",
																"src": "2829:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:15",
														"nodeType": "YulTypedName",
														"src": "2790:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:15",
														"nodeType": "YulTypedName",
														"src": "2800:7:15",
														"type": ""
													}
												],
												"src": "2763:77:15"
											},
											{
												"body": {
													"nativeSrc": "2878:28:15",
													"nodeType": "YulBlock",
													"src": "2878:28:15",
													"statements": [
														{
															"nativeSrc": "2888:12:15",
															"nodeType": "YulAssignment",
															"src": "2888:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:15",
																"nodeType": "YulIdentifier",
																"src": "2895:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:15",
														"nodeType": "YulTypedName",
														"src": "2864:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:15",
														"nodeType": "YulTypedName",
														"src": "2874:3:15",
														"type": ""
													}
												],
												"src": "2846:60:15"
											},
											{
												"body": {
													"nativeSrc": "2972:82:15",
													"nodeType": "YulBlock",
													"src": "2972:82:15",
													"statements": [
														{
															"nativeSrc": "2982:66:15",
															"nodeType": "YulAssignment",
															"src": "2982:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:15"
																				},
																				"nativeSrc": "3022:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:15"
																		},
																		"nativeSrc": "3013:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:15"
																},
																"nativeSrc": "2995:53:15",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:15",
														"nodeType": "YulTypedName",
														"src": "2952:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:15",
														"nodeType": "YulTypedName",
														"src": "2962:9:15",
														"type": ""
													}
												],
												"src": "2912:142:15"
											},
											{
												"body": {
													"nativeSrc": "3107:28:15",
													"nodeType": "YulBlock",
													"src": "3107:28:15",
													"statements": [
														{
															"nativeSrc": "3117:12:15",
															"nodeType": "YulAssignment",
															"src": "3117:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:15",
																"nodeType": "YulIdentifier",
																"src": "3124:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:15",
														"nodeType": "YulTypedName",
														"src": "3093:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:15",
														"nodeType": "YulTypedName",
														"src": "3103:3:15",
														"type": ""
													}
												],
												"src": "3060:75:15"
											},
											{
												"body": {
													"nativeSrc": "3217:193:15",
													"nodeType": "YulBlock",
													"src": "3217:193:15",
													"statements": [
														{
															"nativeSrc": "3227:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:15"
																},
																"nativeSrc": "3251:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:15",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:15"
																				},
																				"nativeSrc": "3340:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:15"
																				},
																				"nativeSrc": "3361:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:15"
																		},
																		"nativeSrc": "3312:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:15"
																},
																"nativeSrc": "3299:105:15",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:15"
															},
															"nativeSrc": "3299:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:15",
														"nodeType": "YulTypedName",
														"src": "3194:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:15",
														"nodeType": "YulTypedName",
														"src": "3200:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:15",
														"nodeType": "YulTypedName",
														"src": "3208:7:15",
														"type": ""
													}
												],
												"src": "3141:269:15"
											},
											{
												"body": {
													"nativeSrc": "3465:24:15",
													"nodeType": "YulBlock",
													"src": "3465:24:15",
													"statements": [
														{
															"nativeSrc": "3475:8:15",
															"nodeType": "YulAssignment",
															"src": "3475:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:15",
																"nodeType": "YulLiteral",
																"src": "3482:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:15",
														"nodeType": "YulTypedName",
														"src": "3461:3:15",
														"type": ""
													}
												],
												"src": "3416:73:15"
											},
											{
												"body": {
													"nativeSrc": "3548:136:15",
													"nodeType": "YulBlock",
													"src": "3548:136:15",
													"statements": [
														{
															"nativeSrc": "3558:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:15"
																},
																"nativeSrc": "3572:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:15"
																},
																"nativeSrc": "3613:65:15",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:15"
															},
															"nativeSrc": "3613:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:15",
														"nodeType": "YulTypedName",
														"src": "3534:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:15",
														"nodeType": "YulTypedName",
														"src": "3540:6:15",
														"type": ""
													}
												],
												"src": "3495:189:15"
											},
											{
												"body": {
													"nativeSrc": "3740:136:15",
													"nodeType": "YulBlock",
													"src": "3740:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:15",
																"nodeType": "YulBlock",
																"src": "3807:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:15"
																			},
																			"nativeSrc": "3821:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:15"
																		},
																		"nativeSrc": "3821:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:15"
																},
																"nativeSrc": "3757:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:15"
															},
															"nativeSrc": "3750:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:15",
																"nodeType": "YulBlock",
																"src": "3772:26:15",
																"statements": [
																	{
																		"nativeSrc": "3774:22:15",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:15"
																			},
																			"nativeSrc": "3783:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:15",
																"nodeType": "YulBlock",
																"src": "3754:2:15",
																"statements": []
															},
															"src": "3750:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:15",
														"nodeType": "YulTypedName",
														"src": "3728:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:15",
														"nodeType": "YulTypedName",
														"src": "3735:3:15",
														"type": ""
													}
												],
												"src": "3690:186:15"
											},
											{
												"body": {
													"nativeSrc": "3961:464:15",
													"nodeType": "YulBlock",
													"src": "3961:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:15",
																"nodeType": "YulBlock",
																"src": "3987:431:15",
																"statements": [
																	{
																		"nativeSrc": "4001:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:15"
																			},
																			"nativeSrc": "4017:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:15",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:15"
																					},
																					"nativeSrc": "4101:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:15"
																			},
																			"nativeSrc": "4087:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:15",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:15",
																			"nodeType": "YulBlock",
																			"src": "4288:27:15",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:15",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:15",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:15"
																			},
																			"nativeSrc": "4269:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:15"
																		},
																		"nativeSrc": "4266:49:15",
																		"nodeType": "YulIf",
																		"src": "4266:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:15"
																							},
																							"nativeSrc": "4384:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:15"
																					},
																					"nativeSrc": "4370:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:15"
																			},
																			"nativeSrc": "4328:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:15"
																		},
																		"nativeSrc": "4328:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:15"
																},
																"nativeSrc": "3975:11:15",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:15"
															},
															"nativeSrc": "3972:446:15",
															"nodeType": "YulIf",
															"src": "3972:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:15",
														"nodeType": "YulTypedName",
														"src": "3937:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:15",
														"nodeType": "YulTypedName",
														"src": "3944:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:15",
														"nodeType": "YulTypedName",
														"src": "3949:10:15",
														"type": ""
													}
												],
												"src": "3882:543:15"
											},
											{
												"body": {
													"nativeSrc": "4494:54:15",
													"nodeType": "YulBlock",
													"src": "4494:54:15",
													"statements": [
														{
															"nativeSrc": "4504:37:15",
															"nodeType": "YulAssignment",
															"src": "4504:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:15"
																},
																"nativeSrc": "4525:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:15",
														"nodeType": "YulTypedName",
														"src": "4469:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:15",
														"nodeType": "YulTypedName",
														"src": "4475:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:15",
														"nodeType": "YulTypedName",
														"src": "4485:8:15",
														"type": ""
													}
												],
												"src": "4431:117:15"
											},
											{
												"body": {
													"nativeSrc": "4605:118:15",
													"nodeType": "YulBlock",
													"src": "4605:118:15",
													"statements": [
														{
															"nativeSrc": "4615:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:15"
																				},
																				"nativeSrc": "4660:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:15"
																				},
																				"nativeSrc": "4675:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:15"
																		},
																		"nativeSrc": "4631:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:15"
																},
																"nativeSrc": "4627:56:15",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:15",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:15",
															"nodeType": "YulAssignment",
															"src": "4692:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:15"
																},
																"nativeSrc": "4702:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:15",
														"nodeType": "YulTypedName",
														"src": "4582:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:15",
														"nodeType": "YulTypedName",
														"src": "4588:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:15",
														"nodeType": "YulTypedName",
														"src": "4598:6:15",
														"type": ""
													}
												],
												"src": "4554:169:15"
											},
											{
												"body": {
													"nativeSrc": "4809:214:15",
													"nodeType": "YulBlock",
													"src": "4809:214:15",
													"statements": [
														{
															"nativeSrc": "4942:37:15",
															"nodeType": "YulAssignment",
															"src": "4942:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:15"
																},
																"nativeSrc": "4950:29:15",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:15"
																}
															]
														},
														{
															"nativeSrc": "4988:29:15",
															"nodeType": "YulAssignment",
															"src": "4988:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:15"
																		},
																		"nativeSrc": "5005:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:15"
																},
																"nativeSrc": "4996:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:15",
														"nodeType": "YulTypedName",
														"src": "4790:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:15",
														"nodeType": "YulTypedName",
														"src": "4796:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:15",
														"nodeType": "YulTypedName",
														"src": "4804:4:15",
														"type": ""
													}
												],
												"src": "4728:295:15"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:15",
													"nodeType": "YulBlock",
													"src": "5120:1303:15",
													"statements": [
														{
															"nativeSrc": "5131:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:15"
																},
																"nativeSrc": "5145:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:15",
																"nodeType": "YulBlock",
																"src": "5267:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:15"
																			},
																			"nativeSrc": "5269:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:15"
																		},
																		"nativeSrc": "5269:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:15",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:15"
																},
																"nativeSrc": "5236:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:15"
															},
															"nativeSrc": "5233:56:15",
															"nodeType": "YulIf",
															"src": "5233:56:15"
														},
														{
															"nativeSrc": "5299:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:15"
																		},
																		"nativeSrc": "5339:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:15"
																},
																"nativeSrc": "5313:38:15",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:15"
																},
																"nativeSrc": "5398:67:15",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:15"
															},
															"nativeSrc": "5398:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:15"
														},
														{
															"nativeSrc": "5475:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:15",
																"nodeType": "YulLiteral",
																"src": "5492:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:15",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:15",
															"nodeType": "YulAssignment",
															"src": "5503:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:15",
																"nodeType": "YulLiteral",
																"src": "5516:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:15",
																		"nodeType": "YulBlock",
																		"src": "5567:611:15",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:15",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:15"
																							},
																							"nativeSrc": "5608:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:15"
																					},
																					"nativeSrc": "5596:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:15",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:15"
																					},
																					"nativeSrc": "5646:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:15",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:15",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:15",
																					"nodeType": "YulBlock",
																					"src": "5764:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:15"
																												},
																												"nativeSrc": "5803:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:15"
																										},
																										"nativeSrc": "5797:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:15"
																								},
																								"nativeSrc": "5782:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:15"
																							},
																							"nativeSrc": "5782:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:15"
																						},
																						{
																							"nativeSrc": "5841:24:15",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:15",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:15"
																								},
																								"nativeSrc": "5851:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:15",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:15",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:15"
																								},
																								"nativeSrc": "5895:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:15"
																					},
																					"nativeSrc": "5727:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:15"
																				},
																				"nativeSrc": "5719:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:15",
																					"nodeType": "YulBlock",
																					"src": "5742:21:15",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:15",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:15",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:15"
																								},
																								"nativeSrc": "5749:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:15",
																					"nodeType": "YulBlock",
																					"src": "5723:3:15",
																					"statements": []
																				},
																				"src": "5719:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:15",
																					"nodeType": "YulBlock",
																					"src": "5963:156:15",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:15"
																										},
																										"nativeSrc": "6004:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:15"
																								},
																								"nativeSrc": "5998:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:15",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:15",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:15"
																												},
																												"nativeSrc": "6086:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:15"
																										},
																										"nativeSrc": "6056:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:15"
																								},
																								"nativeSrc": "6041:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:15"
																							},
																							"nativeSrc": "6041:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:15"
																					},
																					"nativeSrc": "5943:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:15"
																				},
																				"nativeSrc": "5940:179:15",
																				"nodeType": "YulIf",
																				"src": "5940:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:15",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:15"
																									},
																									"nativeSrc": "6149:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:15",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:15"
																							},
																							"nativeSrc": "6145:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:15"
																					},
																					"nativeSrc": "6132:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:15"
																				},
																				"nativeSrc": "6132:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:15"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:15",
																	"nodeType": "YulCase",
																	"src": "5560:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:15",
																		"nodeType": "YulBlock",
																		"src": "6195:222:15",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:15",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:15",
																					"nodeType": "YulBlock",
																					"src": "6246:67:15",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:15",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:15"
																										},
																										"nativeSrc": "6279:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:15"
																								},
																								"nativeSrc": "6273:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:15"
																				},
																				"nativeSrc": "6236:77:15",
																				"nodeType": "YulIf",
																				"src": "6236:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:15"
																							},
																							"nativeSrc": "6339:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:15"
																					},
																					"nativeSrc": "6326:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:15"
																				},
																				"nativeSrc": "6326:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:15"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:15",
																	"nodeType": "YulCase",
																	"src": "6187:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:15"
																},
																"nativeSrc": "5537:14:15",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:15"
															},
															"nativeSrc": "5530:887:15",
															"nodeType": "YulSwitch",
															"src": "5530:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:15",
														"nodeType": "YulTypedName",
														"src": "5109:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:15",
														"nodeType": "YulTypedName",
														"src": "5115:3:15",
														"type": ""
													}
												],
												"src": "5028:1395:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200356b3803806200356b83398181016040528101906200003691906200025d565b6040518060400160405280600b81526020017f50726f6475637442696c6c0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f50424c0000000000000000000000000000000000000000000000000000000000815250815f9081620000b29190620004f1565b508060019081620000c49190620004f1565b505050620000e7620000db6200012e60201b60201c565b6200013560201b60201c565b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620005d5565b5f33905090565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200022782620001fc565b9050919050565b62000239816200021b565b811462000244575f80fd5b50565b5f8151905062000257816200022e565b92915050565b5f60208284031215620002755762000274620001f8565b5b5f620002848482850162000247565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200030957607f821691505b6020821081036200031f576200031e620002c4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000346565b6200038f868362000346565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003d9620003d3620003cd84620003a7565b620003b0565b620003a7565b9050919050565b5f819050919050565b620003f483620003b9565b6200040c6200040382620003e0565b84845462000352565b825550505050565b5f90565b6200042262000414565b6200042f818484620003e9565b505050565b5b8181101562000456576200044a5f8262000418565b60018101905062000435565b5050565b601f821115620004a5576200046f8162000325565b6200047a8462000337565b810160208510156200048a578190505b620004a2620004998562000337565b83018262000434565b50505b505050565b5f82821c905092915050565b5f620004c75f1984600802620004aa565b1980831691505092915050565b5f620004e18383620004b6565b9150826002028217905092915050565b620004fc826200028d565b67ffffffffffffffff81111562000518576200051762000297565b5b620005248254620002f1565b620005318282856200045a565b5f60209050601f83116001811462000567575f841562000552578287015190505b6200055e8582620004d4565b865550620005cd565b601f198416620005778662000325565b5f5b82811015620005a05784890151825560018201915060208501945060208101905062000579565b86831015620005c05784890151620005bc601f891682620004b6565b8355505b6001600288020188555050505b505050505050565b612f8880620005e35f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c80637acc0b20116100c1578063b88d4fde1161007a578063b88d4fde1461039b578063c87b56dd146103b7578063cf2c0334146103e7578063e985e9c514610417578063f2fde38b14610447578063fc0c546a146104635761014b565b80637acc0b20146102d95780638642269e1461030b5780638da5cb5b1461032757806395d89b4114610345578063a22cb46514610363578063b15247d91461037f5761014b565b806323b872dd1161011357806323b872dd1461021957806342842e0e146102355780634de91a63146102515780636352211e1461026f57806370a082311461029f578063715018a6146102cf5761014b565b8063019d2fbf1461014f57806301ffc9a71461017f57806306fdde03146101af578063081812fc146101cd578063095ea7b3146101fd575b5f80fd5b61016960048036038101906101649190611f51565b610481565b6040516101769190612126565b60405180910390f35b6101996004803603810190610194919061219b565b610687565b6040516101a691906121e0565b60405180910390f35b6101b7610768565b6040516101c49190612241565b60405180910390f35b6101e760048036038101906101e2919061228b565b6107f7565b6040516101f491906122c5565b60405180910390f35b610217600480360381019061021291906122de565b610812565b005b610233600480360381019061022e919061231c565b610828565b005b61024f600480360381019061024a919061231c565b610927565b005b610259610946565b604051610266919061237b565b60405180910390f35b6102896004803603810190610284919061228b565b61094c565b60405161029691906122c5565b60405180910390f35b6102b960048036038101906102b49190611f51565b61095d565b6040516102c6919061237b565b60405180910390f35b6102d7610a13565b005b6102f360048036038101906102ee919061228b565b610a26565b60405161030293929190612394565b60405180910390f35b6103256004803603810190610320919061228b565b610ad2565b005b61032f610cfa565b60405161033c91906122c5565b60405180910390f35b61034d610d22565b60405161035a9190612241565b60405180910390f35b61037d600480360381019061037891906123fa565b610db2565b005b61039960048036038101906103949190612564565b610dc8565b005b6103b560048036038101906103b0919061265c565b610e45565b005b6103d160048036038101906103cc919061228b565b610e62565b6040516103de9190612241565b60405180910390f35b61040160048036038101906103fc91906122de565b610ec8565b60405161040e919061237b565b60405180910390f35b610431600480360381019061042c91906126dc565b610ef3565b60405161043e91906121e0565b60405180910390f35b610461600480360381019061045c9190611f51565b610f81565b005b61046b611003565b6040516104789190612775565b60405180910390f35b60605f600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561050957602002820191905f5260205f20905b8154815260200190600101908083116104f5575b505050505090505f815167ffffffffffffffff81111561052c5761052b612440565b5b60405190808252806020026020018201604052801561056557816020015b610552611ec7565b81526020019060019003908161054a5790505b5090505f5b825181101561067c575f8382815181106105875761058661278e565b5b6020026020010151905060095f8281526020019081526020015f206040518060600160405290815f82015481526020016001820180546105c6906127e8565b80601f01602080910402602001604051908101604052809291908181526020018280546105f2906127e8565b801561063d5780601f106106145761010080835404028352916020019161063d565b820191905f5260205f20905b81548152906001019060200180831161062057829003601f168201915b505050505081526020016002820154815250508383815181106106635761066261278e565b5b602002602001018190525050808060010191505061056a565b508092505050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610761575061076082611028565b5b9050919050565b60605f8054610776906127e8565b80601f01602080910402602001604051908101604052809291908181526020018280546107a2906127e8565b80156107ed5780601f106107c4576101008083540402835291602001916107ed565b820191905f5260205f20905b8154815290600101906020018083116107d057829003601f168201915b5050505050905090565b5f61080182611091565b5061080b82611117565b9050919050565b610824828261081f611150565b611157565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610898575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161088f91906122c5565b60405180910390fd5b5f6108ab83836108a6611150565b611169565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610921578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161091893929190612818565b60405180910390fd5b50505050565b61094183838360405180602001604052805f815250610e45565b505050565b600b5481565b5f61095682611091565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ce575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016109c591906122c5565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a1b611374565b610a245f6113f2565b565b6009602052805f5260405f205f91509050805f015490806001018054610a4b906127e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a77906127e8565b8015610ac25780601f10610a9957610100808354040283529160200191610ac2565b820191905f5260205f20905b815481529060010190602001808311610aa557829003601f168201915b5050505050908060020154905083565b5f60095f8381526020019081526020015f2090505f815f015403610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2290612897565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330670de0b6b3a76400008560020154610b8291906128e2565b6040518463ffffffff1660e01b8152600401610ba093929190612923565b6020604051808303815f875af1158015610bbc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be0919061296c565b610c1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c16906129e1565b60405180910390fd5b5f610c2a60086114b5565b9050610c3633826114c1565b610c4060086114de565b600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083908060018154018082558091505060019003905f5260205f20015f90919091909150553373ffffffffffffffffffffffffffffffffffffffff167f52e9b4b2677873f4a0e6ac637221c8e8cfd2149accd54695cb8fdaf9491ddecc848460020154604051610ced9291906129ff565b60405180910390a2505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610d31906127e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5d906127e8565b8015610da85780601f10610d7f57610100808354040283529160200191610da8565b820191905f5260205f20905b815481529060010190602001808311610d8b57829003601f168201915b5050505050905090565b610dc4610dbd611150565b83836114f2565b5050565b610dd0611374565b5f600b5f815480929190610de390612a26565b91905055905060405180606001604052808281526020018481526020018381525060095f8381526020019081526020015f205f820151815f01556020820151816001019081610e329190612c01565b5060408201518160020155905050505050565b610e50848484610828565b610e5c8484848461165b565b50505050565b6060610e6d82611091565b505f610e7761180d565b90505f815111610e955760405180602001604052805f815250610ec0565b80610e9f84611823565b604051602001610eb0929190612d0a565b6040516020818303038152906040525b915050919050565b600a602052815f5260405f208181548110610ee1575f80fd5b905f5260205f20015f91509150505481565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610f89611374565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fee90612d9d565b60405180910390fd5b611000816113f2565b50565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061109c836118ed565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361110e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611105919061237b565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6111648383836001611926565b505050565b5f80611174846118ed565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146111b5576111b4818486611ae5565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611240576111f45f855f80611926565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146112bf57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61137c611150565b73ffffffffffffffffffffffffffffffffffffffff1661139a610cfa565b73ffffffffffffffffffffffffffffffffffffffff16146113f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e790612e05565b60405180910390fd5b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f815f01549050919050565b6114da828260405180602001604052805f815250611ba8565b5050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361156257816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161155991906122c5565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161164e91906121e0565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611807578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261169e611150565b8685856040518563ffffffff1660e01b81526004016116c09493929190612e75565b6020604051808303815f875af19250505080156116fb57506040513d601f19601f820116820180604052508101906116f89190612ed3565b60015b61177c573d805f8114611729576040519150601f19603f3d011682016040523d82523d5f602084013e61172e565b606091505b505f81510361177457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161176b91906122c5565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461180557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117fc91906122c5565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f600161183184611bc3565b0190505f8167ffffffffffffffff81111561184f5761184e612440565b5b6040519080825280601f01601f1916602001820160405280156118815781602001600182028036833780820191505090505b5090505f82602001820190505b6001156118e2578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118d7576118d6612efe565b5b0494505f850361188e575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061195e57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611a90575f61196d84611091565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119d757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156119ea57506119e88184610ef3565b155b15611a2c57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611a2391906122c5565b60405180910390fd5b8115611a8e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611af0838383611d14565b611ba3575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b6457806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611b5b919061237b565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611b9a929190612f2b565b60405180910390fd5b505050565b611bb28383611dd4565b611bbe5f84848461165b565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c1f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c1557611c14612efe565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c5c576d04ee2d6d415b85acef81000000008381611c5257611c51612efe565b5b0492506020810190505b662386f26fc100008310611c8b57662386f26fc100008381611c8157611c80612efe565b5b0492506010810190505b6305f5e1008310611cb4576305f5e1008381611caa57611ca9612efe565b5b0492506008810190505b6127108310611cd9576127108381611ccf57611cce612efe565b5b0492506004810190505b60648310611cfc5760648381611cf257611cf1612efe565b5b0492506002810190505b600a8310611d0b576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611dcb57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d8c5750611d8b8484610ef3565b5b80611dca57508273ffffffffffffffffffffffffffffffffffffffff16611db283611117565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e44575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611e3b91906122c5565b60405180910390fd5b5f611e5083835f611169565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ec2575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611eb991906122c5565b60405180910390fd5b505050565b60405180606001604052805f8152602001606081526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f2082611ef7565b9050919050565b611f3081611f16565b8114611f3a575f80fd5b50565b5f81359050611f4b81611f27565b92915050565b5f60208284031215611f6657611f65611eef565b5b5f611f7384828501611f3d565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b611fb781611fa5565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611ff4578082015181840152602081019050611fd9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61201982611fbd565b6120238185611fc7565b9350612033818560208601611fd7565b61203c81611fff565b840191505092915050565b5f606083015f83015161205c5f860182611fae565b5060208301518482036020860152612074828261200f565b91505060408301516120896040860182611fae565b508091505092915050565b5f61209f8383612047565b905092915050565b5f602082019050919050565b5f6120bd82611f7c565b6120c78185611f86565b9350836020820285016120d985611f96565b805f5b8581101561211457848403895281516120f58582612094565b9450612100836120a7565b925060208a019950506001810190506120dc565b50829750879550505050505092915050565b5f6020820190508181035f83015261213e81846120b3565b905092915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61217a81612146565b8114612184575f80fd5b50565b5f8135905061219581612171565b92915050565b5f602082840312156121b0576121af611eef565b5b5f6121bd84828501612187565b91505092915050565b5f8115159050919050565b6121da816121c6565b82525050565b5f6020820190506121f35f8301846121d1565b92915050565b5f82825260208201905092915050565b5f61221382611fbd565b61221d81856121f9565b935061222d818560208601611fd7565b61223681611fff565b840191505092915050565b5f6020820190508181035f8301526122598184612209565b905092915050565b61226a81611fa5565b8114612274575f80fd5b50565b5f8135905061228581612261565b92915050565b5f602082840312156122a05761229f611eef565b5b5f6122ad84828501612277565b91505092915050565b6122bf81611f16565b82525050565b5f6020820190506122d85f8301846122b6565b92915050565b5f80604083850312156122f4576122f3611eef565b5b5f61230185828601611f3d565b925050602061231285828601612277565b9150509250929050565b5f805f6060848603121561233357612332611eef565b5b5f61234086828701611f3d565b935050602061235186828701611f3d565b925050604061236286828701612277565b9150509250925092565b61237581611fa5565b82525050565b5f60208201905061238e5f83018461236c565b92915050565b5f6060820190506123a75f83018661236c565b81810360208301526123b98185612209565b90506123c8604083018461236c565b949350505050565b6123d9816121c6565b81146123e3575f80fd5b50565b5f813590506123f4816123d0565b92915050565b5f80604083850312156124105761240f611eef565b5b5f61241d85828601611f3d565b925050602061242e858286016123e6565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61247682611fff565b810181811067ffffffffffffffff8211171561249557612494612440565b5b80604052505050565b5f6124a7611ee6565b90506124b3828261246d565b919050565b5f67ffffffffffffffff8211156124d2576124d1612440565b5b6124db82611fff565b9050602081019050919050565b828183375f83830152505050565b5f612508612503846124b8565b61249e565b9050828152602081018484840111156125245761252361243c565b5b61252f8482856124e8565b509392505050565b5f82601f83011261254b5761254a612438565b5b813561255b8482602086016124f6565b91505092915050565b5f806040838503121561257a57612579611eef565b5b5f83013567ffffffffffffffff81111561259757612596611ef3565b5b6125a385828601612537565b92505060206125b485828601612277565b9150509250929050565b5f67ffffffffffffffff8211156125d8576125d7612440565b5b6125e182611fff565b9050602081019050919050565b5f6126006125fb846125be565b61249e565b90508281526020810184848401111561261c5761261b61243c565b5b6126278482856124e8565b509392505050565b5f82601f83011261264357612642612438565b5b81356126538482602086016125ee565b91505092915050565b5f805f806080858703121561267457612673611eef565b5b5f61268187828801611f3d565b945050602061269287828801611f3d565b93505060406126a387828801612277565b925050606085013567ffffffffffffffff8111156126c4576126c3611ef3565b5b6126d08782880161262f565b91505092959194509250565b5f80604083850312156126f2576126f1611eef565b5b5f6126ff85828601611f3d565b925050602061271085828601611f3d565b9150509250929050565b5f819050919050565b5f61273d61273861273384611ef7565b61271a565b611ef7565b9050919050565b5f61274e82612723565b9050919050565b5f61275f82612744565b9050919050565b61276f81612755565b82525050565b5f6020820190506127885f830184612766565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806127ff57607f821691505b602082108103612812576128116127bb565b5b50919050565b5f60608201905061282b5f8301866122b6565b612838602083018561236c565b61284560408301846122b6565b949350505050565b7f50726f6475637420646f6573206e6f74206578697374000000000000000000005f82015250565b5f6128816016836121f9565b915061288c8261284d565b602082019050919050565b5f6020820190508181035f8301526128ae81612875565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128ec82611fa5565b91506128f783611fa5565b925082820261290581611fa5565b9150828204841483151761291c5761291b6128b5565b5b5092915050565b5f6060820190506129365f8301866122b6565b61294360208301856122b6565b612950604083018461236c565b949350505050565b5f81519050612966816123d0565b92915050565b5f6020828403121561298157612980611eef565b5b5f61298e84828501612958565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f6129cb6015836121f9565b91506129d682612997565b602082019050919050565b5f6020820190508181035f8301526129f8816129bf565b9050919050565b5f604082019050612a125f83018561236c565b612a1f602083018461236c565b9392505050565b5f612a3082611fa5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a6257612a616128b5565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612ac97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a8e565b612ad38683612a8e565b95508019841693508086168417925050509392505050565b5f612b05612b00612afb84611fa5565b61271a565b611fa5565b9050919050565b5f819050919050565b612b1e83612aeb565b612b32612b2a82612b0c565b848454612a9a565b825550505050565b5f90565b612b46612b3a565b612b51818484612b15565b505050565b5b81811015612b7457612b695f82612b3e565b600181019050612b57565b5050565b601f821115612bb957612b8a81612a6d565b612b9384612a7f565b81016020851015612ba2578190505b612bb6612bae85612a7f565b830182612b56565b50505b505050565b5f82821c905092915050565b5f612bd95f1984600802612bbe565b1980831691505092915050565b5f612bf18383612bca565b9150826002028217905092915050565b612c0a82611fbd565b67ffffffffffffffff811115612c2357612c22612440565b5b612c2d82546127e8565b612c38828285612b78565b5f60209050601f831160018114612c69575f8415612c57578287015190505b612c618582612be6565b865550612cc8565b601f198416612c7786612a6d565b5f5b82811015612c9e57848901518255600182019150602085019450602081019050612c79565b86831015612cbb5784890151612cb7601f891682612bca565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f612ce482611fbd565b612cee8185612cd0565b9350612cfe818560208601611fd7565b80840191505092915050565b5f612d158285612cda565b9150612d218284612cda565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f612d876026836121f9565b9150612d9282612d2d565b604082019050919050565b5f6020820190508181035f830152612db481612d7b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612def6020836121f9565b9150612dfa82612dbb565b602082019050919050565b5f6020820190508181035f830152612e1c81612de3565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612e4782612e23565b612e518185612e2d565b9350612e61818560208601611fd7565b612e6a81611fff565b840191505092915050565b5f608082019050612e885f8301876122b6565b612e9560208301866122b6565b612ea2604083018561236c565b8181036060830152612eb48184612e3d565b905095945050505050565b5f81519050612ecd81612171565b92915050565b5f60208284031215612ee857612ee7611eef565b5b5f612ef584828501612ebf565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050612f3e5f8301856122b6565b612f4b602083018461236c565b939250505056fea26469706673582212209d12e630dbaee6201dcca645506ae7ba042529c523195945bc9894904e7eca8864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x356B CODESIZE SUB DUP1 PUSH3 0x356B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F6475637442696C6C000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50424C0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xB2 SWAP2 SWAP1 PUSH3 0x4F1 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC4 SWAP2 SWAP1 PUSH3 0x4F1 JUMP JUMPDEST POP POP POP PUSH3 0xE7 PUSH3 0xDB PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x135 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x5D5 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x227 DUP3 PUSH3 0x1FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x239 DUP2 PUSH3 0x21B JUMP JUMPDEST DUP2 EQ PUSH3 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x257 DUP2 PUSH3 0x22E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x275 JUMPI PUSH3 0x274 PUSH3 0x1F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x284 DUP5 DUP3 DUP6 ADD PUSH3 0x247 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x309 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x31F JUMPI PUSH3 0x31E PUSH3 0x2C4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x383 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x346 JUMP JUMPDEST PUSH3 0x38F DUP7 DUP4 PUSH3 0x346 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3D9 PUSH3 0x3D3 PUSH3 0x3CD DUP5 PUSH3 0x3A7 JUMP JUMPDEST PUSH3 0x3B0 JUMP JUMPDEST PUSH3 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3F4 DUP4 PUSH3 0x3B9 JUMP JUMPDEST PUSH3 0x40C PUSH3 0x403 DUP3 PUSH3 0x3E0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x352 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x422 PUSH3 0x414 JUMP JUMPDEST PUSH3 0x42F DUP2 DUP5 DUP5 PUSH3 0x3E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x456 JUMPI PUSH3 0x44A PUSH0 DUP3 PUSH3 0x418 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4A5 JUMPI PUSH3 0x46F DUP2 PUSH3 0x325 JUMP JUMPDEST PUSH3 0x47A DUP5 PUSH3 0x337 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x48A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4A2 PUSH3 0x499 DUP6 PUSH3 0x337 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x434 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4C7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4AA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4E1 DUP4 DUP4 PUSH3 0x4B6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4FC DUP3 PUSH3 0x28D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x518 JUMPI PUSH3 0x517 PUSH3 0x297 JUMP JUMPDEST JUMPDEST PUSH3 0x524 DUP3 SLOAD PUSH3 0x2F1 JUMP JUMPDEST PUSH3 0x531 DUP3 DUP3 DUP6 PUSH3 0x45A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x567 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x552 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x55E DUP6 DUP3 PUSH3 0x4D4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5CD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x577 DUP7 PUSH3 0x325 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5A0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x579 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5C0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5BC PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4B6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2F88 DUP1 PUSH3 0x5E3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ACC0B20 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xCF2C0334 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x463 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x7ACC0B20 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x8642269E EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB15247D9 EQ PUSH2 0x37F JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x4DE91A63 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CF JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x19D2FBF EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1F51 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1F51 JUMP JUMPDEST PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH2 0xA13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0xDB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2564 JUMP JUMPDEST PUSH2 0xDC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x265C JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x26DC JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x1F51 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46B PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4F5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52C JUMPI PUSH2 0x52B PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x565 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x552 PUSH2 0x1EC7 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x54A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x587 JUMPI PUSH2 0x586 PUSH2 0x278E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F2 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x63D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x614 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x620 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x663 JUMPI PUSH2 0x662 PUSH2 0x278E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x56A JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x751 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x761 JUMPI POP PUSH2 0x760 DUP3 PUSH2 0x1028 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x776 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A2 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x801 DUP3 PUSH2 0x1091 JUMP JUMPDEST POP PUSH2 0x80B DUP3 PUSH2 0x1117 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x824 DUP3 DUP3 PUSH2 0x81F PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x1157 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x898 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8AB DUP4 DUP4 PUSH2 0x8A6 PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x1169 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x921 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x918 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x941 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x956 DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0x1374 JUMP JUMPDEST PUSH2 0xA24 PUSH0 PUSH2 0x13F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA4B SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA77 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA99 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAA5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0xB2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB22 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x296C JUMP JUMPDEST PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC16 SWAP1 PUSH2 0x29E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC2A PUSH1 0x8 PUSH2 0x14B5 JUMP JUMPDEST SWAP1 POP PUSH2 0xC36 CALLER DUP3 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0xC40 PUSH1 0x8 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x52E9B4B2677873F4A0E6AC637221C8E8CFD2149ACCD54695CB8FDAF9491DDECC DUP5 DUP5 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xCED SWAP3 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xD31 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD5D SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD7F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDC4 PUSH2 0xDBD PUSH2 0x1150 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x14F2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xDD0 PUSH2 0x1374 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDE3 SWAP1 PUSH2 0x2A26 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xE32 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE50 DUP5 DUP5 DUP5 PUSH2 0x828 JUMP JUMPDEST PUSH2 0xE5C DUP5 DUP5 DUP5 DUP5 PUSH2 0x165B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE6D DUP3 PUSH2 0x1091 JUMP JUMPDEST POP PUSH0 PUSH2 0xE77 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xEC0 JUMP JUMPDEST DUP1 PUSH2 0xE9F DUP5 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEB0 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF89 PUSH2 0x1374 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEE SWAP1 PUSH2 0x2D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1000 DUP2 PUSH2 0x13F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x109C DUP4 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1105 SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1164 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1926 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1174 DUP5 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B5 JUMPI PUSH2 0x11B4 DUP2 DUP5 DUP7 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1240 JUMPI PUSH2 0x11F4 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12BF JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x137C PUSH2 0x1150 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x139A PUSH2 0xCFA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E7 SWAP1 PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DA DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1BA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1562 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1559 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1807 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x169E PUSH2 0x1150 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16FB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F8 SWAP2 SWAP1 PUSH2 0x2ED3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x177C JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1729 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x172E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1774 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176B SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1805 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FC SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1831 DUP5 PUSH2 0x1BC3 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1881 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x18E2 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x18D7 JUMPI PUSH2 0x18D6 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x188E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x195E JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A90 JUMPI PUSH0 PUSH2 0x196D DUP5 PUSH2 0x1091 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19EA JUMPI POP PUSH2 0x19E8 DUP2 DUP5 PUSH2 0xEF3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1A2C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A23 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1A8E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AF0 DUP4 DUP4 DUP4 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B64 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5B SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9A SWAP3 SWAP2 SWAP1 PUSH2 0x2F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1BB2 DUP4 DUP4 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x1BBE PUSH0 DUP5 DUP5 DUP5 PUSH2 0x165B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C1F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C5C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1C8B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1C81 JUMPI PUSH2 0x1C80 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CB4 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1CAA JUMPI PUSH2 0x1CA9 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1CD9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CFC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1CF2 JUMPI PUSH2 0x1CF1 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D0B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DCB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1D8C JUMPI POP PUSH2 0x1D8B DUP5 DUP5 PUSH2 0xEF3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1DCA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB2 DUP4 PUSH2 0x1117 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3B SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E50 DUP4 DUP4 PUSH0 PUSH2 0x1169 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EC2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB9 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F20 DUP3 PUSH2 0x1EF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F30 DUP2 PUSH2 0x1F16 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F4B DUP2 PUSH2 0x1F27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F65 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F73 DUP5 DUP3 DUP6 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB7 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FD9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2019 DUP3 PUSH2 0x1FBD JUMP JUMPDEST PUSH2 0x2023 DUP2 DUP6 PUSH2 0x1FC7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2033 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x203C DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x205C PUSH0 DUP7 ADD DUP3 PUSH2 0x1FAE JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2074 DUP3 DUP3 PUSH2 0x200F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2089 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1FAE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x209F DUP4 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20BD DUP3 PUSH2 0x1F7C JUMP JUMPDEST PUSH2 0x20C7 DUP2 DUP6 PUSH2 0x1F86 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x20D9 DUP6 PUSH2 0x1F96 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2114 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x20F5 DUP6 DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP5 POP PUSH2 0x2100 DUP4 PUSH2 0x20A7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20DC JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x213E DUP2 DUP5 PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x217A DUP2 PUSH2 0x2146 JUMP JUMPDEST DUP2 EQ PUSH2 0x2184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2195 DUP2 PUSH2 0x2171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B0 JUMPI PUSH2 0x21AF PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21BD DUP5 DUP3 DUP6 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21DA DUP2 PUSH2 0x21C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x21D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2213 DUP3 PUSH2 0x1FBD JUMP JUMPDEST PUSH2 0x221D DUP2 DUP6 PUSH2 0x21F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x222D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x2236 DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2259 DUP2 DUP5 PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x226A DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2285 DUP2 PUSH2 0x2261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A0 JUMPI PUSH2 0x229F PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22AD DUP5 DUP3 DUP6 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22BF DUP2 PUSH2 0x1F16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x22B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F4 JUMPI PUSH2 0x22F3 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2301 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2312 DUP6 DUP3 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2333 JUMPI PUSH2 0x2332 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2340 DUP7 DUP3 DUP8 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2351 DUP7 DUP3 DUP8 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2362 DUP7 DUP3 DUP8 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2375 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x238E PUSH0 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23A7 PUSH0 DUP4 ADD DUP7 PUSH2 0x236C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23B9 DUP2 DUP6 PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP PUSH2 0x23C8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x23D9 DUP2 PUSH2 0x21C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23F4 DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2410 JUMPI PUSH2 0x240F PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x241D DUP6 DUP3 DUP7 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x242E DUP6 DUP3 DUP7 ADD PUSH2 0x23E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2476 DUP3 PUSH2 0x1FFF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2495 JUMPI PUSH2 0x2494 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24A7 PUSH2 0x1EE6 JUMP JUMPDEST SWAP1 POP PUSH2 0x24B3 DUP3 DUP3 PUSH2 0x246D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH2 0x24DB DUP3 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2508 PUSH2 0x2503 DUP5 PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0x249E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2524 JUMPI PUSH2 0x2523 PUSH2 0x243C JUMP JUMPDEST JUMPDEST PUSH2 0x252F DUP5 DUP3 DUP6 PUSH2 0x24E8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x254B JUMPI PUSH2 0x254A PUSH2 0x2438 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x255B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x257A JUMPI PUSH2 0x2579 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2597 JUMPI PUSH2 0x2596 PUSH2 0x1EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x25A3 DUP6 DUP3 DUP7 ADD PUSH2 0x2537 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25D8 JUMPI PUSH2 0x25D7 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH2 0x25E1 DUP3 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2600 PUSH2 0x25FB DUP5 PUSH2 0x25BE JUMP JUMPDEST PUSH2 0x249E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x261C JUMPI PUSH2 0x261B PUSH2 0x243C JUMP JUMPDEST JUMPDEST PUSH2 0x2627 DUP5 DUP3 DUP6 PUSH2 0x24E8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2643 JUMPI PUSH2 0x2642 PUSH2 0x2438 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2653 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2673 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2681 DUP8 DUP3 DUP9 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2692 DUP8 DUP3 DUP9 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x26A3 DUP8 DUP3 DUP9 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26C4 JUMPI PUSH2 0x26C3 PUSH2 0x1EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x26D0 DUP8 DUP3 DUP9 ADD PUSH2 0x262F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26F2 JUMPI PUSH2 0x26F1 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26FF DUP6 DUP3 DUP7 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2710 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x273D PUSH2 0x2738 PUSH2 0x2733 DUP5 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x271A JUMP JUMPDEST PUSH2 0x1EF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x274E DUP3 PUSH2 0x2723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275F DUP3 PUSH2 0x2744 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276F DUP2 PUSH2 0x2755 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2788 PUSH0 DUP4 ADD DUP5 PUSH2 0x2766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x27FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2812 JUMPI PUSH2 0x2811 PUSH2 0x27BB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x282B PUSH0 DUP4 ADD DUP7 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2838 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x236C JUMP JUMPDEST PUSH2 0x2845 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x50726F6475637420646F6573206E6F7420657869737400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2881 PUSH1 0x16 DUP4 PUSH2 0x21F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x288C DUP3 PUSH2 0x284D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28AE DUP2 PUSH2 0x2875 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28EC DUP3 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x28F7 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2905 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x291C JUMPI PUSH2 0x291B PUSH2 0x28B5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2936 PUSH0 DUP4 ADD DUP7 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2943 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2950 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2966 DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x298E DUP5 DUP3 DUP6 ADD PUSH2 0x2958 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29CB PUSH1 0x15 DUP4 PUSH2 0x21F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D6 DUP3 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29F8 DUP2 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A12 PUSH0 DUP4 ADD DUP6 PUSH2 0x236C JUMP JUMPDEST PUSH2 0x2A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A30 DUP3 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2A62 JUMPI PUSH2 0x2A61 PUSH2 0x28B5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2AC9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0x2AD3 DUP7 DUP4 PUSH2 0x2A8E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B05 PUSH2 0x2B00 PUSH2 0x2AFB DUP5 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x271A JUMP JUMPDEST PUSH2 0x1FA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B1E DUP4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x2B32 PUSH2 0x2B2A DUP3 PUSH2 0x2B0C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A9A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2B46 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x2B51 DUP2 DUP5 DUP5 PUSH2 0x2B15 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B74 JUMPI PUSH2 0x2B69 PUSH0 DUP3 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2BB9 JUMPI PUSH2 0x2B8A DUP2 PUSH2 0x2A6D JUMP JUMPDEST PUSH2 0x2B93 DUP5 PUSH2 0x2A7F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2BA2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2BB6 PUSH2 0x2BAE DUP6 PUSH2 0x2A7F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B56 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2BBE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BF1 DUP4 DUP4 PUSH2 0x2BCA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C0A DUP3 PUSH2 0x1FBD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C23 JUMPI PUSH2 0x2C22 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH2 0x2C2D DUP3 SLOAD PUSH2 0x27E8 JUMP JUMPDEST PUSH2 0x2C38 DUP3 DUP3 DUP6 PUSH2 0x2B78 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C69 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2C57 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C61 DUP6 DUP3 PUSH2 0x2BE6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C77 DUP7 PUSH2 0x2A6D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C9E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C79 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2CBB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2CB7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BCA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CE4 DUP3 PUSH2 0x1FBD JUMP JUMPDEST PUSH2 0x2CEE DUP2 DUP6 PUSH2 0x2CD0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D15 DUP3 DUP6 PUSH2 0x2CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2D21 DUP3 DUP5 PUSH2 0x2CDA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D87 PUSH1 0x26 DUP4 PUSH2 0x21F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D92 DUP3 PUSH2 0x2D2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DB4 DUP2 PUSH2 0x2D7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DEF PUSH1 0x20 DUP4 PUSH2 0x21F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DFA DUP3 PUSH2 0x2DBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E1C DUP2 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E47 DUP3 PUSH2 0x2E23 JUMP JUMPDEST PUSH2 0x2E51 DUP2 DUP6 PUSH2 0x2E2D JUMP JUMPDEST SWAP4 POP PUSH2 0x2E61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x2E6A DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E88 PUSH0 DUP4 ADD DUP8 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2E95 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2EA2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x236C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2EB4 DUP2 DUP5 PUSH2 0x2E3D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2ECD DUP2 PUSH2 0x2171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE8 JUMPI PUSH2 0x2EE7 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EF5 DUP5 DUP3 DUP6 ADD PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F3E PUSH0 DUP4 ADD DUP6 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2F4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SLT 0xE6 ADDRESS 0xDB 0xAE 0xE6 KECCAK256 SAR 0xCC 0xA6 GASLIMIT POP PUSH11 0xE7BA042529C523195945BC SWAP9 SWAP5 SWAP1 0x4E PUSH31 0xCA8864736F6C63430008160033000000000000000000000000000000000000 ",
							"sourceMap": "292:1979:14:-:0;;;807:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;897:13:14::1;882:5;;:29;;;;;;;;;;;;;;;;;;807:112:::0;292:1979;;640:96:7;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;292:1979:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1139": {
									"entryPoint": 4439,
									"id": 1139,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1205": {
									"entryPoint": 6438,
									"id": 1205,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_532": {
									"entryPoint": 6157,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_787": {
									"entryPoint": 6885,
									"id": 787,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1335": {
									"entryPoint": 5723,
									"id": 1335,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 4980,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_714": {
									"entryPoint": 4375,
									"id": 714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_750": {
									"entryPoint": 7444,
									"id": 750,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_943": {
									"entryPoint": 7636,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1511": {
									"entryPoint": 4432,
									"id": 1511,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_701": {
									"entryPoint": 6381,
									"id": 701,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1271": {
									"entryPoint": 4241,
									"id": 1271,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_958": {
									"entryPoint": 5313,
									"id": 958,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_984": {
									"entryPoint": 7080,
									"id": 984,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1242": {
									"entryPoint": 5362,
									"id": 1242,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 5106,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_893": {
									"entryPoint": 4457,
									"id": 893,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addProduct_3133": {
									"entryPoint": 3528,
									"id": 3133,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approve_548": {
									"entryPoint": 2066,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_456": {
									"entryPoint": 2397,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyProduct_3206": {
									"entryPoint": 2770,
									"id": 3206,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1539": {
									"entryPoint": 5301,
									"id": 1539,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_565": {
									"entryPoint": 2039,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserProductDetails_3267": {
									"entryPoint": 1153,
									"id": 3267,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1553": {
									"entryPoint": 5342,
									"id": 1553,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_598": {
									"entryPoint": 3827,
									"id": 598,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2760": {
									"entryPoint": 7107,
									"id": 2760,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_478": {
									"entryPoint": 1896,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextProductId_3092": {
									"entryPoint": 2374,
									"id": 3092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_469": {
									"entryPoint": 2380,
									"id": 469,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 3322,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@products_3085": {
									"entryPoint": 2598,
									"id": 3085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2579,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_662": {
									"entryPoint": 2343,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_688": {
									"entryPoint": 3653,
									"id": 688,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_581": {
									"entryPoint": 3506,
									"id": 581,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1873": {
									"entryPoint": 4136,
									"id": 1873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_428": {
									"entryPoint": 1671,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_487": {
									"entryPoint": 3362,
									"id": 487,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1663": {
									"entryPoint": 6179,
									"id": 1663,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_523": {
									"entryPoint": 3682,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_3058": {
									"entryPoint": 4099,
									"id": 3058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_644": {
									"entryPoint": 2088,
									"id": 644,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 3969,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userPurchases_3090": {
									"entryPoint": 3784,
									"id": 3090,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9710,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 9527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 9572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$327_to_t_address_fromStack": {
									"entryPoint": 10086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11530,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10531,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11893,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12075,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10264,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$327__to_t_address__fromStack_reversed": {
									"entryPoint": 10101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 9108,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10751,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 8135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11128,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IERC20_$327_to_t_address": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8151,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10421,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 11020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592": {
									"entryPoint": 10317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 11565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 10647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 11707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 11029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:32587:15",
										"nodeType": "YulBlock",
										"src": "0:32587:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "748:87:15",
													"nodeType": "YulBlock",
													"src": "748:87:15",
													"statements": [
														{
															"nativeSrc": "758:29:15",
															"nodeType": "YulAssignment",
															"src": "758:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:15"
																},
																"nativeSrc": "767:20:15",
																"nodeType": "YulFunctionCall",
																"src": "767:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:15"
																},
																"nativeSrc": "796:33:15",
																"nodeType": "YulFunctionCall",
																"src": "796:33:15"
															},
															"nativeSrc": "796:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:15",
														"nodeType": "YulTypedName",
														"src": "726:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:15",
														"nodeType": "YulTypedName",
														"src": "734:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:15",
														"nodeType": "YulTypedName",
														"src": "742:5:15",
														"type": ""
													}
												],
												"src": "696:139:15"
											},
											{
												"body": {
													"nativeSrc": "907:263:15",
													"nodeType": "YulBlock",
													"src": "907:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:15",
																"nodeType": "YulBlock",
																"src": "953:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:15"
																			},
																			"nativeSrc": "955:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:15"
																		},
																		"nativeSrc": "955:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:15"
																		},
																		"nativeSrc": "924:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:15",
																		"nodeType": "YulLiteral",
																		"src": "949:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:15"
																},
																"nativeSrc": "920:32:15",
																"nodeType": "YulFunctionCall",
																"src": "920:32:15"
															},
															"nativeSrc": "917:119:15",
															"nodeType": "YulIf",
															"src": "917:119:15"
														},
														{
															"nativeSrc": "1046:117:15",
															"nodeType": "YulBlock",
															"src": "1046:117:15",
															"statements": [
																{
																	"nativeSrc": "1061:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:15",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:15"
																				},
																				"nativeSrc": "1121:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:15"
																		},
																		"nativeSrc": "1100:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:15",
														"nodeType": "YulTypedName",
														"src": "877:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:15",
														"nodeType": "YulTypedName",
														"src": "888:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:15",
														"nodeType": "YulTypedName",
														"src": "900:6:15",
														"type": ""
													}
												],
												"src": "841:329:15"
											},
											{
												"body": {
													"nativeSrc": "1275:40:15",
													"nodeType": "YulBlock",
													"src": "1275:40:15",
													"statements": [
														{
															"nativeSrc": "1286:22:15",
															"nodeType": "YulAssignment",
															"src": "1286:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1302:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1302:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1296:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1296:5:15"
																},
																"nativeSrc": "1296:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1296:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1286:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1176:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1258:5:15",
														"nodeType": "YulTypedName",
														"src": "1258:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1268:6:15",
														"nodeType": "YulTypedName",
														"src": "1268:6:15",
														"type": ""
													}
												],
												"src": "1176:139:15"
											},
											{
												"body": {
													"nativeSrc": "1457:73:15",
													"nodeType": "YulBlock",
													"src": "1457:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1474:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1474:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1479:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1479:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1467:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1467:6:15"
																},
																"nativeSrc": "1467:19:15",
																"nodeType": "YulFunctionCall",
																"src": "1467:19:15"
															},
															"nativeSrc": "1467:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "1467:19:15"
														},
														{
															"nativeSrc": "1495:29:15",
															"nodeType": "YulAssignment",
															"src": "1495:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1514:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1514:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1519:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1519:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1510:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1510:3:15"
																},
																"nativeSrc": "1510:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1510:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1495:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "1495:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "1321:209:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1429:3:15",
														"nodeType": "YulTypedName",
														"src": "1429:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1434:6:15",
														"nodeType": "YulTypedName",
														"src": "1434:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1445:11:15",
														"nodeType": "YulTypedName",
														"src": "1445:11:15",
														"type": ""
													}
												],
												"src": "1321:209:15"
											},
											{
												"body": {
													"nativeSrc": "1633:60:15",
													"nodeType": "YulBlock",
													"src": "1633:60:15",
													"statements": [
														{
															"nativeSrc": "1643:11:15",
															"nodeType": "YulAssignment",
															"src": "1643:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "1651:3:15",
																"nodeType": "YulIdentifier",
																"src": "1651:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1643:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1643:4:15"
																}
															]
														},
														{
															"nativeSrc": "1664:22:15",
															"nodeType": "YulAssignment",
															"src": "1664:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "1676:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1676:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1681:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1681:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1672:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:15"
																},
																"nativeSrc": "1672:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1672:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1664:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1664:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1536:157:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1620:3:15",
														"nodeType": "YulTypedName",
														"src": "1620:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1628:4:15",
														"nodeType": "YulTypedName",
														"src": "1628:4:15",
														"type": ""
													}
												],
												"src": "1536:157:15"
											},
											{
												"body": {
													"nativeSrc": "1744:32:15",
													"nodeType": "YulBlock",
													"src": "1744:32:15",
													"statements": [
														{
															"nativeSrc": "1754:16:15",
															"nodeType": "YulAssignment",
															"src": "1754:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "1765:5:15",
																"nodeType": "YulIdentifier",
																"src": "1765:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1754:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1754:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1699:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1726:5:15",
														"nodeType": "YulTypedName",
														"src": "1726:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1736:7:15",
														"nodeType": "YulTypedName",
														"src": "1736:7:15",
														"type": ""
													}
												],
												"src": "1699:77:15"
											},
											{
												"body": {
													"nativeSrc": "1837:53:15",
													"nodeType": "YulBlock",
													"src": "1837:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1854:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1854:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1877:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1877:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1859:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1859:17:15"
																		},
																		"nativeSrc": "1859:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1859:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1847:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:15"
																},
																"nativeSrc": "1847:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1847:37:15"
															},
															"nativeSrc": "1847:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1847:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1782:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1825:5:15",
														"nodeType": "YulTypedName",
														"src": "1825:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1832:3:15",
														"nodeType": "YulTypedName",
														"src": "1832:3:15",
														"type": ""
													}
												],
												"src": "1782:108:15"
											},
											{
												"body": {
													"nativeSrc": "1955:40:15",
													"nodeType": "YulBlock",
													"src": "1955:40:15",
													"statements": [
														{
															"nativeSrc": "1966:22:15",
															"nodeType": "YulAssignment",
															"src": "1966:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1982:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1982:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1976:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1976:5:15"
																},
																"nativeSrc": "1976:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1976:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1966:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1896:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1938:5:15",
														"nodeType": "YulTypedName",
														"src": "1938:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1948:6:15",
														"nodeType": "YulTypedName",
														"src": "1948:6:15",
														"type": ""
													}
												],
												"src": "1896:99:15"
											},
											{
												"body": {
													"nativeSrc": "2087:73:15",
													"nodeType": "YulBlock",
													"src": "2087:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2104:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2104:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2109:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2109:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2097:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:15"
																},
																"nativeSrc": "2097:19:15",
																"nodeType": "YulFunctionCall",
																"src": "2097:19:15"
															},
															"nativeSrc": "2097:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "2097:19:15"
														},
														{
															"nativeSrc": "2125:29:15",
															"nodeType": "YulAssignment",
															"src": "2125:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2144:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2144:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2149:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2149:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2140:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2140:3:15"
																},
																"nativeSrc": "2140:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2140:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2125:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "2125:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "2001:159:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2059:3:15",
														"nodeType": "YulTypedName",
														"src": "2059:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2064:6:15",
														"nodeType": "YulTypedName",
														"src": "2064:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2075:11:15",
														"nodeType": "YulTypedName",
														"src": "2075:11:15",
														"type": ""
													}
												],
												"src": "2001:159:15"
											},
											{
												"body": {
													"nativeSrc": "2228:184:15",
													"nodeType": "YulBlock",
													"src": "2228:184:15",
													"statements": [
														{
															"nativeSrc": "2238:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2238:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2247:1:15",
																"nodeType": "YulLiteral",
																"src": "2247:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2242:1:15",
																	"nodeType": "YulTypedName",
																	"src": "2242:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2307:63:15",
																"nodeType": "YulBlock",
																"src": "2307:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2332:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2332:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2337:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "2337:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2328:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2328:3:15"
																					},
																					"nativeSrc": "2328:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2328:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2351:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2351:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2356:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "2356:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2347:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2347:3:15"
																							},
																							"nativeSrc": "2347:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2347:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2341:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2341:5:15"
																					},
																					"nativeSrc": "2341:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2341:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2321:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2321:6:15"
																			},
																			"nativeSrc": "2321:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2321:39:15"
																		},
																		"nativeSrc": "2321:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2321:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2268:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "2268:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2271:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2271:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2265:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2265:2:15"
																},
																"nativeSrc": "2265:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2265:13:15"
															},
															"nativeSrc": "2257:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2279:19:15",
																"nodeType": "YulBlock",
																"src": "2279:19:15",
																"statements": [
																	{
																		"nativeSrc": "2281:15:15",
																		"nodeType": "YulAssignment",
																		"src": "2281:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2290:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "2290:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2293:2:15",
																					"nodeType": "YulLiteral",
																					"src": "2293:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2286:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2286:3:15"
																			},
																			"nativeSrc": "2286:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2286:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2281:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "2281:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2261:3:15",
																"nodeType": "YulBlock",
																"src": "2261:3:15",
																"statements": []
															},
															"src": "2257:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2390:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2390:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2395:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2395:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2386:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:15"
																		},
																		"nativeSrc": "2386:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2404:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2404:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2379:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2379:6:15"
																},
																"nativeSrc": "2379:27:15",
																"nodeType": "YulFunctionCall",
																"src": "2379:27:15"
															},
															"nativeSrc": "2379:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "2379:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2166:246:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2210:3:15",
														"nodeType": "YulTypedName",
														"src": "2210:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2215:3:15",
														"nodeType": "YulTypedName",
														"src": "2215:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2220:6:15",
														"nodeType": "YulTypedName",
														"src": "2220:6:15",
														"type": ""
													}
												],
												"src": "2166:246:15"
											},
											{
												"body": {
													"nativeSrc": "2466:54:15",
													"nodeType": "YulBlock",
													"src": "2466:54:15",
													"statements": [
														{
															"nativeSrc": "2476:38:15",
															"nodeType": "YulAssignment",
															"src": "2476:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2494:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2494:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2501:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2501:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2490:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2490:3:15"
																		},
																		"nativeSrc": "2490:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2490:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2510:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2510:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2506:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:15"
																		},
																		"nativeSrc": "2506:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2486:3:15"
																},
																"nativeSrc": "2486:28:15",
																"nodeType": "YulFunctionCall",
																"src": "2486:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2476:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2476:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2418:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2449:5:15",
														"nodeType": "YulTypedName",
														"src": "2449:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2459:6:15",
														"nodeType": "YulTypedName",
														"src": "2459:6:15",
														"type": ""
													}
												],
												"src": "2418:102:15"
											},
											{
												"body": {
													"nativeSrc": "2608:275:15",
													"nodeType": "YulBlock",
													"src": "2608:275:15",
													"statements": [
														{
															"nativeSrc": "2618:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2618:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2665:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2665:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2632:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "2632:32:15"
																},
																"nativeSrc": "2632:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2632:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2622:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2622:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2680:68:15",
															"nodeType": "YulAssignment",
															"src": "2680:68:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2736:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2736:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2741:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2741:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "2687:48:15",
																	"nodeType": "YulIdentifier",
																	"src": "2687:48:15"
																},
																"nativeSrc": "2687:61:15",
																"nodeType": "YulFunctionCall",
																"src": "2687:61:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2680:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2680:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2796:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2796:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2803:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2803:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2792:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:15"
																		},
																		"nativeSrc": "2792:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2810:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2810:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2815:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2815:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2757:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "2757:34:15"
																},
																"nativeSrc": "2757:65:15",
																"nodeType": "YulFunctionCall",
																"src": "2757:65:15"
															},
															"nativeSrc": "2757:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "2757:65:15"
														},
														{
															"nativeSrc": "2831:46:15",
															"nodeType": "YulAssignment",
															"src": "2831:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2842:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2842:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2869:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2869:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2847:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "2847:21:15"
																		},
																		"nativeSrc": "2847:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2847:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2838:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:15"
																},
																"nativeSrc": "2838:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2838:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2831:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "2526:357:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2589:5:15",
														"nodeType": "YulTypedName",
														"src": "2589:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2596:3:15",
														"nodeType": "YulTypedName",
														"src": "2596:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2604:3:15",
														"nodeType": "YulTypedName",
														"src": "2604:3:15",
														"type": ""
													}
												],
												"src": "2526:357:15"
											},
											{
												"body": {
													"nativeSrc": "3069:655:15",
													"nodeType": "YulBlock",
													"src": "3069:655:15",
													"statements": [
														{
															"nativeSrc": "3079:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3079:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3095:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3095:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3100:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3100:4:15",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3091:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:15"
																},
																"nativeSrc": "3091:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3091:14:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3083:4:15",
																	"nodeType": "YulTypedName",
																	"src": "3083:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3115:162:15",
															"nodeType": "YulBlock",
															"src": "3115:162:15",
															"statements": [
																{
																	"nativeSrc": "3148:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3178:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3178:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3185:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3185:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3174:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3174:3:15"
																				},
																				"nativeSrc": "3174:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3174:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3168:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3168:5:15"
																		},
																		"nativeSrc": "3168:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3152:12:15",
																			"nodeType": "YulTypedName",
																			"src": "3152:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3238:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "3238:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3256:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3256:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3261:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3261:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3252:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:15"
																				},
																				"nativeSrc": "3252:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3252:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3204:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "3204:33:15"
																		},
																		"nativeSrc": "3204:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3204:63:15"
																	},
																	"nativeSrc": "3204:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3204:63:15"
																}
															]
														},
														{
															"nativeSrc": "3287:235:15",
															"nodeType": "YulBlock",
															"src": "3287:235:15",
															"statements": [
																{
																	"nativeSrc": "3322:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3322:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3352:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3352:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3359:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3359:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3348:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:15"
																				},
																				"nativeSrc": "3348:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3348:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3342:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3342:5:15"
																		},
																		"nativeSrc": "3342:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3342:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3326:12:15",
																			"nodeType": "YulTypedName",
																			"src": "3326:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3390:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3390:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3395:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3395:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:15"
																				},
																				"nativeSrc": "3386:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "3406:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "3406:4:15"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "3412:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3412:3:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3402:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3402:3:15"
																				},
																				"nativeSrc": "3402:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3402:14:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3379:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3379:6:15"
																		},
																		"nativeSrc": "3379:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3379:38:15"
																	},
																	"nativeSrc": "3379:38:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3379:38:15"
																},
																{
																	"nativeSrc": "3430:81:15",
																	"nodeType": "YulAssignment",
																	"src": "3430:81:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3492:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "3492:12:15"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "3506:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3506:4:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "3438:53:15",
																			"nodeType": "YulIdentifier",
																			"src": "3438:53:15"
																		},
																		"nativeSrc": "3438:73:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:73:15"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "3430:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "3430:4:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3532:165:15",
															"nodeType": "YulBlock",
															"src": "3532:165:15",
															"statements": [
																{
																	"nativeSrc": "3568:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3568:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3598:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3598:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3605:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3605:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3594:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3594:3:15"
																				},
																				"nativeSrc": "3594:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3594:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3588:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3588:5:15"
																		},
																		"nativeSrc": "3588:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3588:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3572:12:15",
																			"nodeType": "YulTypedName",
																			"src": "3572:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3658:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "3658:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3676:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3676:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3681:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3681:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3672:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3672:3:15"
																				},
																				"nativeSrc": "3672:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3672:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3624:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "3624:33:15"
																		},
																		"nativeSrc": "3624:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3624:63:15"
																	},
																	"nativeSrc": "3624:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3624:63:15"
																}
															]
														},
														{
															"nativeSrc": "3707:11:15",
															"nodeType": "YulAssignment",
															"src": "3707:11:15",
															"value": {
																"name": "tail",
																"nativeSrc": "3714:4:15",
																"nodeType": "YulIdentifier",
																"src": "3714:4:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3707:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr",
												"nativeSrc": "2955:769:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3048:5:15",
														"nodeType": "YulTypedName",
														"src": "3048:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3055:3:15",
														"nodeType": "YulTypedName",
														"src": "3055:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3064:3:15",
														"nodeType": "YulTypedName",
														"src": "3064:3:15",
														"type": ""
													}
												],
												"src": "2955:769:15"
											},
											{
												"body": {
													"nativeSrc": "3860:126:15",
													"nodeType": "YulBlock",
													"src": "3860:126:15",
													"statements": [
														{
															"nativeSrc": "3870:110:15",
															"nodeType": "YulAssignment",
															"src": "3870:110:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3968:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3968:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3976:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3976:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr",
																	"nativeSrc": "3884:83:15",
																	"nodeType": "YulIdentifier",
																	"src": "3884:83:15"
																},
																"nativeSrc": "3884:96:15",
																"nodeType": "YulFunctionCall",
																"src": "3884:96:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3870:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "3870:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr",
												"nativeSrc": "3730:256:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3833:6:15",
														"nodeType": "YulTypedName",
														"src": "3833:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3841:3:15",
														"nodeType": "YulTypedName",
														"src": "3841:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3849:10:15",
														"nodeType": "YulTypedName",
														"src": "3849:10:15",
														"type": ""
													}
												],
												"src": "3730:256:15"
											},
											{
												"body": {
													"nativeSrc": "4092:38:15",
													"nodeType": "YulBlock",
													"src": "4092:38:15",
													"statements": [
														{
															"nativeSrc": "4102:22:15",
															"nodeType": "YulAssignment",
															"src": "4102:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4114:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4114:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4119:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4119:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4110:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4110:3:15"
																},
																"nativeSrc": "4110:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4110:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "4102:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4102:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3992:138:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4079:3:15",
														"nodeType": "YulTypedName",
														"src": "4079:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "4087:4:15",
														"nodeType": "YulTypedName",
														"src": "4087:4:15",
														"type": ""
													}
												],
												"src": "3992:138:15"
											},
											{
												"body": {
													"nativeSrc": "4380:937:15",
													"nodeType": "YulBlock",
													"src": "4380:937:15",
													"statements": [
														{
															"nativeSrc": "4390:93:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4390:93:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4477:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4477:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4404:72:15",
																	"nodeType": "YulIdentifier",
																	"src": "4404:72:15"
																},
																"nativeSrc": "4404:79:15",
																"nodeType": "YulFunctionCall",
																"src": "4404:79:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4394:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4394:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4492:118:15",
															"nodeType": "YulAssignment",
															"src": "4492:118:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4598:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4598:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4603:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4603:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4499:98:15",
																	"nodeType": "YulIdentifier",
																	"src": "4499:98:15"
																},
																"nativeSrc": "4499:111:15",
																"nodeType": "YulFunctionCall",
																"src": "4499:111:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4492:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4492:3:15"
																}
															]
														},
														{
															"nativeSrc": "4619:20:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4619:20:15",
															"value": {
																"name": "pos",
																"nativeSrc": "4636:3:15",
																"nodeType": "YulIdentifier",
																"src": "4636:3:15"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "4623:9:15",
																	"nodeType": "YulTypedName",
																	"src": "4623:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4648:39:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4648:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4664:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4664:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4673:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4673:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4681:4:15",
																				"nodeType": "YulLiteral",
																				"src": "4681:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4669:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4669:3:15"
																		},
																		"nativeSrc": "4669:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4669:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4660:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4660:3:15"
																},
																"nativeSrc": "4660:27:15",
																"nodeType": "YulFunctionCall",
																"src": "4660:27:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4652:4:15",
																	"nodeType": "YulTypedName",
																	"src": "4652:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4696:96:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4696:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4786:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4786:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4711:74:15",
																	"nodeType": "YulIdentifier",
																	"src": "4711:74:15"
																},
																"nativeSrc": "4711:81:15",
																"nodeType": "YulFunctionCall",
																"src": "4711:81:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4700:7:15",
																	"nodeType": "YulTypedName",
																	"src": "4700:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4801:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4801:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4815:7:15",
																"nodeType": "YulIdentifier",
																"src": "4815:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4805:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4805:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4891:381:15",
																"nodeType": "YulBlock",
																"src": "4891:381:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4912:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4912:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "4921:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "4921:4:15"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "4927:9:15",
																							"nodeType": "YulIdentifier",
																							"src": "4927:9:15"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "4917:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4917:3:15"
																					},
																					"nativeSrc": "4917:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4917:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4905:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4905:6:15"
																			},
																			"nativeSrc": "4905:33:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4905:33:15"
																		},
																		"nativeSrc": "4905:33:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4905:33:15"
																	},
																	{
																		"nativeSrc": "4951:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4951:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4978:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "4978:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4972:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4972:5:15"
																			},
																			"nativeSrc": "4972:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4972:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4955:13:15",
																				"nodeType": "YulTypedName",
																				"src": "4955:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4998:122:15",
																		"nodeType": "YulAssignment",
																		"src": "4998:122:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "5100:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "5100:13:15"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "5115:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "5115:4:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr",
																				"nativeSrc": "5006:93:15",
																				"nodeType": "YulIdentifier",
																				"src": "5006:93:15"
																			},
																			"nativeSrc": "5006:114:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5006:114:15"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "4998:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4998:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5133:95:15",
																		"nodeType": "YulAssignment",
																		"src": "5133:95:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5221:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5221:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "5143:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5143:77:15"
																			},
																			"nativeSrc": "5143:85:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5143:85:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5133:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5133:6:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5241:21:15",
																		"nodeType": "YulAssignment",
																		"src": "5241:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5252:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5257:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5257:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5248:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5248:3:15"
																			},
																			"nativeSrc": "5248:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5248:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5241:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5241:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4853:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "4853:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4856:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4856:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4850:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4850:2:15"
																},
																"nativeSrc": "4850:13:15",
																"nodeType": "YulFunctionCall",
																"src": "4850:13:15"
															},
															"nativeSrc": "4831:441:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4864:18:15",
																"nodeType": "YulBlock",
																"src": "4864:18:15",
																"statements": [
																	{
																		"nativeSrc": "4866:14:15",
																		"nodeType": "YulAssignment",
																		"src": "4866:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4875:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "4875:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4878:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4878:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4871:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4871:3:15"
																			},
																			"nativeSrc": "4871:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4871:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4866:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4866:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4835:14:15",
																"nodeType": "YulBlock",
																"src": "4835:14:15",
																"statements": [
																	{
																		"nativeSrc": "4837:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4837:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4846:1:15",
																			"nodeType": "YulLiteral",
																			"src": "4846:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4841:1:15",
																				"nodeType": "YulTypedName",
																				"src": "4841:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4831:441:15"
														},
														{
															"nativeSrc": "5281:11:15",
															"nodeType": "YulAssignment",
															"src": "5281:11:15",
															"value": {
																"name": "tail",
																"nativeSrc": "5288:4:15",
																"nodeType": "YulIdentifier",
																"src": "5288:4:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5281:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:15"
																}
															]
														},
														{
															"nativeSrc": "5301:10:15",
															"nodeType": "YulAssignment",
															"src": "5301:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "5308:3:15",
																"nodeType": "YulIdentifier",
																"src": "5308:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5301:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5301:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4206:1111:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4359:5:15",
														"nodeType": "YulTypedName",
														"src": "4359:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4366:3:15",
														"nodeType": "YulTypedName",
														"src": "4366:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4375:3:15",
														"nodeType": "YulTypedName",
														"src": "4375:3:15",
														"type": ""
													}
												],
												"src": "4206:1111:15"
											},
											{
												"body": {
													"nativeSrc": "5521:275:15",
													"nodeType": "YulBlock",
													"src": "5521:275:15",
													"statements": [
														{
															"nativeSrc": "5531:26:15",
															"nodeType": "YulAssignment",
															"src": "5531:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5543:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5554:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5554:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5539:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:15"
																},
																"nativeSrc": "5539:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5539:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5531:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5578:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5578:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5589:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5589:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5574:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5574:3:15"
																		},
																		"nativeSrc": "5574:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5574:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5597:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5597:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5603:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5603:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5593:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:15"
																		},
																		"nativeSrc": "5593:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5593:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5567:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5567:6:15"
																},
																"nativeSrc": "5567:47:15",
																"nodeType": "YulFunctionCall",
																"src": "5567:47:15"
															},
															"nativeSrc": "5567:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "5567:47:15"
														},
														{
															"nativeSrc": "5623:166:15",
															"nodeType": "YulAssignment",
															"src": "5623:166:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5775:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5775:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5784:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5784:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "5631:143:15",
																	"nodeType": "YulIdentifier",
																	"src": "5631:143:15"
																},
																"nativeSrc": "5631:158:15",
																"nodeType": "YulFunctionCall",
																"src": "5631:158:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5623:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5623:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "5323:473:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5493:9:15",
														"nodeType": "YulTypedName",
														"src": "5493:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5505:6:15",
														"nodeType": "YulTypedName",
														"src": "5505:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5516:4:15",
														"nodeType": "YulTypedName",
														"src": "5516:4:15",
														"type": ""
													}
												],
												"src": "5323:473:15"
											},
											{
												"body": {
													"nativeSrc": "5846:105:15",
													"nodeType": "YulBlock",
													"src": "5846:105:15",
													"statements": [
														{
															"nativeSrc": "5856:89:15",
															"nodeType": "YulAssignment",
															"src": "5856:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5871:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5871:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5878:66:15",
																		"nodeType": "YulLiteral",
																		"src": "5878:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5867:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5867:3:15"
																},
																"nativeSrc": "5867:78:15",
																"nodeType": "YulFunctionCall",
																"src": "5867:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5856:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "5856:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "5802:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5828:5:15",
														"nodeType": "YulTypedName",
														"src": "5828:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5838:7:15",
														"nodeType": "YulTypedName",
														"src": "5838:7:15",
														"type": ""
													}
												],
												"src": "5802:149:15"
											},
											{
												"body": {
													"nativeSrc": "5999:78:15",
													"nodeType": "YulBlock",
													"src": "5999:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6055:16:15",
																"nodeType": "YulBlock",
																"src": "6055:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6064:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6064:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6067:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6067:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6057:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6057:6:15"
																			},
																			"nativeSrc": "6057:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6057:12:15"
																		},
																		"nativeSrc": "6057:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6057:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6022:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6022:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6046:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6046:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "6029:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "6029:16:15"
																				},
																				"nativeSrc": "6029:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6029:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6019:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6019:2:15"
																		},
																		"nativeSrc": "6019:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6019:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6012:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6012:6:15"
																},
																"nativeSrc": "6012:42:15",
																"nodeType": "YulFunctionCall",
																"src": "6012:42:15"
															},
															"nativeSrc": "6009:62:15",
															"nodeType": "YulIf",
															"src": "6009:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "5957:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5992:5:15",
														"nodeType": "YulTypedName",
														"src": "5992:5:15",
														"type": ""
													}
												],
												"src": "5957:120:15"
											},
											{
												"body": {
													"nativeSrc": "6134:86:15",
													"nodeType": "YulBlock",
													"src": "6134:86:15",
													"statements": [
														{
															"nativeSrc": "6144:29:15",
															"nodeType": "YulAssignment",
															"src": "6144:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6166:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6166:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6153:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6153:12:15"
																},
																"nativeSrc": "6153:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6153:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6144:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6144:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6208:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6208:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "6182:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "6182:25:15"
																},
																"nativeSrc": "6182:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6182:32:15"
															},
															"nativeSrc": "6182:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "6182:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "6083:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6112:6:15",
														"nodeType": "YulTypedName",
														"src": "6112:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6120:3:15",
														"nodeType": "YulTypedName",
														"src": "6120:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6128:5:15",
														"nodeType": "YulTypedName",
														"src": "6128:5:15",
														"type": ""
													}
												],
												"src": "6083:137:15"
											},
											{
												"body": {
													"nativeSrc": "6291:262:15",
													"nodeType": "YulBlock",
													"src": "6291:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6337:83:15",
																"nodeType": "YulBlock",
																"src": "6337:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6339:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6339:77:15"
																			},
																			"nativeSrc": "6339:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6339:79:15"
																		},
																		"nativeSrc": "6339:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6339:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6312:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6312:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6321:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6321:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6308:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6308:3:15"
																		},
																		"nativeSrc": "6308:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6308:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6333:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6333:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6304:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6304:3:15"
																},
																"nativeSrc": "6304:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6304:32:15"
															},
															"nativeSrc": "6301:119:15",
															"nodeType": "YulIf",
															"src": "6301:119:15"
														},
														{
															"nativeSrc": "6430:116:15",
															"nodeType": "YulBlock",
															"src": "6430:116:15",
															"statements": [
																{
																	"nativeSrc": "6445:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6445:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6459:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6459:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6449:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6449:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6474:62:15",
																	"nodeType": "YulAssignment",
																	"src": "6474:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6508:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6508:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6519:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6519:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6504:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6504:3:15"
																				},
																				"nativeSrc": "6504:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6504:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6528:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6528:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "6484:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "6484:19:15"
																		},
																		"nativeSrc": "6484:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6484:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6474:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6474:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "6226:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6261:9:15",
														"nodeType": "YulTypedName",
														"src": "6261:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6272:7:15",
														"nodeType": "YulTypedName",
														"src": "6272:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6284:6:15",
														"nodeType": "YulTypedName",
														"src": "6284:6:15",
														"type": ""
													}
												],
												"src": "6226:327:15"
											},
											{
												"body": {
													"nativeSrc": "6601:48:15",
													"nodeType": "YulBlock",
													"src": "6601:48:15",
													"statements": [
														{
															"nativeSrc": "6611:32:15",
															"nodeType": "YulAssignment",
															"src": "6611:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6636:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6636:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6629:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6629:6:15"
																		},
																		"nativeSrc": "6629:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6622:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6622:6:15"
																},
																"nativeSrc": "6622:21:15",
																"nodeType": "YulFunctionCall",
																"src": "6622:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6611:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "6611:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6559:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6583:5:15",
														"nodeType": "YulTypedName",
														"src": "6583:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6593:7:15",
														"nodeType": "YulTypedName",
														"src": "6593:7:15",
														"type": ""
													}
												],
												"src": "6559:90:15"
											},
											{
												"body": {
													"nativeSrc": "6714:50:15",
													"nodeType": "YulBlock",
													"src": "6714:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6731:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6731:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6751:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6751:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "6736:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "6736:14:15"
																		},
																		"nativeSrc": "6736:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6724:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6724:6:15"
																},
																"nativeSrc": "6724:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6724:34:15"
															},
															"nativeSrc": "6724:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6724:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "6655:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6702:5:15",
														"nodeType": "YulTypedName",
														"src": "6702:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6709:3:15",
														"nodeType": "YulTypedName",
														"src": "6709:3:15",
														"type": ""
													}
												],
												"src": "6655:109:15"
											},
											{
												"body": {
													"nativeSrc": "6862:118:15",
													"nodeType": "YulBlock",
													"src": "6862:118:15",
													"statements": [
														{
															"nativeSrc": "6872:26:15",
															"nodeType": "YulAssignment",
															"src": "6872:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6884:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6884:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6895:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6895:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6880:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6880:3:15"
																},
																"nativeSrc": "6880:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6880:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6872:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6872:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6946:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6946:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6959:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6959:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6970:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6970:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6955:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6955:3:15"
																		},
																		"nativeSrc": "6955:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6955:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6908:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "6908:37:15"
																},
																"nativeSrc": "6908:65:15",
																"nodeType": "YulFunctionCall",
																"src": "6908:65:15"
															},
															"nativeSrc": "6908:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "6908:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "6770:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6834:9:15",
														"nodeType": "YulTypedName",
														"src": "6834:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6846:6:15",
														"nodeType": "YulTypedName",
														"src": "6846:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6857:4:15",
														"nodeType": "YulTypedName",
														"src": "6857:4:15",
														"type": ""
													}
												],
												"src": "6770:210:15"
											},
											{
												"body": {
													"nativeSrc": "7082:73:15",
													"nodeType": "YulBlock",
													"src": "7082:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7099:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7099:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7104:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7092:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:15"
																},
																"nativeSrc": "7092:19:15",
																"nodeType": "YulFunctionCall",
																"src": "7092:19:15"
															},
															"nativeSrc": "7092:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "7092:19:15"
														},
														{
															"nativeSrc": "7120:29:15",
															"nodeType": "YulAssignment",
															"src": "7120:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7139:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7139:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7144:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7144:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7135:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7135:3:15"
																},
																"nativeSrc": "7135:14:15",
																"nodeType": "YulFunctionCall",
																"src": "7135:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7120:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "7120:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6986:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7054:3:15",
														"nodeType": "YulTypedName",
														"src": "7054:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7059:6:15",
														"nodeType": "YulTypedName",
														"src": "7059:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7070:11:15",
														"nodeType": "YulTypedName",
														"src": "7070:11:15",
														"type": ""
													}
												],
												"src": "6986:169:15"
											},
											{
												"body": {
													"nativeSrc": "7253:285:15",
													"nodeType": "YulBlock",
													"src": "7253:285:15",
													"statements": [
														{
															"nativeSrc": "7263:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7263:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7310:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7310:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7277:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "7277:32:15"
																},
																"nativeSrc": "7277:39:15",
																"nodeType": "YulFunctionCall",
																"src": "7277:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7267:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7267:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7325:78:15",
															"nodeType": "YulAssignment",
															"src": "7325:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7391:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7391:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7396:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7396:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7332:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "7332:58:15"
																},
																"nativeSrc": "7332:71:15",
																"nodeType": "YulFunctionCall",
																"src": "7332:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7325:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7325:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7451:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7451:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7458:4:15",
																				"nodeType": "YulLiteral",
																				"src": "7458:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7447:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7447:3:15"
																		},
																		"nativeSrc": "7447:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7447:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7465:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7465:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7470:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7470:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7412:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "7412:34:15"
																},
																"nativeSrc": "7412:65:15",
																"nodeType": "YulFunctionCall",
																"src": "7412:65:15"
															},
															"nativeSrc": "7412:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "7412:65:15"
														},
														{
															"nativeSrc": "7486:46:15",
															"nodeType": "YulAssignment",
															"src": "7486:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7497:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7497:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7524:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7524:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7502:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "7502:21:15"
																		},
																		"nativeSrc": "7502:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7502:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7493:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7493:3:15"
																},
																"nativeSrc": "7493:39:15",
																"nodeType": "YulFunctionCall",
																"src": "7493:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7486:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7161:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7234:5:15",
														"nodeType": "YulTypedName",
														"src": "7234:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7241:3:15",
														"nodeType": "YulTypedName",
														"src": "7241:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7249:3:15",
														"nodeType": "YulTypedName",
														"src": "7249:3:15",
														"type": ""
													}
												],
												"src": "7161:377:15"
											},
											{
												"body": {
													"nativeSrc": "7662:195:15",
													"nodeType": "YulBlock",
													"src": "7662:195:15",
													"statements": [
														{
															"nativeSrc": "7672:26:15",
															"nodeType": "YulAssignment",
															"src": "7672:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7684:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7684:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7695:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7695:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7680:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:15"
																},
																"nativeSrc": "7680:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7680:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7672:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7672:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7719:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7719:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7730:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7730:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7715:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7715:3:15"
																		},
																		"nativeSrc": "7715:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7715:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7738:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7738:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7744:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7744:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7734:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7734:3:15"
																		},
																		"nativeSrc": "7734:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7734:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7708:6:15"
																},
																"nativeSrc": "7708:47:15",
																"nodeType": "YulFunctionCall",
																"src": "7708:47:15"
															},
															"nativeSrc": "7708:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "7708:47:15"
														},
														{
															"nativeSrc": "7764:86:15",
															"nodeType": "YulAssignment",
															"src": "7764:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7836:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7836:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7845:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7845:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7772:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "7772:63:15"
																},
																"nativeSrc": "7772:78:15",
																"nodeType": "YulFunctionCall",
																"src": "7772:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7764:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7764:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7544:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7634:9:15",
														"nodeType": "YulTypedName",
														"src": "7634:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7646:6:15",
														"nodeType": "YulTypedName",
														"src": "7646:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7657:4:15",
														"nodeType": "YulTypedName",
														"src": "7657:4:15",
														"type": ""
													}
												],
												"src": "7544:313:15"
											},
											{
												"body": {
													"nativeSrc": "7906:79:15",
													"nodeType": "YulBlock",
													"src": "7906:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7963:16:15",
																"nodeType": "YulBlock",
																"src": "7963:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7972:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7972:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7975:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7975:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7965:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7965:6:15"
																			},
																			"nativeSrc": "7965:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7965:12:15"
																		},
																		"nativeSrc": "7965:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7965:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7929:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7929:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7954:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7954:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7936:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "7936:17:15"
																				},
																				"nativeSrc": "7936:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7936:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7926:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7926:2:15"
																		},
																		"nativeSrc": "7926:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7926:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7919:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:15"
																},
																"nativeSrc": "7919:43:15",
																"nodeType": "YulFunctionCall",
																"src": "7919:43:15"
															},
															"nativeSrc": "7916:63:15",
															"nodeType": "YulIf",
															"src": "7916:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7863:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7899:5:15",
														"nodeType": "YulTypedName",
														"src": "7899:5:15",
														"type": ""
													}
												],
												"src": "7863:122:15"
											},
											{
												"body": {
													"nativeSrc": "8043:87:15",
													"nodeType": "YulBlock",
													"src": "8043:87:15",
													"statements": [
														{
															"nativeSrc": "8053:29:15",
															"nodeType": "YulAssignment",
															"src": "8053:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8075:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8075:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8062:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8062:12:15"
																},
																"nativeSrc": "8062:20:15",
																"nodeType": "YulFunctionCall",
																"src": "8062:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8053:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8053:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8118:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8118:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8091:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "8091:26:15"
																},
																"nativeSrc": "8091:33:15",
																"nodeType": "YulFunctionCall",
																"src": "8091:33:15"
															},
															"nativeSrc": "8091:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "8091:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "7991:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8021:6:15",
														"nodeType": "YulTypedName",
														"src": "8021:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8029:3:15",
														"nodeType": "YulTypedName",
														"src": "8029:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8037:5:15",
														"nodeType": "YulTypedName",
														"src": "8037:5:15",
														"type": ""
													}
												],
												"src": "7991:139:15"
											},
											{
												"body": {
													"nativeSrc": "8202:263:15",
													"nodeType": "YulBlock",
													"src": "8202:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8248:83:15",
																"nodeType": "YulBlock",
																"src": "8248:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8250:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8250:77:15"
																			},
																			"nativeSrc": "8250:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8250:79:15"
																		},
																		"nativeSrc": "8250:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8250:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8223:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8223:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8232:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8232:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8219:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8219:3:15"
																		},
																		"nativeSrc": "8219:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8219:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8244:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8244:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8215:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8215:3:15"
																},
																"nativeSrc": "8215:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8215:32:15"
															},
															"nativeSrc": "8212:119:15",
															"nodeType": "YulIf",
															"src": "8212:119:15"
														},
														{
															"nativeSrc": "8341:117:15",
															"nodeType": "YulBlock",
															"src": "8341:117:15",
															"statements": [
																{
																	"nativeSrc": "8356:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8356:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8370:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8370:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8360:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8360:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8385:63:15",
																	"nodeType": "YulAssignment",
																	"src": "8385:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8420:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8420:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8431:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8431:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8416:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8416:3:15"
																				},
																				"nativeSrc": "8416:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8416:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8440:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8440:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8395:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "8395:20:15"
																		},
																		"nativeSrc": "8395:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8395:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8385:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8385:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "8136:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8172:9:15",
														"nodeType": "YulTypedName",
														"src": "8172:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8183:7:15",
														"nodeType": "YulTypedName",
														"src": "8183:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8195:6:15",
														"nodeType": "YulTypedName",
														"src": "8195:6:15",
														"type": ""
													}
												],
												"src": "8136:329:15"
											},
											{
												"body": {
													"nativeSrc": "8536:53:15",
													"nodeType": "YulBlock",
													"src": "8536:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8553:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8553:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8576:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8576:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8558:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "8558:17:15"
																		},
																		"nativeSrc": "8558:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8558:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8546:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8546:6:15"
																},
																"nativeSrc": "8546:37:15",
																"nodeType": "YulFunctionCall",
																"src": "8546:37:15"
															},
															"nativeSrc": "8546:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "8546:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8471:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8524:5:15",
														"nodeType": "YulTypedName",
														"src": "8524:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8531:3:15",
														"nodeType": "YulTypedName",
														"src": "8531:3:15",
														"type": ""
													}
												],
												"src": "8471:118:15"
											},
											{
												"body": {
													"nativeSrc": "8693:124:15",
													"nodeType": "YulBlock",
													"src": "8693:124:15",
													"statements": [
														{
															"nativeSrc": "8703:26:15",
															"nodeType": "YulAssignment",
															"src": "8703:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8715:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8715:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8726:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8726:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8711:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8711:3:15"
																},
																"nativeSrc": "8711:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8711:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8703:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8703:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8783:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8783:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8796:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8796:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8807:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8807:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8792:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8792:3:15"
																		},
																		"nativeSrc": "8792:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8792:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8739:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "8739:43:15"
																},
																"nativeSrc": "8739:71:15",
																"nodeType": "YulFunctionCall",
																"src": "8739:71:15"
															},
															"nativeSrc": "8739:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "8739:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8595:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8665:9:15",
														"nodeType": "YulTypedName",
														"src": "8665:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8677:6:15",
														"nodeType": "YulTypedName",
														"src": "8677:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8688:4:15",
														"nodeType": "YulTypedName",
														"src": "8688:4:15",
														"type": ""
													}
												],
												"src": "8595:222:15"
											},
											{
												"body": {
													"nativeSrc": "8906:391:15",
													"nodeType": "YulBlock",
													"src": "8906:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8952:83:15",
																"nodeType": "YulBlock",
																"src": "8952:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8954:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8954:77:15"
																			},
																			"nativeSrc": "8954:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8954:79:15"
																		},
																		"nativeSrc": "8954:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8954:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8927:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8927:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8936:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8936:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8923:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8923:3:15"
																		},
																		"nativeSrc": "8923:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8948:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8948:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8919:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8919:3:15"
																},
																"nativeSrc": "8919:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8919:32:15"
															},
															"nativeSrc": "8916:119:15",
															"nodeType": "YulIf",
															"src": "8916:119:15"
														},
														{
															"nativeSrc": "9045:117:15",
															"nodeType": "YulBlock",
															"src": "9045:117:15",
															"statements": [
																{
																	"nativeSrc": "9060:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9060:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9074:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9074:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9064:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9064:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9089:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9089:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9124:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9124:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9135:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9135:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9120:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9120:3:15"
																				},
																				"nativeSrc": "9120:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9120:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9144:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9144:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9099:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9099:20:15"
																		},
																		"nativeSrc": "9099:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9099:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9089:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9089:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9172:118:15",
															"nodeType": "YulBlock",
															"src": "9172:118:15",
															"statements": [
																{
																	"nativeSrc": "9187:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9187:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9201:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9201:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9191:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9191:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9217:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9217:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9252:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9252:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9263:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9263:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9248:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9248:3:15"
																				},
																				"nativeSrc": "9248:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9248:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9272:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9272:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9227:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9227:20:15"
																		},
																		"nativeSrc": "9227:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9217:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9217:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "8823:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8868:9:15",
														"nodeType": "YulTypedName",
														"src": "8868:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8879:7:15",
														"nodeType": "YulTypedName",
														"src": "8879:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8891:6:15",
														"nodeType": "YulTypedName",
														"src": "8891:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8899:6:15",
														"nodeType": "YulTypedName",
														"src": "8899:6:15",
														"type": ""
													}
												],
												"src": "8823:474:15"
											},
											{
												"body": {
													"nativeSrc": "9403:519:15",
													"nodeType": "YulBlock",
													"src": "9403:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9449:83:15",
																"nodeType": "YulBlock",
																"src": "9449:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9451:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9451:77:15"
																			},
																			"nativeSrc": "9451:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9451:79:15"
																		},
																		"nativeSrc": "9451:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9451:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9424:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9424:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9433:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9433:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9420:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:15"
																		},
																		"nativeSrc": "9420:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9420:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9445:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9445:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9416:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9416:3:15"
																},
																"nativeSrc": "9416:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9416:32:15"
															},
															"nativeSrc": "9413:119:15",
															"nodeType": "YulIf",
															"src": "9413:119:15"
														},
														{
															"nativeSrc": "9542:117:15",
															"nodeType": "YulBlock",
															"src": "9542:117:15",
															"statements": [
																{
																	"nativeSrc": "9557:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9557:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9571:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9571:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9561:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9561:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9586:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9586:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9621:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9621:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9632:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9632:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9617:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9617:3:15"
																				},
																				"nativeSrc": "9617:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9617:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9641:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9641:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9596:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9596:20:15"
																		},
																		"nativeSrc": "9596:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9596:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9586:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9586:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9669:118:15",
															"nodeType": "YulBlock",
															"src": "9669:118:15",
															"statements": [
																{
																	"nativeSrc": "9684:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9684:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9698:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9698:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9688:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9688:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9714:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9714:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9749:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9749:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9760:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9760:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9745:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9745:3:15"
																				},
																				"nativeSrc": "9745:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9745:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9769:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9769:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9724:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9724:20:15"
																		},
																		"nativeSrc": "9724:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9724:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9714:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9714:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9797:118:15",
															"nodeType": "YulBlock",
															"src": "9797:118:15",
															"statements": [
																{
																	"nativeSrc": "9812:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9812:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9826:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9826:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9816:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9816:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9842:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9842:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9877:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9877:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9888:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9888:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9873:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9873:3:15"
																				},
																				"nativeSrc": "9873:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9873:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9897:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9897:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9852:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9852:20:15"
																		},
																		"nativeSrc": "9852:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9852:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9842:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9842:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "9303:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9357:9:15",
														"nodeType": "YulTypedName",
														"src": "9357:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9368:7:15",
														"nodeType": "YulTypedName",
														"src": "9368:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9380:6:15",
														"nodeType": "YulTypedName",
														"src": "9380:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9388:6:15",
														"nodeType": "YulTypedName",
														"src": "9388:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9396:6:15",
														"nodeType": "YulTypedName",
														"src": "9396:6:15",
														"type": ""
													}
												],
												"src": "9303:619:15"
											},
											{
												"body": {
													"nativeSrc": "9993:53:15",
													"nodeType": "YulBlock",
													"src": "9993:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10010:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10010:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10033:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10033:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10015:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "10015:17:15"
																		},
																		"nativeSrc": "10015:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10015:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10003:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10003:6:15"
																},
																"nativeSrc": "10003:37:15",
																"nodeType": "YulFunctionCall",
																"src": "10003:37:15"
															},
															"nativeSrc": "10003:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "10003:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9928:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9981:5:15",
														"nodeType": "YulTypedName",
														"src": "9981:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9988:3:15",
														"nodeType": "YulTypedName",
														"src": "9988:3:15",
														"type": ""
													}
												],
												"src": "9928:118:15"
											},
											{
												"body": {
													"nativeSrc": "10150:124:15",
													"nodeType": "YulBlock",
													"src": "10150:124:15",
													"statements": [
														{
															"nativeSrc": "10160:26:15",
															"nodeType": "YulAssignment",
															"src": "10160:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10172:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10172:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10183:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10183:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10168:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10168:3:15"
																},
																"nativeSrc": "10168:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10168:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10160:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10160:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10240:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10240:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10253:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10253:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10264:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10264:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10249:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10249:3:15"
																		},
																		"nativeSrc": "10249:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10249:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10196:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "10196:43:15"
																},
																"nativeSrc": "10196:71:15",
																"nodeType": "YulFunctionCall",
																"src": "10196:71:15"
															},
															"nativeSrc": "10196:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "10196:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10052:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10122:9:15",
														"nodeType": "YulTypedName",
														"src": "10122:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10134:6:15",
														"nodeType": "YulTypedName",
														"src": "10134:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10145:4:15",
														"nodeType": "YulTypedName",
														"src": "10145:4:15",
														"type": ""
													}
												],
												"src": "10052:222:15"
											},
											{
												"body": {
													"nativeSrc": "10454:359:15",
													"nodeType": "YulBlock",
													"src": "10454:359:15",
													"statements": [
														{
															"nativeSrc": "10464:26:15",
															"nodeType": "YulAssignment",
															"src": "10464:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10476:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10476:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10487:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10487:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10472:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10472:3:15"
																},
																"nativeSrc": "10472:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10472:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10464:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10464:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10544:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10544:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10557:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10557:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10568:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10568:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10553:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10553:3:15"
																		},
																		"nativeSrc": "10553:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10553:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10500:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "10500:43:15"
																},
																"nativeSrc": "10500:71:15",
																"nodeType": "YulFunctionCall",
																"src": "10500:71:15"
															},
															"nativeSrc": "10500:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "10500:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10592:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10592:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10603:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10603:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10588:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10588:3:15"
																		},
																		"nativeSrc": "10588:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10588:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10612:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "10612:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10618:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10618:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10608:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10608:3:15"
																		},
																		"nativeSrc": "10608:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10608:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10581:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10581:6:15"
																},
																"nativeSrc": "10581:48:15",
																"nodeType": "YulFunctionCall",
																"src": "10581:48:15"
															},
															"nativeSrc": "10581:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "10581:48:15"
														},
														{
															"nativeSrc": "10638:86:15",
															"nodeType": "YulAssignment",
															"src": "10638:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10710:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10710:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10719:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10719:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10646:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "10646:63:15"
																},
																"nativeSrc": "10646:78:15",
																"nodeType": "YulFunctionCall",
																"src": "10646:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10638:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10638:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10778:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10778:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10791:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10791:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10802:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10802:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10787:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10787:3:15"
																		},
																		"nativeSrc": "10787:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10787:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10734:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "10734:43:15"
																},
																"nativeSrc": "10734:72:15",
																"nodeType": "YulFunctionCall",
																"src": "10734:72:15"
															},
															"nativeSrc": "10734:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "10734:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "10280:533:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10410:9:15",
														"nodeType": "YulTypedName",
														"src": "10410:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10422:6:15",
														"nodeType": "YulTypedName",
														"src": "10422:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10430:6:15",
														"nodeType": "YulTypedName",
														"src": "10430:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10438:6:15",
														"nodeType": "YulTypedName",
														"src": "10438:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10449:4:15",
														"nodeType": "YulTypedName",
														"src": "10449:4:15",
														"type": ""
													}
												],
												"src": "10280:533:15"
											},
											{
												"body": {
													"nativeSrc": "10859:76:15",
													"nodeType": "YulBlock",
													"src": "10859:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10913:16:15",
																"nodeType": "YulBlock",
																"src": "10913:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10922:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10922:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10925:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10925:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10915:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10915:6:15"
																			},
																			"nativeSrc": "10915:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10915:12:15"
																		},
																		"nativeSrc": "10915:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10915:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10882:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10882:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10904:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "10904:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10889:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "10889:14:15"
																				},
																				"nativeSrc": "10889:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10889:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10879:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10879:2:15"
																		},
																		"nativeSrc": "10879:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10879:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10872:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10872:6:15"
																},
																"nativeSrc": "10872:40:15",
																"nodeType": "YulFunctionCall",
																"src": "10872:40:15"
															},
															"nativeSrc": "10869:60:15",
															"nodeType": "YulIf",
															"src": "10869:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10819:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10852:5:15",
														"nodeType": "YulTypedName",
														"src": "10852:5:15",
														"type": ""
													}
												],
												"src": "10819:116:15"
											},
											{
												"body": {
													"nativeSrc": "10990:84:15",
													"nodeType": "YulBlock",
													"src": "10990:84:15",
													"statements": [
														{
															"nativeSrc": "11000:29:15",
															"nodeType": "YulAssignment",
															"src": "11000:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11022:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11022:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11009:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "11009:12:15"
																},
																"nativeSrc": "11009:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11009:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11000:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11000:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11062:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11062:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11038:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "11038:23:15"
																},
																"nativeSrc": "11038:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11038:30:15"
															},
															"nativeSrc": "11038:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "11038:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "10941:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10968:6:15",
														"nodeType": "YulTypedName",
														"src": "10968:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10976:3:15",
														"nodeType": "YulTypedName",
														"src": "10976:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10984:5:15",
														"nodeType": "YulTypedName",
														"src": "10984:5:15",
														"type": ""
													}
												],
												"src": "10941:133:15"
											},
											{
												"body": {
													"nativeSrc": "11160:388:15",
													"nodeType": "YulBlock",
													"src": "11160:388:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11206:83:15",
																"nodeType": "YulBlock",
																"src": "11206:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11208:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11208:77:15"
																			},
																			"nativeSrc": "11208:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11208:79:15"
																		},
																		"nativeSrc": "11208:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11208:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11181:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11181:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11190:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11190:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11177:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11177:3:15"
																		},
																		"nativeSrc": "11177:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11177:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11202:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11202:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11173:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11173:3:15"
																},
																"nativeSrc": "11173:32:15",
																"nodeType": "YulFunctionCall",
																"src": "11173:32:15"
															},
															"nativeSrc": "11170:119:15",
															"nodeType": "YulIf",
															"src": "11170:119:15"
														},
														{
															"nativeSrc": "11299:117:15",
															"nodeType": "YulBlock",
															"src": "11299:117:15",
															"statements": [
																{
																	"nativeSrc": "11314:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11314:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11328:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11328:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11318:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11318:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11343:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11343:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11378:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11378:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11389:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11389:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11374:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11374:3:15"
																				},
																				"nativeSrc": "11374:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11374:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11398:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11398:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11353:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11353:20:15"
																		},
																		"nativeSrc": "11353:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11353:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11343:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11343:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11426:115:15",
															"nodeType": "YulBlock",
															"src": "11426:115:15",
															"statements": [
																{
																	"nativeSrc": "11441:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11441:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11455:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11455:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11445:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11445:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11471:60:15",
																	"nodeType": "YulAssignment",
																	"src": "11471:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11503:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11503:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11514:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11514:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11499:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11499:3:15"
																				},
																				"nativeSrc": "11499:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11499:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11523:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11523:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "11481:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "11481:17:15"
																		},
																		"nativeSrc": "11481:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11481:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11471:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11471:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "11080:468:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11122:9:15",
														"nodeType": "YulTypedName",
														"src": "11122:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11133:7:15",
														"nodeType": "YulTypedName",
														"src": "11133:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11145:6:15",
														"nodeType": "YulTypedName",
														"src": "11145:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11153:6:15",
														"nodeType": "YulTypedName",
														"src": "11153:6:15",
														"type": ""
													}
												],
												"src": "11080:468:15"
											},
											{
												"body": {
													"nativeSrc": "11643:28:15",
													"nodeType": "YulBlock",
													"src": "11643:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11660:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11660:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11663:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11663:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11653:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11653:6:15"
																},
																"nativeSrc": "11653:12:15",
																"nodeType": "YulFunctionCall",
																"src": "11653:12:15"
															},
															"nativeSrc": "11653:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "11653:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "11554:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11554:117:15"
											},
											{
												"body": {
													"nativeSrc": "11766:28:15",
													"nodeType": "YulBlock",
													"src": "11766:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11783:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11783:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11786:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11786:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11776:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:15"
																},
																"nativeSrc": "11776:12:15",
																"nodeType": "YulFunctionCall",
																"src": "11776:12:15"
															},
															"nativeSrc": "11776:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "11776:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "11677:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11677:117:15"
											},
											{
												"body": {
													"nativeSrc": "11828:152:15",
													"nodeType": "YulBlock",
													"src": "11828:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11845:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11845:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11848:77:15",
																		"nodeType": "YulLiteral",
																		"src": "11848:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11838:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11838:6:15"
																},
																"nativeSrc": "11838:88:15",
																"nodeType": "YulFunctionCall",
																"src": "11838:88:15"
															},
															"nativeSrc": "11838:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "11838:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11942:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11942:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11945:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11945:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11935:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11935:6:15"
																},
																"nativeSrc": "11935:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11935:15:15"
															},
															"nativeSrc": "11935:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11935:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11966:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11966:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11969:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11969:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11959:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11959:6:15"
																},
																"nativeSrc": "11959:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11959:15:15"
															},
															"nativeSrc": "11959:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11959:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11800:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11800:180:15"
											},
											{
												"body": {
													"nativeSrc": "12029:238:15",
													"nodeType": "YulBlock",
													"src": "12029:238:15",
													"statements": [
														{
															"nativeSrc": "12039:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "12039:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "12061:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12061:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "12091:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "12091:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "12069:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "12069:21:15"
																		},
																		"nativeSrc": "12069:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12069:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12057:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12057:3:15"
																},
																"nativeSrc": "12057:40:15",
																"nodeType": "YulFunctionCall",
																"src": "12057:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "12043:10:15",
																	"nodeType": "YulTypedName",
																	"src": "12043:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12208:22:15",
																"nodeType": "YulBlock",
																"src": "12208:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12210:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "12210:16:15"
																			},
																			"nativeSrc": "12210:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12210:18:15"
																		},
																		"nativeSrc": "12210:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12210:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "12151:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "12151:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12163:18:15",
																				"nodeType": "YulLiteral",
																				"src": "12163:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12148:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12148:2:15"
																		},
																		"nativeSrc": "12148:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12148:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "12187:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "12187:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "12199:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12199:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12184:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12184:2:15"
																		},
																		"nativeSrc": "12184:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12184:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12145:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "12145:2:15"
																},
																"nativeSrc": "12145:62:15",
																"nodeType": "YulFunctionCall",
																"src": "12145:62:15"
															},
															"nativeSrc": "12142:88:15",
															"nodeType": "YulIf",
															"src": "12142:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12246:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12246:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "12250:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "12250:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12239:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12239:6:15"
																},
																"nativeSrc": "12239:22:15",
																"nodeType": "YulFunctionCall",
																"src": "12239:22:15"
															},
															"nativeSrc": "12239:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "12239:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "11986:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12015:6:15",
														"nodeType": "YulTypedName",
														"src": "12015:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "12023:4:15",
														"nodeType": "YulTypedName",
														"src": "12023:4:15",
														"type": ""
													}
												],
												"src": "11986:281:15"
											},
											{
												"body": {
													"nativeSrc": "12314:88:15",
													"nodeType": "YulBlock",
													"src": "12314:88:15",
													"statements": [
														{
															"nativeSrc": "12324:30:15",
															"nodeType": "YulAssignment",
															"src": "12324:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "12334:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "12334:18:15"
																},
																"nativeSrc": "12334:20:15",
																"nodeType": "YulFunctionCall",
																"src": "12334:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "12324:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12324:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "12383:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12383:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "12391:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "12391:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "12363:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "12363:19:15"
																},
																"nativeSrc": "12363:33:15",
																"nodeType": "YulFunctionCall",
																"src": "12363:33:15"
															},
															"nativeSrc": "12363:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "12363:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "12273:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "12298:4:15",
														"nodeType": "YulTypedName",
														"src": "12298:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "12307:6:15",
														"nodeType": "YulTypedName",
														"src": "12307:6:15",
														"type": ""
													}
												],
												"src": "12273:129:15"
											},
											{
												"body": {
													"nativeSrc": "12475:241:15",
													"nodeType": "YulBlock",
													"src": "12475:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12580:22:15",
																"nodeType": "YulBlock",
																"src": "12580:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12582:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "12582:16:15"
																			},
																			"nativeSrc": "12582:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12582:18:15"
																		},
																		"nativeSrc": "12582:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12582:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12552:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12552:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12560:18:15",
																		"nodeType": "YulLiteral",
																		"src": "12560:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12549:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "12549:2:15"
																},
																"nativeSrc": "12549:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12549:30:15"
															},
															"nativeSrc": "12546:56:15",
															"nodeType": "YulIf",
															"src": "12546:56:15"
														},
														{
															"nativeSrc": "12612:37:15",
															"nodeType": "YulAssignment",
															"src": "12612:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12642:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12642:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "12620:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "12620:21:15"
																},
																"nativeSrc": "12620:29:15",
																"nodeType": "YulFunctionCall",
																"src": "12620:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12612:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12612:4:15"
																}
															]
														},
														{
															"nativeSrc": "12686:23:15",
															"nodeType": "YulAssignment",
															"src": "12686:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "12698:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "12698:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12704:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12704:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12694:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12694:3:15"
																},
																"nativeSrc": "12694:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12694:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12686:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12686:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "12408:308:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "12459:6:15",
														"nodeType": "YulTypedName",
														"src": "12459:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "12470:4:15",
														"nodeType": "YulTypedName",
														"src": "12470:4:15",
														"type": ""
													}
												],
												"src": "12408:308:15"
											},
											{
												"body": {
													"nativeSrc": "12786:82:15",
													"nodeType": "YulBlock",
													"src": "12786:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12809:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12809:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "12814:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12814:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12819:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12819:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "12796:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "12796:12:15"
																},
																"nativeSrc": "12796:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12796:30:15"
															},
															"nativeSrc": "12796:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12796:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12846:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "12846:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12851:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12851:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12842:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12842:3:15"
																		},
																		"nativeSrc": "12842:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12842:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12860:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12860:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12835:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12835:6:15"
																},
																"nativeSrc": "12835:27:15",
																"nodeType": "YulFunctionCall",
																"src": "12835:27:15"
															},
															"nativeSrc": "12835:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "12835:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "12722:146:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12768:3:15",
														"nodeType": "YulTypedName",
														"src": "12768:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12773:3:15",
														"nodeType": "YulTypedName",
														"src": "12773:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12778:6:15",
														"nodeType": "YulTypedName",
														"src": "12778:6:15",
														"type": ""
													}
												],
												"src": "12722:146:15"
											},
											{
												"body": {
													"nativeSrc": "12958:341:15",
													"nodeType": "YulBlock",
													"src": "12958:341:15",
													"statements": [
														{
															"nativeSrc": "12968:75:15",
															"nodeType": "YulAssignment",
															"src": "12968:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13035:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13035:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "12993:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "12993:41:15"
																		},
																		"nativeSrc": "12993:49:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12993:49:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12977:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "12977:15:15"
																},
																"nativeSrc": "12977:66:15",
																"nodeType": "YulFunctionCall",
																"src": "12977:66:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12968:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12968:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "13059:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13059:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13066:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13066:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13052:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13052:6:15"
																},
																"nativeSrc": "13052:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13052:21:15"
															},
															"nativeSrc": "13052:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "13052:21:15"
														},
														{
															"nativeSrc": "13082:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "13082:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "13097:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13097:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13104:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13104:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13093:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13093:3:15"
																},
																"nativeSrc": "13093:16:15",
																"nodeType": "YulFunctionCall",
																"src": "13093:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "13086:3:15",
																	"nodeType": "YulTypedName",
																	"src": "13086:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13147:83:15",
																"nodeType": "YulBlock",
																"src": "13147:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "13149:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "13149:77:15"
																			},
																			"nativeSrc": "13149:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13149:79:15"
																		},
																		"nativeSrc": "13149:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13149:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "13128:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "13128:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13133:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13133:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13124:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13124:3:15"
																		},
																		"nativeSrc": "13124:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13124:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13142:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13142:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13121:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13121:2:15"
																},
																"nativeSrc": "13121:25:15",
																"nodeType": "YulFunctionCall",
																"src": "13121:25:15"
															},
															"nativeSrc": "13118:112:15",
															"nodeType": "YulIf",
															"src": "13118:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13276:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13276:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "13281:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13281:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13286:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13286:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "13239:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "13239:36:15"
																},
																"nativeSrc": "13239:54:15",
																"nodeType": "YulFunctionCall",
																"src": "13239:54:15"
															},
															"nativeSrc": "13239:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "13239:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "12874:425:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12931:3:15",
														"nodeType": "YulTypedName",
														"src": "12931:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12936:6:15",
														"nodeType": "YulTypedName",
														"src": "12936:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12944:3:15",
														"nodeType": "YulTypedName",
														"src": "12944:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12952:5:15",
														"nodeType": "YulTypedName",
														"src": "12952:5:15",
														"type": ""
													}
												],
												"src": "12874:425:15"
											},
											{
												"body": {
													"nativeSrc": "13381:278:15",
													"nodeType": "YulBlock",
													"src": "13381:278:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "13430:83:15",
																"nodeType": "YulBlock",
																"src": "13430:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "13432:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "13432:77:15"
																			},
																			"nativeSrc": "13432:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13432:79:15"
																		},
																		"nativeSrc": "13432:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13432:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "13409:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13409:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13417:4:15",
																						"nodeType": "YulLiteral",
																						"src": "13417:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13405:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13405:3:15"
																				},
																				"nativeSrc": "13405:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13405:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "13424:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "13424:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "13401:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13401:3:15"
																		},
																		"nativeSrc": "13401:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13401:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13394:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13394:6:15"
																},
																"nativeSrc": "13394:35:15",
																"nodeType": "YulFunctionCall",
																"src": "13394:35:15"
															},
															"nativeSrc": "13391:122:15",
															"nodeType": "YulIf",
															"src": "13391:122:15"
														},
														{
															"nativeSrc": "13522:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "13522:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13549:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13549:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13536:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "13536:12:15"
																},
																"nativeSrc": "13536:20:15",
																"nodeType": "YulFunctionCall",
																"src": "13536:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13526:6:15",
																	"nodeType": "YulTypedName",
																	"src": "13526:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13565:88:15",
															"nodeType": "YulAssignment",
															"src": "13565:88:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13626:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13626:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13634:4:15",
																				"nodeType": "YulLiteral",
																				"src": "13634:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13622:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13622:3:15"
																		},
																		"nativeSrc": "13622:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13622:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13641:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13641:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13649:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13649:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "13574:47:15",
																	"nodeType": "YulIdentifier",
																	"src": "13574:47:15"
																},
																"nativeSrc": "13574:79:15",
																"nodeType": "YulFunctionCall",
																"src": "13574:79:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13565:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "13565:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "13319:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13359:6:15",
														"nodeType": "YulTypedName",
														"src": "13359:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13367:3:15",
														"nodeType": "YulTypedName",
														"src": "13367:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "13375:5:15",
														"nodeType": "YulTypedName",
														"src": "13375:5:15",
														"type": ""
													}
												],
												"src": "13319:340:15"
											},
											{
												"body": {
													"nativeSrc": "13758:561:15",
													"nodeType": "YulBlock",
													"src": "13758:561:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "13804:83:15",
																"nodeType": "YulBlock",
																"src": "13804:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13806:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "13806:77:15"
																			},
																			"nativeSrc": "13806:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13806:79:15"
																		},
																		"nativeSrc": "13806:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13806:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13779:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13779:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13788:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13788:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13775:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13775:3:15"
																		},
																		"nativeSrc": "13775:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13775:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13800:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13800:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13771:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13771:3:15"
																},
																"nativeSrc": "13771:32:15",
																"nodeType": "YulFunctionCall",
																"src": "13771:32:15"
															},
															"nativeSrc": "13768:119:15",
															"nodeType": "YulIf",
															"src": "13768:119:15"
														},
														{
															"nativeSrc": "13897:287:15",
															"nodeType": "YulBlock",
															"src": "13897:287:15",
															"statements": [
																{
																	"nativeSrc": "13912:45:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13912:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13943:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13943:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13954:1:15",
																						"nodeType": "YulLiteral",
																						"src": "13954:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13939:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13939:3:15"
																				},
																				"nativeSrc": "13939:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13939:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13926:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "13926:12:15"
																		},
																		"nativeSrc": "13926:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13926:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13916:6:15",
																			"nodeType": "YulTypedName",
																			"src": "13916:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "14004:83:15",
																		"nodeType": "YulBlock",
																		"src": "14004:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "14006:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "14006:77:15"
																					},
																					"nativeSrc": "14006:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "14006:79:15"
																				},
																				"nativeSrc": "14006:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "14006:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13976:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13976:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13984:18:15",
																				"nodeType": "YulLiteral",
																				"src": "13984:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13973:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "13973:2:15"
																		},
																		"nativeSrc": "13973:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13973:30:15"
																	},
																	"nativeSrc": "13970:117:15",
																	"nodeType": "YulIf",
																	"src": "13970:117:15"
																},
																{
																	"nativeSrc": "14101:73:15",
																	"nodeType": "YulAssignment",
																	"src": "14101:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14146:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "14146:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14157:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "14157:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14142:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14142:3:15"
																				},
																				"nativeSrc": "14142:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14142:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14166:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "14166:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "14111:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "14111:30:15"
																		},
																		"nativeSrc": "14111:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14111:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14101:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "14101:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14194:118:15",
															"nodeType": "YulBlock",
															"src": "14194:118:15",
															"statements": [
																{
																	"nativeSrc": "14209:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14209:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14223:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14223:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14213:6:15",
																			"nodeType": "YulTypedName",
																			"src": "14213:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14239:63:15",
																	"nodeType": "YulAssignment",
																	"src": "14239:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14274:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "14274:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14285:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "14285:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14270:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14270:3:15"
																				},
																				"nativeSrc": "14270:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14270:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14294:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "14294:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "14249:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "14249:20:15"
																		},
																		"nativeSrc": "14249:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14249:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14239:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "14239:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "13665:654:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13720:9:15",
														"nodeType": "YulTypedName",
														"src": "13720:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13731:7:15",
														"nodeType": "YulTypedName",
														"src": "13731:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13743:6:15",
														"nodeType": "YulTypedName",
														"src": "13743:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13751:6:15",
														"nodeType": "YulTypedName",
														"src": "13751:6:15",
														"type": ""
													}
												],
												"src": "13665:654:15"
											},
											{
												"body": {
													"nativeSrc": "14391:241:15",
													"nodeType": "YulBlock",
													"src": "14391:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "14496:22:15",
																"nodeType": "YulBlock",
																"src": "14496:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "14498:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "14498:16:15"
																			},
																			"nativeSrc": "14498:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14498:18:15"
																		},
																		"nativeSrc": "14498:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14498:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14468:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14468:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14476:18:15",
																		"nodeType": "YulLiteral",
																		"src": "14476:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14465:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "14465:2:15"
																},
																"nativeSrc": "14465:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14465:30:15"
															},
															"nativeSrc": "14462:56:15",
															"nodeType": "YulIf",
															"src": "14462:56:15"
														},
														{
															"nativeSrc": "14528:37:15",
															"nodeType": "YulAssignment",
															"src": "14528:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14558:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14558:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "14536:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "14536:21:15"
																},
																"nativeSrc": "14536:29:15",
																"nodeType": "YulFunctionCall",
																"src": "14536:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "14528:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14528:4:15"
																}
															]
														},
														{
															"nativeSrc": "14602:23:15",
															"nodeType": "YulAssignment",
															"src": "14602:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "14614:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14614:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14620:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14620:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14610:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14610:3:15"
																},
																"nativeSrc": "14610:15:15",
																"nodeType": "YulFunctionCall",
																"src": "14610:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "14602:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14602:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "14325:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "14375:6:15",
														"nodeType": "YulTypedName",
														"src": "14375:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "14386:4:15",
														"nodeType": "YulTypedName",
														"src": "14386:4:15",
														"type": ""
													}
												],
												"src": "14325:307:15"
											},
											{
												"body": {
													"nativeSrc": "14721:340:15",
													"nodeType": "YulBlock",
													"src": "14721:340:15",
													"statements": [
														{
															"nativeSrc": "14731:74:15",
															"nodeType": "YulAssignment",
															"src": "14731:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14797:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14797:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "14756:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "14756:40:15"
																		},
																		"nativeSrc": "14756:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14756:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "14740:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "14740:15:15"
																},
																"nativeSrc": "14740:65:15",
																"nodeType": "YulFunctionCall",
																"src": "14740:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "14731:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "14731:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "14821:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14821:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14828:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14828:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14814:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14814:6:15"
																},
																"nativeSrc": "14814:21:15",
																"nodeType": "YulFunctionCall",
																"src": "14814:21:15"
															},
															"nativeSrc": "14814:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "14814:21:15"
														},
														{
															"nativeSrc": "14844:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14844:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "14859:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14859:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14866:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14866:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14855:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14855:3:15"
																},
																"nativeSrc": "14855:16:15",
																"nodeType": "YulFunctionCall",
																"src": "14855:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "14848:3:15",
																	"nodeType": "YulTypedName",
																	"src": "14848:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14909:83:15",
																"nodeType": "YulBlock",
																"src": "14909:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "14911:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "14911:77:15"
																			},
																			"nativeSrc": "14911:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14911:79:15"
																		},
																		"nativeSrc": "14911:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14911:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "14890:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "14890:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "14895:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14895:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14886:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14886:3:15"
																		},
																		"nativeSrc": "14886:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14886:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14904:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14904:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14883:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "14883:2:15"
																},
																"nativeSrc": "14883:25:15",
																"nodeType": "YulFunctionCall",
																"src": "14883:25:15"
															},
															"nativeSrc": "14880:112:15",
															"nodeType": "YulIf",
															"src": "14880:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15038:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15038:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "15043:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15043:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15048:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15048:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "15001:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "15001:36:15"
																},
																"nativeSrc": "15001:54:15",
																"nodeType": "YulFunctionCall",
																"src": "15001:54:15"
															},
															"nativeSrc": "15001:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "15001:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "14638:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "14694:3:15",
														"nodeType": "YulTypedName",
														"src": "14694:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14699:6:15",
														"nodeType": "YulTypedName",
														"src": "14699:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14707:3:15",
														"nodeType": "YulTypedName",
														"src": "14707:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "14715:5:15",
														"nodeType": "YulTypedName",
														"src": "14715:5:15",
														"type": ""
													}
												],
												"src": "14638:423:15"
											},
											{
												"body": {
													"nativeSrc": "15141:277:15",
													"nodeType": "YulBlock",
													"src": "15141:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15190:83:15",
																"nodeType": "YulBlock",
																"src": "15190:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "15192:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "15192:77:15"
																			},
																			"nativeSrc": "15192:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15192:79:15"
																		},
																		"nativeSrc": "15192:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15192:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "15169:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "15169:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15177:4:15",
																						"nodeType": "YulLiteral",
																						"src": "15177:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15165:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15165:3:15"
																				},
																				"nativeSrc": "15165:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15165:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "15184:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "15184:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "15161:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15161:3:15"
																		},
																		"nativeSrc": "15161:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15161:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15154:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15154:6:15"
																},
																"nativeSrc": "15154:35:15",
																"nodeType": "YulFunctionCall",
																"src": "15154:35:15"
															},
															"nativeSrc": "15151:122:15",
															"nodeType": "YulIf",
															"src": "15151:122:15"
														},
														{
															"nativeSrc": "15282:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "15282:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15309:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15309:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15296:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "15296:12:15"
																},
																"nativeSrc": "15296:20:15",
																"nodeType": "YulFunctionCall",
																"src": "15296:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15286:6:15",
																	"nodeType": "YulTypedName",
																	"src": "15286:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15325:87:15",
															"nodeType": "YulAssignment",
															"src": "15325:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "15385:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15385:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15393:4:15",
																				"nodeType": "YulLiteral",
																				"src": "15393:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15381:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15381:3:15"
																		},
																		"nativeSrc": "15381:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15381:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15400:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15400:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15408:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15408:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "15334:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "15334:46:15"
																},
																"nativeSrc": "15334:78:15",
																"nodeType": "YulFunctionCall",
																"src": "15334:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15325:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15325:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "15080:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15119:6:15",
														"nodeType": "YulTypedName",
														"src": "15119:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15127:3:15",
														"nodeType": "YulTypedName",
														"src": "15127:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15135:5:15",
														"nodeType": "YulTypedName",
														"src": "15135:5:15",
														"type": ""
													}
												],
												"src": "15080:338:15"
											},
											{
												"body": {
													"nativeSrc": "15550:817:15",
													"nodeType": "YulBlock",
													"src": "15550:817:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15597:83:15",
																"nodeType": "YulBlock",
																"src": "15597:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15599:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "15599:77:15"
																			},
																			"nativeSrc": "15599:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15599:79:15"
																		},
																		"nativeSrc": "15599:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15599:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15571:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15571:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15580:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15580:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15567:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15567:3:15"
																		},
																		"nativeSrc": "15567:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15567:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15592:3:15",
																		"nodeType": "YulLiteral",
																		"src": "15592:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15563:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15563:3:15"
																},
																"nativeSrc": "15563:33:15",
																"nodeType": "YulFunctionCall",
																"src": "15563:33:15"
															},
															"nativeSrc": "15560:120:15",
															"nodeType": "YulIf",
															"src": "15560:120:15"
														},
														{
															"nativeSrc": "15690:117:15",
															"nodeType": "YulBlock",
															"src": "15690:117:15",
															"statements": [
																{
																	"nativeSrc": "15705:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15705:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15719:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15719:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15709:6:15",
																			"nodeType": "YulTypedName",
																			"src": "15709:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15734:63:15",
																	"nodeType": "YulAssignment",
																	"src": "15734:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15769:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "15769:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15780:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "15780:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15765:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15765:3:15"
																				},
																				"nativeSrc": "15765:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15765:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15789:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15789:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15744:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "15744:20:15"
																		},
																		"nativeSrc": "15744:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15744:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15734:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "15734:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15817:118:15",
															"nodeType": "YulBlock",
															"src": "15817:118:15",
															"statements": [
																{
																	"nativeSrc": "15832:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15832:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15846:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15846:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15836:6:15",
																			"nodeType": "YulTypedName",
																			"src": "15836:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15862:63:15",
																	"nodeType": "YulAssignment",
																	"src": "15862:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15897:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "15897:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15908:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "15908:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15893:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15893:3:15"
																				},
																				"nativeSrc": "15893:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15893:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15917:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15917:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15872:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "15872:20:15"
																		},
																		"nativeSrc": "15872:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15872:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15862:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "15862:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15945:118:15",
															"nodeType": "YulBlock",
															"src": "15945:118:15",
															"statements": [
																{
																	"nativeSrc": "15960:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15960:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15974:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15974:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15964:6:15",
																			"nodeType": "YulTypedName",
																			"src": "15964:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15990:63:15",
																	"nodeType": "YulAssignment",
																	"src": "15990:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16025:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16025:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16036:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16036:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16021:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16021:3:15"
																				},
																				"nativeSrc": "16021:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16021:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16045:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16045:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16000:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "16000:20:15"
																		},
																		"nativeSrc": "16000:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16000:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "15990:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "15990:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16073:287:15",
															"nodeType": "YulBlock",
															"src": "16073:287:15",
															"statements": [
																{
																	"nativeSrc": "16088:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16088:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16119:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16119:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16130:2:15",
																						"nodeType": "YulLiteral",
																						"src": "16130:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16115:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16115:3:15"
																				},
																				"nativeSrc": "16115:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16115:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "16102:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "16102:12:15"
																		},
																		"nativeSrc": "16102:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16102:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16092:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16092:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16181:83:15",
																		"nodeType": "YulBlock",
																		"src": "16181:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16183:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "16183:77:15"
																					},
																					"nativeSrc": "16183:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "16183:79:15"
																				},
																				"nativeSrc": "16183:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "16183:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16153:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16153:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16161:18:15",
																				"nodeType": "YulLiteral",
																				"src": "16161:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16150:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "16150:2:15"
																		},
																		"nativeSrc": "16150:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16150:30:15"
																	},
																	"nativeSrc": "16147:117:15",
																	"nodeType": "YulIf",
																	"src": "16147:117:15"
																},
																{
																	"nativeSrc": "16278:72:15",
																	"nodeType": "YulAssignment",
																	"src": "16278:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16322:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16322:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16333:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16333:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16318:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16318:3:15"
																				},
																				"nativeSrc": "16318:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16318:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16342:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16342:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "16288:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "16288:29:15"
																		},
																		"nativeSrc": "16288:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16288:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16278:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16278:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "15424:943:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15496:9:15",
														"nodeType": "YulTypedName",
														"src": "15496:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15507:7:15",
														"nodeType": "YulTypedName",
														"src": "15507:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15519:6:15",
														"nodeType": "YulTypedName",
														"src": "15519:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15527:6:15",
														"nodeType": "YulTypedName",
														"src": "15527:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15535:6:15",
														"nodeType": "YulTypedName",
														"src": "15535:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15543:6:15",
														"nodeType": "YulTypedName",
														"src": "15543:6:15",
														"type": ""
													}
												],
												"src": "15424:943:15"
											},
											{
												"body": {
													"nativeSrc": "16456:391:15",
													"nodeType": "YulBlock",
													"src": "16456:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16502:83:15",
																"nodeType": "YulBlock",
																"src": "16502:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16504:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "16504:77:15"
																			},
																			"nativeSrc": "16504:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16504:79:15"
																		},
																		"nativeSrc": "16504:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16504:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16477:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16477:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16486:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16486:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16473:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16473:3:15"
																		},
																		"nativeSrc": "16473:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16473:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16498:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16498:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16469:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16469:3:15"
																},
																"nativeSrc": "16469:32:15",
																"nodeType": "YulFunctionCall",
																"src": "16469:32:15"
															},
															"nativeSrc": "16466:119:15",
															"nodeType": "YulIf",
															"src": "16466:119:15"
														},
														{
															"nativeSrc": "16595:117:15",
															"nodeType": "YulBlock",
															"src": "16595:117:15",
															"statements": [
																{
																	"nativeSrc": "16610:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16610:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16624:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16624:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16614:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16614:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16639:63:15",
																	"nodeType": "YulAssignment",
																	"src": "16639:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16674:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16674:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16685:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16685:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16670:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16670:3:15"
																				},
																				"nativeSrc": "16670:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16670:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16694:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16694:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16649:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "16649:20:15"
																		},
																		"nativeSrc": "16649:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16649:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16639:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16639:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16722:118:15",
															"nodeType": "YulBlock",
															"src": "16722:118:15",
															"statements": [
																{
																	"nativeSrc": "16737:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16737:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16751:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16751:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16741:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16741:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16767:63:15",
																	"nodeType": "YulAssignment",
																	"src": "16767:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16802:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16802:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16813:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16813:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16798:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16798:3:15"
																				},
																				"nativeSrc": "16798:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16798:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16822:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16822:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16777:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "16777:20:15"
																		},
																		"nativeSrc": "16777:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16777:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16767:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16767:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "16373:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16418:9:15",
														"nodeType": "YulTypedName",
														"src": "16418:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16429:7:15",
														"nodeType": "YulTypedName",
														"src": "16429:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16441:6:15",
														"nodeType": "YulTypedName",
														"src": "16441:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16449:6:15",
														"nodeType": "YulTypedName",
														"src": "16449:6:15",
														"type": ""
													}
												],
												"src": "16373:474:15"
											},
											{
												"body": {
													"nativeSrc": "16885:28:15",
													"nodeType": "YulBlock",
													"src": "16885:28:15",
													"statements": [
														{
															"nativeSrc": "16895:12:15",
															"nodeType": "YulAssignment",
															"src": "16895:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "16902:5:15",
																"nodeType": "YulIdentifier",
																"src": "16902:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16895:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16895:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16853:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16871:5:15",
														"nodeType": "YulTypedName",
														"src": "16871:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16881:3:15",
														"nodeType": "YulTypedName",
														"src": "16881:3:15",
														"type": ""
													}
												],
												"src": "16853:60:15"
											},
											{
												"body": {
													"nativeSrc": "16979:82:15",
													"nodeType": "YulBlock",
													"src": "16979:82:15",
													"statements": [
														{
															"nativeSrc": "16989:66:15",
															"nodeType": "YulAssignment",
															"src": "16989:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17047:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "17047:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "17029:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "17029:17:15"
																				},
																				"nativeSrc": "17029:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17029:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17020:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "17020:8:15"
																		},
																		"nativeSrc": "17020:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17020:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "17002:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "17002:17:15"
																},
																"nativeSrc": "17002:53:15",
																"nodeType": "YulFunctionCall",
																"src": "17002:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16989:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "16989:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "16919:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16959:5:15",
														"nodeType": "YulTypedName",
														"src": "16959:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16969:9:15",
														"nodeType": "YulTypedName",
														"src": "16969:9:15",
														"type": ""
													}
												],
												"src": "16919:142:15"
											},
											{
												"body": {
													"nativeSrc": "17127:66:15",
													"nodeType": "YulBlock",
													"src": "17127:66:15",
													"statements": [
														{
															"nativeSrc": "17137:50:15",
															"nodeType": "YulAssignment",
															"src": "17137:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17181:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17181:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "17150:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "17150:30:15"
																},
																"nativeSrc": "17150:37:15",
																"nodeType": "YulFunctionCall",
																"src": "17150:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17137:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "17137:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "17067:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17107:5:15",
														"nodeType": "YulTypedName",
														"src": "17107:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17117:9:15",
														"nodeType": "YulTypedName",
														"src": "17117:9:15",
														"type": ""
													}
												],
												"src": "17067:126:15"
											},
											{
												"body": {
													"nativeSrc": "17273:66:15",
													"nodeType": "YulBlock",
													"src": "17273:66:15",
													"statements": [
														{
															"nativeSrc": "17283:50:15",
															"nodeType": "YulAssignment",
															"src": "17283:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17327:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17327:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "17296:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "17296:30:15"
																},
																"nativeSrc": "17296:37:15",
																"nodeType": "YulFunctionCall",
																"src": "17296:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17283:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "17283:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$327_to_t_address",
												"nativeSrc": "17199:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17253:5:15",
														"nodeType": "YulTypedName",
														"src": "17253:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17263:9:15",
														"nodeType": "YulTypedName",
														"src": "17263:9:15",
														"type": ""
													}
												],
												"src": "17199:140:15"
											},
											{
												"body": {
													"nativeSrc": "17424:80:15",
													"nodeType": "YulBlock",
													"src": "17424:80:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17441:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17441:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17491:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "17491:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$327_to_t_address",
																			"nativeSrc": "17446:44:15",
																			"nodeType": "YulIdentifier",
																			"src": "17446:44:15"
																		},
																		"nativeSrc": "17446:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17446:51:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17434:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17434:6:15"
																},
																"nativeSrc": "17434:64:15",
																"nodeType": "YulFunctionCall",
																"src": "17434:64:15"
															},
															"nativeSrc": "17434:64:15",
															"nodeType": "YulExpressionStatement",
															"src": "17434:64:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$327_to_t_address_fromStack",
												"nativeSrc": "17345:159:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17412:5:15",
														"nodeType": "YulTypedName",
														"src": "17412:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17419:3:15",
														"nodeType": "YulTypedName",
														"src": "17419:3:15",
														"type": ""
													}
												],
												"src": "17345:159:15"
											},
											{
												"body": {
													"nativeSrc": "17622:138:15",
													"nodeType": "YulBlock",
													"src": "17622:138:15",
													"statements": [
														{
															"nativeSrc": "17632:26:15",
															"nodeType": "YulAssignment",
															"src": "17632:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17644:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17644:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17655:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17655:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17640:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17640:3:15"
																},
																"nativeSrc": "17640:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17640:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17632:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17632:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17726:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17726:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17739:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17739:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17750:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17750:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17735:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17735:3:15"
																		},
																		"nativeSrc": "17735:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17735:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$327_to_t_address_fromStack",
																	"nativeSrc": "17668:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "17668:57:15"
																},
																"nativeSrc": "17668:85:15",
																"nodeType": "YulFunctionCall",
																"src": "17668:85:15"
															},
															"nativeSrc": "17668:85:15",
															"nodeType": "YulExpressionStatement",
															"src": "17668:85:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$327__to_t_address__fromStack_reversed",
												"nativeSrc": "17510:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17594:9:15",
														"nodeType": "YulTypedName",
														"src": "17594:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17606:6:15",
														"nodeType": "YulTypedName",
														"src": "17606:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17617:4:15",
														"nodeType": "YulTypedName",
														"src": "17617:4:15",
														"type": ""
													}
												],
												"src": "17510:250:15"
											},
											{
												"body": {
													"nativeSrc": "17794:152:15",
													"nodeType": "YulBlock",
													"src": "17794:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17811:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17811:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17814:77:15",
																		"nodeType": "YulLiteral",
																		"src": "17814:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17804:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17804:6:15"
																},
																"nativeSrc": "17804:88:15",
																"nodeType": "YulFunctionCall",
																"src": "17804:88:15"
															},
															"nativeSrc": "17804:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "17804:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17908:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17908:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17911:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17911:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17901:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17901:6:15"
																},
																"nativeSrc": "17901:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17901:15:15"
															},
															"nativeSrc": "17901:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17901:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17932:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17932:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17935:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17935:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17925:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17925:6:15"
																},
																"nativeSrc": "17925:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17925:15:15"
															},
															"nativeSrc": "17925:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17925:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17766:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "17766:180:15"
											},
											{
												"body": {
													"nativeSrc": "17980:152:15",
													"nodeType": "YulBlock",
													"src": "17980:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17997:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17997:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18000:77:15",
																		"nodeType": "YulLiteral",
																		"src": "18000:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17990:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17990:6:15"
																},
																"nativeSrc": "17990:88:15",
																"nodeType": "YulFunctionCall",
																"src": "17990:88:15"
															},
															"nativeSrc": "17990:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "17990:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18094:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18094:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18097:4:15",
																		"nodeType": "YulLiteral",
																		"src": "18097:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18087:6:15"
																},
																"nativeSrc": "18087:15:15",
																"nodeType": "YulFunctionCall",
																"src": "18087:15:15"
															},
															"nativeSrc": "18087:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "18087:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18118:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18118:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18121:4:15",
																		"nodeType": "YulLiteral",
																		"src": "18121:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18111:6:15"
																},
																"nativeSrc": "18111:15:15",
																"nodeType": "YulFunctionCall",
																"src": "18111:15:15"
															},
															"nativeSrc": "18111:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "18111:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "17952:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "17952:180:15"
											},
											{
												"body": {
													"nativeSrc": "18189:269:15",
													"nodeType": "YulBlock",
													"src": "18189:269:15",
													"statements": [
														{
															"nativeSrc": "18199:22:15",
															"nodeType": "YulAssignment",
															"src": "18199:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18213:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "18213:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18219:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18219:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18209:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18209:3:15"
																},
																"nativeSrc": "18209:12:15",
																"nodeType": "YulFunctionCall",
																"src": "18209:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18199:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18199:6:15"
																}
															]
														},
														{
															"nativeSrc": "18230:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "18230:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18260:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "18260:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18266:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18266:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18256:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18256:3:15"
																},
																"nativeSrc": "18256:12:15",
																"nodeType": "YulFunctionCall",
																"src": "18256:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "18234:18:15",
																	"nodeType": "YulTypedName",
																	"src": "18234:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18307:51:15",
																"nodeType": "YulBlock",
																"src": "18307:51:15",
																"statements": [
																	{
																		"nativeSrc": "18321:27:15",
																		"nodeType": "YulAssignment",
																		"src": "18321:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "18335:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "18335:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18343:4:15",
																					"nodeType": "YulLiteral",
																					"src": "18343:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "18331:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "18331:3:15"
																			},
																			"nativeSrc": "18331:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18331:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "18321:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18321:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18287:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "18287:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18280:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18280:6:15"
																},
																"nativeSrc": "18280:26:15",
																"nodeType": "YulFunctionCall",
																"src": "18280:26:15"
															},
															"nativeSrc": "18277:81:15",
															"nodeType": "YulIf",
															"src": "18277:81:15"
														},
														{
															"body": {
																"nativeSrc": "18410:42:15",
																"nodeType": "YulBlock",
																"src": "18410:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "18424:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "18424:16:15"
																			},
																			"nativeSrc": "18424:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18424:18:15"
																		},
																		"nativeSrc": "18424:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "18424:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18374:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "18374:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18397:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18397:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18405:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18405:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "18394:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "18394:2:15"
																		},
																		"nativeSrc": "18394:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18394:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18371:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "18371:2:15"
																},
																"nativeSrc": "18371:38:15",
																"nodeType": "YulFunctionCall",
																"src": "18371:38:15"
															},
															"nativeSrc": "18368:84:15",
															"nodeType": "YulIf",
															"src": "18368:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "18138:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18173:4:15",
														"nodeType": "YulTypedName",
														"src": "18173:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18182:6:15",
														"nodeType": "YulTypedName",
														"src": "18182:6:15",
														"type": ""
													}
												],
												"src": "18138:320:15"
											},
											{
												"body": {
													"nativeSrc": "18618:288:15",
													"nodeType": "YulBlock",
													"src": "18618:288:15",
													"statements": [
														{
															"nativeSrc": "18628:26:15",
															"nodeType": "YulAssignment",
															"src": "18628:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18640:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18640:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18651:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18651:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18636:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18636:3:15"
																},
																"nativeSrc": "18636:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18636:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18628:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18628:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18708:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "18708:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18721:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18721:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18732:1:15",
																				"nodeType": "YulLiteral",
																				"src": "18732:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18717:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18717:3:15"
																		},
																		"nativeSrc": "18717:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18717:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18664:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "18664:43:15"
																},
																"nativeSrc": "18664:71:15",
																"nodeType": "YulFunctionCall",
																"src": "18664:71:15"
															},
															"nativeSrc": "18664:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "18664:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18789:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "18789:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18802:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18802:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18813:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18813:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18798:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18798:3:15"
																		},
																		"nativeSrc": "18798:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18798:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18745:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "18745:43:15"
																},
																"nativeSrc": "18745:72:15",
																"nodeType": "YulFunctionCall",
																"src": "18745:72:15"
															},
															"nativeSrc": "18745:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "18745:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18871:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "18871:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18884:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18884:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18895:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18895:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18880:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18880:3:15"
																		},
																		"nativeSrc": "18880:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18880:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18827:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "18827:43:15"
																},
																"nativeSrc": "18827:72:15",
																"nodeType": "YulFunctionCall",
																"src": "18827:72:15"
															},
															"nativeSrc": "18827:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "18827:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "18464:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18574:9:15",
														"nodeType": "YulTypedName",
														"src": "18574:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18586:6:15",
														"nodeType": "YulTypedName",
														"src": "18586:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18594:6:15",
														"nodeType": "YulTypedName",
														"src": "18594:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18602:6:15",
														"nodeType": "YulTypedName",
														"src": "18602:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18613:4:15",
														"nodeType": "YulTypedName",
														"src": "18613:4:15",
														"type": ""
													}
												],
												"src": "18464:442:15"
											},
											{
												"body": {
													"nativeSrc": "19018:66:15",
													"nodeType": "YulBlock",
													"src": "19018:66:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19040:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "19040:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19048:1:15",
																				"nodeType": "YulLiteral",
																				"src": "19048:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19036:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19036:3:15"
																		},
																		"nativeSrc": "19036:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19036:14:15"
																	},
																	{
																		"hexValue": "50726f6475637420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "19052:24:15",
																		"nodeType": "YulLiteral",
																		"src": "19052:24:15",
																		"type": "",
																		"value": "Product does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19029:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19029:6:15"
																},
																"nativeSrc": "19029:48:15",
																"nodeType": "YulFunctionCall",
																"src": "19029:48:15"
															},
															"nativeSrc": "19029:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "19029:48:15"
														}
													]
												},
												"name": "store_literal_in_memory_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592",
												"nativeSrc": "18912:172:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19010:6:15",
														"nodeType": "YulTypedName",
														"src": "19010:6:15",
														"type": ""
													}
												],
												"src": "18912:172:15"
											},
											{
												"body": {
													"nativeSrc": "19236:220:15",
													"nodeType": "YulBlock",
													"src": "19236:220:15",
													"statements": [
														{
															"nativeSrc": "19246:74:15",
															"nodeType": "YulAssignment",
															"src": "19246:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19312:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19312:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19317:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19317:2:15",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19253:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "19253:58:15"
																},
																"nativeSrc": "19253:67:15",
																"nodeType": "YulFunctionCall",
																"src": "19253:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19246:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19246:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19418:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19418:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592",
																	"nativeSrc": "19329:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "19329:88:15"
																},
																"nativeSrc": "19329:93:15",
																"nodeType": "YulFunctionCall",
																"src": "19329:93:15"
															},
															"nativeSrc": "19329:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "19329:93:15"
														},
														{
															"nativeSrc": "19431:19:15",
															"nodeType": "YulAssignment",
															"src": "19431:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19442:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19442:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19447:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19447:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19438:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19438:3:15"
																},
																"nativeSrc": "19438:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19438:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19431:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19431:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19090:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19224:3:15",
														"nodeType": "YulTypedName",
														"src": "19224:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19232:3:15",
														"nodeType": "YulTypedName",
														"src": "19232:3:15",
														"type": ""
													}
												],
												"src": "19090:366:15"
											},
											{
												"body": {
													"nativeSrc": "19633:248:15",
													"nodeType": "YulBlock",
													"src": "19633:248:15",
													"statements": [
														{
															"nativeSrc": "19643:26:15",
															"nodeType": "YulAssignment",
															"src": "19643:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19655:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19655:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19666:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19666:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19651:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19651:3:15"
																},
																"nativeSrc": "19651:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19651:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19643:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19643:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19690:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19690:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19701:1:15",
																				"nodeType": "YulLiteral",
																				"src": "19701:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19686:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19686:3:15"
																		},
																		"nativeSrc": "19686:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19686:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19709:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "19709:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19715:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19715:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19705:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19705:3:15"
																		},
																		"nativeSrc": "19705:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19705:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19679:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19679:6:15"
																},
																"nativeSrc": "19679:47:15",
																"nodeType": "YulFunctionCall",
																"src": "19679:47:15"
															},
															"nativeSrc": "19679:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "19679:47:15"
														},
														{
															"nativeSrc": "19735:139:15",
															"nodeType": "YulAssignment",
															"src": "19735:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19869:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19869:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19743:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "19743:124:15"
																},
																"nativeSrc": "19743:131:15",
																"nodeType": "YulFunctionCall",
																"src": "19743:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19735:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19735:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19462:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19613:9:15",
														"nodeType": "YulTypedName",
														"src": "19613:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19628:4:15",
														"nodeType": "YulTypedName",
														"src": "19628:4:15",
														"type": ""
													}
												],
												"src": "19462:419:15"
											},
											{
												"body": {
													"nativeSrc": "19915:152:15",
													"nodeType": "YulBlock",
													"src": "19915:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19932:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19932:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19935:77:15",
																		"nodeType": "YulLiteral",
																		"src": "19935:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19925:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19925:6:15"
																},
																"nativeSrc": "19925:88:15",
																"nodeType": "YulFunctionCall",
																"src": "19925:88:15"
															},
															"nativeSrc": "19925:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "19925:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20029:1:15",
																		"nodeType": "YulLiteral",
																		"src": "20029:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20032:4:15",
																		"nodeType": "YulLiteral",
																		"src": "20032:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20022:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20022:6:15"
																},
																"nativeSrc": "20022:15:15",
																"nodeType": "YulFunctionCall",
																"src": "20022:15:15"
															},
															"nativeSrc": "20022:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "20022:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20053:1:15",
																		"nodeType": "YulLiteral",
																		"src": "20053:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20056:4:15",
																		"nodeType": "YulLiteral",
																		"src": "20056:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20046:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20046:6:15"
																},
																"nativeSrc": "20046:15:15",
																"nodeType": "YulFunctionCall",
																"src": "20046:15:15"
															},
															"nativeSrc": "20046:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "20046:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "19887:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "19887:180:15"
											},
											{
												"body": {
													"nativeSrc": "20121:362:15",
													"nodeType": "YulBlock",
													"src": "20121:362:15",
													"statements": [
														{
															"nativeSrc": "20131:25:15",
															"nodeType": "YulAssignment",
															"src": "20131:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20154:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "20154:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20136:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "20136:17:15"
																},
																"nativeSrc": "20136:20:15",
																"nodeType": "YulFunctionCall",
																"src": "20136:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20131:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "20131:1:15"
																}
															]
														},
														{
															"nativeSrc": "20165:25:15",
															"nodeType": "YulAssignment",
															"src": "20165:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20188:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "20188:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20170:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "20170:17:15"
																},
																"nativeSrc": "20170:20:15",
																"nodeType": "YulFunctionCall",
																"src": "20170:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20165:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "20165:1:15"
																}
															]
														},
														{
															"nativeSrc": "20199:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "20199:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20222:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "20222:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20225:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "20225:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20218:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20218:3:15"
																},
																"nativeSrc": "20218:9:15",
																"nodeType": "YulFunctionCall",
																"src": "20218:9:15"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "20203:11:15",
																	"nodeType": "YulTypedName",
																	"src": "20203:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20236:41:15",
															"nodeType": "YulAssignment",
															"src": "20236:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "20265:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "20265:11:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20247:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "20247:17:15"
																},
																"nativeSrc": "20247:30:15",
																"nodeType": "YulFunctionCall",
																"src": "20247:30:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "20236:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "20236:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20454:22:15",
																"nodeType": "YulBlock",
																"src": "20454:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20456:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "20456:16:15"
																			},
																			"nativeSrc": "20456:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "20456:18:15"
																		},
																		"nativeSrc": "20456:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "20456:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "20387:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "20387:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "20380:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "20380:6:15"
																				},
																				"nativeSrc": "20380:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20380:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "20410:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "20410:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "20417:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "20417:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "20426:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "20426:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "20413:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "20413:3:15"
																						},
																						"nativeSrc": "20413:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "20413:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "20407:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "20407:2:15"
																				},
																				"nativeSrc": "20407:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20407:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "20360:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "20360:2:15"
																		},
																		"nativeSrc": "20360:83:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20360:83:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20340:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20340:6:15"
																},
																"nativeSrc": "20340:113:15",
																"nodeType": "YulFunctionCall",
																"src": "20340:113:15"
															},
															"nativeSrc": "20337:139:15",
															"nodeType": "YulIf",
															"src": "20337:139:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "20073:410:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20104:1:15",
														"nodeType": "YulTypedName",
														"src": "20104:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20107:1:15",
														"nodeType": "YulTypedName",
														"src": "20107:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "20113:7:15",
														"nodeType": "YulTypedName",
														"src": "20113:7:15",
														"type": ""
													}
												],
												"src": "20073:410:15"
											},
											{
												"body": {
													"nativeSrc": "20643:288:15",
													"nodeType": "YulBlock",
													"src": "20643:288:15",
													"statements": [
														{
															"nativeSrc": "20653:26:15",
															"nodeType": "YulAssignment",
															"src": "20653:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20665:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20665:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20676:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20676:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20661:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20661:3:15"
																},
																"nativeSrc": "20661:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20661:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20653:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20653:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20733:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20733:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20746:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20746:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20757:1:15",
																				"nodeType": "YulLiteral",
																				"src": "20757:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20742:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20742:3:15"
																		},
																		"nativeSrc": "20742:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20742:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20689:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "20689:43:15"
																},
																"nativeSrc": "20689:71:15",
																"nodeType": "YulFunctionCall",
																"src": "20689:71:15"
															},
															"nativeSrc": "20689:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "20689:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20814:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20814:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20827:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20827:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20838:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20838:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20823:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20823:3:15"
																		},
																		"nativeSrc": "20823:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20823:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20770:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "20770:43:15"
																},
																"nativeSrc": "20770:72:15",
																"nodeType": "YulFunctionCall",
																"src": "20770:72:15"
															},
															"nativeSrc": "20770:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "20770:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20896:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20896:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20909:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20909:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20920:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20920:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20905:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20905:3:15"
																		},
																		"nativeSrc": "20905:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20905:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20852:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "20852:43:15"
																},
																"nativeSrc": "20852:72:15",
																"nodeType": "YulFunctionCall",
																"src": "20852:72:15"
															},
															"nativeSrc": "20852:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "20852:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20489:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20599:9:15",
														"nodeType": "YulTypedName",
														"src": "20599:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20611:6:15",
														"nodeType": "YulTypedName",
														"src": "20611:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20619:6:15",
														"nodeType": "YulTypedName",
														"src": "20619:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20627:6:15",
														"nodeType": "YulTypedName",
														"src": "20627:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20638:4:15",
														"nodeType": "YulTypedName",
														"src": "20638:4:15",
														"type": ""
													}
												],
												"src": "20489:442:15"
											},
											{
												"body": {
													"nativeSrc": "20997:77:15",
													"nodeType": "YulBlock",
													"src": "20997:77:15",
													"statements": [
														{
															"nativeSrc": "21007:22:15",
															"nodeType": "YulAssignment",
															"src": "21007:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21022:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21022:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21016:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "21016:5:15"
																},
																"nativeSrc": "21016:13:15",
																"nodeType": "YulFunctionCall",
																"src": "21016:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21007:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "21007:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21062:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "21062:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "21038:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "21038:23:15"
																},
																"nativeSrc": "21038:30:15",
																"nodeType": "YulFunctionCall",
																"src": "21038:30:15"
															},
															"nativeSrc": "21038:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "21038:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20937:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20975:6:15",
														"nodeType": "YulTypedName",
														"src": "20975:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20983:3:15",
														"nodeType": "YulTypedName",
														"src": "20983:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20991:5:15",
														"nodeType": "YulTypedName",
														"src": "20991:5:15",
														"type": ""
													}
												],
												"src": "20937:137:15"
											},
											{
												"body": {
													"nativeSrc": "21154:271:15",
													"nodeType": "YulBlock",
													"src": "21154:271:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "21200:83:15",
																"nodeType": "YulBlock",
																"src": "21200:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21202:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "21202:77:15"
																			},
																			"nativeSrc": "21202:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "21202:79:15"
																		},
																		"nativeSrc": "21202:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "21202:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21175:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21175:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21184:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21184:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21171:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21171:3:15"
																		},
																		"nativeSrc": "21171:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21171:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21196:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21196:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21167:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21167:3:15"
																},
																"nativeSrc": "21167:32:15",
																"nodeType": "YulFunctionCall",
																"src": "21167:32:15"
															},
															"nativeSrc": "21164:119:15",
															"nodeType": "YulIf",
															"src": "21164:119:15"
														},
														{
															"nativeSrc": "21293:125:15",
															"nodeType": "YulBlock",
															"src": "21293:125:15",
															"statements": [
																{
																	"nativeSrc": "21308:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21308:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21322:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21322:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21312:6:15",
																			"nodeType": "YulTypedName",
																			"src": "21312:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21337:71:15",
																	"nodeType": "YulAssignment",
																	"src": "21337:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21380:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21380:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21391:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "21391:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21376:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21376:3:15"
																				},
																				"nativeSrc": "21376:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21376:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21400:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21400:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "21347:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "21347:28:15"
																		},
																		"nativeSrc": "21347:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21347:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21337:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "21337:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "21080:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21124:9:15",
														"nodeType": "YulTypedName",
														"src": "21124:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21135:7:15",
														"nodeType": "YulTypedName",
														"src": "21135:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21147:6:15",
														"nodeType": "YulTypedName",
														"src": "21147:6:15",
														"type": ""
													}
												],
												"src": "21080:345:15"
											},
											{
												"body": {
													"nativeSrc": "21537:65:15",
													"nodeType": "YulBlock",
													"src": "21537:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21559:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "21559:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21567:1:15",
																				"nodeType": "YulLiteral",
																				"src": "21567:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21555:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21555:3:15"
																		},
																		"nativeSrc": "21555:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21555:14:15"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "21571:23:15",
																		"nodeType": "YulLiteral",
																		"src": "21571:23:15",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21548:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21548:6:15"
																},
																"nativeSrc": "21548:47:15",
																"nodeType": "YulFunctionCall",
																"src": "21548:47:15"
															},
															"nativeSrc": "21548:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "21548:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "21431:171:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21529:6:15",
														"nodeType": "YulTypedName",
														"src": "21529:6:15",
														"type": ""
													}
												],
												"src": "21431:171:15"
											},
											{
												"body": {
													"nativeSrc": "21754:220:15",
													"nodeType": "YulBlock",
													"src": "21754:220:15",
													"statements": [
														{
															"nativeSrc": "21764:74:15",
															"nodeType": "YulAssignment",
															"src": "21764:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21830:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21830:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21835:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21835:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21771:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "21771:58:15"
																},
																"nativeSrc": "21771:67:15",
																"nodeType": "YulFunctionCall",
																"src": "21771:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21764:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21764:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21936:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21936:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "21847:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "21847:88:15"
																},
																"nativeSrc": "21847:93:15",
																"nodeType": "YulFunctionCall",
																"src": "21847:93:15"
															},
															"nativeSrc": "21847:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "21847:93:15"
														},
														{
															"nativeSrc": "21949:19:15",
															"nodeType": "YulAssignment",
															"src": "21949:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21960:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21960:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21965:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21965:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21956:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21956:3:15"
																},
																"nativeSrc": "21956:12:15",
																"nodeType": "YulFunctionCall",
																"src": "21956:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21949:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21949:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21608:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21742:3:15",
														"nodeType": "YulTypedName",
														"src": "21742:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21750:3:15",
														"nodeType": "YulTypedName",
														"src": "21750:3:15",
														"type": ""
													}
												],
												"src": "21608:366:15"
											},
											{
												"body": {
													"nativeSrc": "22151:248:15",
													"nodeType": "YulBlock",
													"src": "22151:248:15",
													"statements": [
														{
															"nativeSrc": "22161:26:15",
															"nodeType": "YulAssignment",
															"src": "22161:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22173:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22173:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22184:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22184:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22169:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22169:3:15"
																},
																"nativeSrc": "22169:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22169:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22161:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22161:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22208:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22208:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22219:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22219:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22204:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22204:3:15"
																		},
																		"nativeSrc": "22204:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22204:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22227:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "22227:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22233:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22233:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22223:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22223:3:15"
																		},
																		"nativeSrc": "22223:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22223:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22197:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22197:6:15"
																},
																"nativeSrc": "22197:47:15",
																"nodeType": "YulFunctionCall",
																"src": "22197:47:15"
															},
															"nativeSrc": "22197:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "22197:47:15"
														},
														{
															"nativeSrc": "22253:139:15",
															"nodeType": "YulAssignment",
															"src": "22253:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22387:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "22387:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22261:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "22261:124:15"
																},
																"nativeSrc": "22261:131:15",
																"nodeType": "YulFunctionCall",
																"src": "22261:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22253:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22253:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21980:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22131:9:15",
														"nodeType": "YulTypedName",
														"src": "22131:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22146:4:15",
														"nodeType": "YulTypedName",
														"src": "22146:4:15",
														"type": ""
													}
												],
												"src": "21980:419:15"
											},
											{
												"body": {
													"nativeSrc": "22531:206:15",
													"nodeType": "YulBlock",
													"src": "22531:206:15",
													"statements": [
														{
															"nativeSrc": "22541:26:15",
															"nodeType": "YulAssignment",
															"src": "22541:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22553:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22553:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22564:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22564:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22549:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22549:3:15"
																},
																"nativeSrc": "22549:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22549:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22541:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22541:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22621:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22621:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22634:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22634:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22645:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22645:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22630:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22630:3:15"
																		},
																		"nativeSrc": "22630:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22630:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22577:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22577:43:15"
																},
																"nativeSrc": "22577:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22577:71:15"
															},
															"nativeSrc": "22577:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22577:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22702:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22702:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22715:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22715:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22726:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22726:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22711:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22711:3:15"
																		},
																		"nativeSrc": "22711:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22711:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22658:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22658:43:15"
																},
																"nativeSrc": "22658:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22658:72:15"
															},
															"nativeSrc": "22658:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22658:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22405:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22495:9:15",
														"nodeType": "YulTypedName",
														"src": "22495:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22507:6:15",
														"nodeType": "YulTypedName",
														"src": "22507:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22515:6:15",
														"nodeType": "YulTypedName",
														"src": "22515:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22526:4:15",
														"nodeType": "YulTypedName",
														"src": "22526:4:15",
														"type": ""
													}
												],
												"src": "22405:332:15"
											},
											{
												"body": {
													"nativeSrc": "22786:190:15",
													"nodeType": "YulBlock",
													"src": "22786:190:15",
													"statements": [
														{
															"nativeSrc": "22796:33:15",
															"nodeType": "YulAssignment",
															"src": "22796:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22823:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "22823:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22805:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "22805:17:15"
																},
																"nativeSrc": "22805:24:15",
																"nodeType": "YulFunctionCall",
																"src": "22805:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22796:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "22796:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22919:22:15",
																"nodeType": "YulBlock",
																"src": "22919:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22921:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "22921:16:15"
																			},
																			"nativeSrc": "22921:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "22921:18:15"
																		},
																		"nativeSrc": "22921:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "22921:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22844:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "22844:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22851:66:15",
																		"nodeType": "YulLiteral",
																		"src": "22851:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "22841:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "22841:2:15"
																},
																"nativeSrc": "22841:77:15",
																"nodeType": "YulFunctionCall",
																"src": "22841:77:15"
															},
															"nativeSrc": "22838:103:15",
															"nodeType": "YulIf",
															"src": "22838:103:15"
														},
														{
															"nativeSrc": "22950:20:15",
															"nodeType": "YulAssignment",
															"src": "22950:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22961:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "22961:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22968:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22968:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22957:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22957:3:15"
																},
																"nativeSrc": "22957:13:15",
																"nodeType": "YulFunctionCall",
																"src": "22957:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22950:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22950:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "22743:233:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22772:5:15",
														"nodeType": "YulTypedName",
														"src": "22772:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22782:3:15",
														"nodeType": "YulTypedName",
														"src": "22782:3:15",
														"type": ""
													}
												],
												"src": "22743:233:15"
											},
											{
												"body": {
													"nativeSrc": "23036:87:15",
													"nodeType": "YulBlock",
													"src": "23036:87:15",
													"statements": [
														{
															"nativeSrc": "23046:11:15",
															"nodeType": "YulAssignment",
															"src": "23046:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "23054:3:15",
																"nodeType": "YulIdentifier",
																"src": "23054:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23046:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23046:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23074:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23074:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "23077:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23077:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23067:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23067:6:15"
																},
																"nativeSrc": "23067:14:15",
																"nodeType": "YulFunctionCall",
																"src": "23067:14:15"
															},
															"nativeSrc": "23067:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "23067:14:15"
														},
														{
															"nativeSrc": "23090:26:15",
															"nodeType": "YulAssignment",
															"src": "23090:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23108:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23108:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23111:4:15",
																		"nodeType": "YulLiteral",
																		"src": "23111:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "23098:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "23098:9:15"
																},
																"nativeSrc": "23098:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23098:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23090:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23090:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "22982:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "23023:3:15",
														"nodeType": "YulTypedName",
														"src": "23023:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "23031:4:15",
														"nodeType": "YulTypedName",
														"src": "23031:4:15",
														"type": ""
													}
												],
												"src": "22982:141:15"
											},
											{
												"body": {
													"nativeSrc": "23173:49:15",
													"nodeType": "YulBlock",
													"src": "23173:49:15",
													"statements": [
														{
															"nativeSrc": "23183:33:15",
															"nodeType": "YulAssignment",
															"src": "23183:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23201:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "23201:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23208:2:15",
																				"nodeType": "YulLiteral",
																				"src": "23208:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23197:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23197:3:15"
																		},
																		"nativeSrc": "23197:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23197:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23213:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23213:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "23193:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23193:3:15"
																},
																"nativeSrc": "23193:23:15",
																"nodeType": "YulFunctionCall",
																"src": "23193:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23183:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23183:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "23129:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23156:5:15",
														"nodeType": "YulTypedName",
														"src": "23156:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23166:6:15",
														"nodeType": "YulTypedName",
														"src": "23166:6:15",
														"type": ""
													}
												],
												"src": "23129:93:15"
											},
											{
												"body": {
													"nativeSrc": "23281:54:15",
													"nodeType": "YulBlock",
													"src": "23281:54:15",
													"statements": [
														{
															"nativeSrc": "23291:37:15",
															"nodeType": "YulAssignment",
															"src": "23291:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23316:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "23316:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23322:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23322:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "23312:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23312:3:15"
																},
																"nativeSrc": "23312:16:15",
																"nodeType": "YulFunctionCall",
																"src": "23312:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23291:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "23291:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "23228:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23256:4:15",
														"nodeType": "YulTypedName",
														"src": "23256:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23262:5:15",
														"nodeType": "YulTypedName",
														"src": "23262:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23272:8:15",
														"nodeType": "YulTypedName",
														"src": "23272:8:15",
														"type": ""
													}
												],
												"src": "23228:107:15"
											},
											{
												"body": {
													"nativeSrc": "23417:317:15",
													"nodeType": "YulBlock",
													"src": "23417:317:15",
													"statements": [
														{
															"nativeSrc": "23427:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "23427:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "23448:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "23448:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23460:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23460:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23444:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23444:3:15"
																},
																"nativeSrc": "23444:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23444:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "23431:9:15",
																	"nodeType": "YulTypedName",
																	"src": "23431:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23471:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "23471:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23502:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23502:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23513:66:15",
																		"nodeType": "YulLiteral",
																		"src": "23513:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23483:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "23483:18:15"
																},
																"nativeSrc": "23483:97:15",
																"nodeType": "YulFunctionCall",
																"src": "23483:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23475:4:15",
																	"nodeType": "YulTypedName",
																	"src": "23475:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23589:51:15",
															"nodeType": "YulAssignment",
															"src": "23589:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23620:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23620:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "23631:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "23631:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23601:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "23601:18:15"
																},
																"nativeSrc": "23601:39:15",
																"nodeType": "YulFunctionCall",
																"src": "23601:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "23589:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "23589:8:15"
																}
															]
														},
														{
															"nativeSrc": "23649:30:15",
															"nodeType": "YulAssignment",
															"src": "23649:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23662:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23662:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "23673:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "23673:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "23669:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23669:3:15"
																		},
																		"nativeSrc": "23669:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23669:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23658:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23658:3:15"
																},
																"nativeSrc": "23658:21:15",
																"nodeType": "YulFunctionCall",
																"src": "23658:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23649:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23649:5:15"
																}
															]
														},
														{
															"nativeSrc": "23688:40:15",
															"nodeType": "YulAssignment",
															"src": "23688:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23701:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23701:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "23712:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "23712:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "23722:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "23722:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23708:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23708:3:15"
																		},
																		"nativeSrc": "23708:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23708:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23698:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "23698:2:15"
																},
																"nativeSrc": "23698:30:15",
																"nodeType": "YulFunctionCall",
																"src": "23698:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23688:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23688:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "23341:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23378:5:15",
														"nodeType": "YulTypedName",
														"src": "23378:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "23385:10:15",
														"nodeType": "YulTypedName",
														"src": "23385:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "23397:8:15",
														"nodeType": "YulTypedName",
														"src": "23397:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23410:6:15",
														"nodeType": "YulTypedName",
														"src": "23410:6:15",
														"type": ""
													}
												],
												"src": "23341:393:15"
											},
											{
												"body": {
													"nativeSrc": "23800:82:15",
													"nodeType": "YulBlock",
													"src": "23800:82:15",
													"statements": [
														{
															"nativeSrc": "23810:66:15",
															"nodeType": "YulAssignment",
															"src": "23810:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23868:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "23868:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "23850:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "23850:17:15"
																				},
																				"nativeSrc": "23850:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "23850:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23841:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "23841:8:15"
																		},
																		"nativeSrc": "23841:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23841:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23823:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "23823:17:15"
																},
																"nativeSrc": "23823:53:15",
																"nodeType": "YulFunctionCall",
																"src": "23823:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23810:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "23810:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "23740:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23780:5:15",
														"nodeType": "YulTypedName",
														"src": "23780:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23790:9:15",
														"nodeType": "YulTypedName",
														"src": "23790:9:15",
														"type": ""
													}
												],
												"src": "23740:142:15"
											},
											{
												"body": {
													"nativeSrc": "23935:28:15",
													"nodeType": "YulBlock",
													"src": "23935:28:15",
													"statements": [
														{
															"nativeSrc": "23945:12:15",
															"nodeType": "YulAssignment",
															"src": "23945:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "23952:5:15",
																"nodeType": "YulIdentifier",
																"src": "23952:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23945:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23945:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "23888:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23921:5:15",
														"nodeType": "YulTypedName",
														"src": "23921:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23931:3:15",
														"nodeType": "YulTypedName",
														"src": "23931:3:15",
														"type": ""
													}
												],
												"src": "23888:75:15"
											},
											{
												"body": {
													"nativeSrc": "24045:193:15",
													"nodeType": "YulBlock",
													"src": "24045:193:15",
													"statements": [
														{
															"nativeSrc": "24055:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "24055:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "24110:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "24110:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "24079:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "24079:30:15"
																},
																"nativeSrc": "24079:39:15",
																"nodeType": "YulFunctionCall",
																"src": "24079:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "24059:16:15",
																	"nodeType": "YulTypedName",
																	"src": "24059:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24134:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "24134:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "24174:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "24174:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "24168:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24168:5:15"
																				},
																				"nativeSrc": "24168:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "24168:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "24181:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "24181:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "24213:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "24213:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "24189:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "24189:23:15"
																				},
																				"nativeSrc": "24189:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "24189:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "24140:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "24140:27:15"
																		},
																		"nativeSrc": "24140:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24140:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "24127:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24127:6:15"
																},
																"nativeSrc": "24127:105:15",
																"nodeType": "YulFunctionCall",
																"src": "24127:105:15"
															},
															"nativeSrc": "24127:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "24127:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "23969:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24022:4:15",
														"nodeType": "YulTypedName",
														"src": "24022:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24028:6:15",
														"nodeType": "YulTypedName",
														"src": "24028:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "24036:7:15",
														"nodeType": "YulTypedName",
														"src": "24036:7:15",
														"type": ""
													}
												],
												"src": "23969:269:15"
											},
											{
												"body": {
													"nativeSrc": "24293:24:15",
													"nodeType": "YulBlock",
													"src": "24293:24:15",
													"statements": [
														{
															"nativeSrc": "24303:8:15",
															"nodeType": "YulAssignment",
															"src": "24303:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "24310:1:15",
																"nodeType": "YulLiteral",
																"src": "24310:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24303:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24303:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "24244:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24289:3:15",
														"nodeType": "YulTypedName",
														"src": "24289:3:15",
														"type": ""
													}
												],
												"src": "24244:73:15"
											},
											{
												"body": {
													"nativeSrc": "24376:136:15",
													"nodeType": "YulBlock",
													"src": "24376:136:15",
													"statements": [
														{
															"nativeSrc": "24386:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "24386:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "24400:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "24400:30:15"
																},
																"nativeSrc": "24400:32:15",
																"nodeType": "YulFunctionCall",
																"src": "24400:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "24390:6:15",
																	"nodeType": "YulTypedName",
																	"src": "24390:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24485:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "24485:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "24491:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24491:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "24499:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24499:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "24441:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "24441:43:15"
																},
																"nativeSrc": "24441:65:15",
																"nodeType": "YulFunctionCall",
																"src": "24441:65:15"
															},
															"nativeSrc": "24441:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "24441:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "24323:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24362:4:15",
														"nodeType": "YulTypedName",
														"src": "24362:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24368:6:15",
														"nodeType": "YulTypedName",
														"src": "24368:6:15",
														"type": ""
													}
												],
												"src": "24323:189:15"
											},
											{
												"body": {
													"nativeSrc": "24568:136:15",
													"nodeType": "YulBlock",
													"src": "24568:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "24635:63:15",
																"nodeType": "YulBlock",
																"src": "24635:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24679:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24679:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24686:1:15",
																					"nodeType": "YulLiteral",
																					"src": "24686:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "24649:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "24649:29:15"
																			},
																			"nativeSrc": "24649:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24649:39:15"
																		},
																		"nativeSrc": "24649:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "24649:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "24588:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "24588:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "24595:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24595:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "24585:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "24585:2:15"
																},
																"nativeSrc": "24585:14:15",
																"nodeType": "YulFunctionCall",
																"src": "24585:14:15"
															},
															"nativeSrc": "24578:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "24600:26:15",
																"nodeType": "YulBlock",
																"src": "24600:26:15",
																"statements": [
																	{
																		"nativeSrc": "24602:22:15",
																		"nodeType": "YulAssignment",
																		"src": "24602:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24615:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24615:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24622:1:15",
																					"nodeType": "YulLiteral",
																					"src": "24622:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24611:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "24611:3:15"
																			},
																			"nativeSrc": "24611:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24611:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "24602:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "24602:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "24582:2:15",
																"nodeType": "YulBlock",
																"src": "24582:2:15",
																"statements": []
															},
															"src": "24578:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "24518:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "24556:5:15",
														"nodeType": "YulTypedName",
														"src": "24556:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24563:3:15",
														"nodeType": "YulTypedName",
														"src": "24563:3:15",
														"type": ""
													}
												],
												"src": "24518:186:15"
											},
											{
												"body": {
													"nativeSrc": "24789:464:15",
													"nodeType": "YulBlock",
													"src": "24789:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "24815:431:15",
																"nodeType": "YulBlock",
																"src": "24815:431:15",
																"statements": [
																	{
																		"nativeSrc": "24829:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24829:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "24877:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24877:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "24845:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "24845:31:15"
																			},
																			"nativeSrc": "24845:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24845:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "24833:8:15",
																				"nodeType": "YulTypedName",
																				"src": "24833:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "24896:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24896:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "24919:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "24919:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "24947:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "24947:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "24929:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "24929:17:15"
																					},
																					"nativeSrc": "24929:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "24929:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24915:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "24915:3:15"
																			},
																			"nativeSrc": "24915:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24915:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "24900:11:15",
																				"nodeType": "YulTypedName",
																				"src": "24900:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "25116:27:15",
																			"nodeType": "YulBlock",
																			"src": "25116:27:15",
																			"statements": [
																				{
																					"nativeSrc": "25118:23:15",
																					"nodeType": "YulAssignment",
																					"src": "25118:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "25133:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "25133:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "25118:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "25118:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "25100:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "25100:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25112:2:15",
																					"nodeType": "YulLiteral",
																					"src": "25112:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "25097:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "25097:2:15"
																			},
																			"nativeSrc": "25097:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "25097:18:15"
																		},
																		"nativeSrc": "25094:49:15",
																		"nodeType": "YulIf",
																		"src": "25094:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "25185:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "25185:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "25202:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "25202:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "25230:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "25230:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "25212:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "25212:17:15"
																							},
																							"nativeSrc": "25212:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "25212:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "25198:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "25198:3:15"
																					},
																					"nativeSrc": "25198:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "25198:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "25156:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "25156:28:15"
																			},
																			"nativeSrc": "25156:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "25156:80:15"
																		},
																		"nativeSrc": "25156:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "25156:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "24806:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24806:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24811:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24811:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24803:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "24803:2:15"
																},
																"nativeSrc": "24803:11:15",
																"nodeType": "YulFunctionCall",
																"src": "24803:11:15"
															},
															"nativeSrc": "24800:446:15",
															"nodeType": "YulIf",
															"src": "24800:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "24710:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "24765:5:15",
														"nodeType": "YulTypedName",
														"src": "24765:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24772:3:15",
														"nodeType": "YulTypedName",
														"src": "24772:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "24777:10:15",
														"nodeType": "YulTypedName",
														"src": "24777:10:15",
														"type": ""
													}
												],
												"src": "24710:543:15"
											},
											{
												"body": {
													"nativeSrc": "25322:54:15",
													"nodeType": "YulBlock",
													"src": "25322:54:15",
													"statements": [
														{
															"nativeSrc": "25332:37:15",
															"nodeType": "YulAssignment",
															"src": "25332:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "25357:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25357:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "25363:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "25363:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "25353:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25353:3:15"
																},
																"nativeSrc": "25353:16:15",
																"nodeType": "YulFunctionCall",
																"src": "25353:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "25332:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "25332:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "25259:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "25297:4:15",
														"nodeType": "YulTypedName",
														"src": "25297:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "25303:5:15",
														"nodeType": "YulTypedName",
														"src": "25303:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "25313:8:15",
														"nodeType": "YulTypedName",
														"src": "25313:8:15",
														"type": ""
													}
												],
												"src": "25259:117:15"
											},
											{
												"body": {
													"nativeSrc": "25433:118:15",
													"nodeType": "YulBlock",
													"src": "25433:118:15",
													"statements": [
														{
															"nativeSrc": "25443:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "25443:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25492:1:15",
																						"nodeType": "YulLiteral",
																						"src": "25492:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "25495:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "25495:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "25488:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "25488:3:15"
																				},
																				"nativeSrc": "25488:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "25488:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25507:1:15",
																						"nodeType": "YulLiteral",
																						"src": "25507:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "25503:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "25503:3:15"
																				},
																				"nativeSrc": "25503:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "25503:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "25459:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "25459:28:15"
																		},
																		"nativeSrc": "25459:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25459:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "25455:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25455:3:15"
																},
																"nativeSrc": "25455:56:15",
																"nodeType": "YulFunctionCall",
																"src": "25455:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "25447:4:15",
																	"nodeType": "YulTypedName",
																	"src": "25447:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25520:25:15",
															"nodeType": "YulAssignment",
															"src": "25520:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25534:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25534:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "25540:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25540:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25530:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25530:3:15"
																},
																"nativeSrc": "25530:15:15",
																"nodeType": "YulFunctionCall",
																"src": "25530:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25520:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25520:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "25382:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25410:4:15",
														"nodeType": "YulTypedName",
														"src": "25410:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "25416:5:15",
														"nodeType": "YulTypedName",
														"src": "25416:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25426:6:15",
														"nodeType": "YulTypedName",
														"src": "25426:6:15",
														"type": ""
													}
												],
												"src": "25382:169:15"
											},
											{
												"body": {
													"nativeSrc": "25637:214:15",
													"nodeType": "YulBlock",
													"src": "25637:214:15",
													"statements": [
														{
															"nativeSrc": "25770:37:15",
															"nodeType": "YulAssignment",
															"src": "25770:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25797:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25797:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "25803:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "25803:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "25778:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "25778:18:15"
																},
																"nativeSrc": "25778:29:15",
																"nodeType": "YulFunctionCall",
																"src": "25778:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25770:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25770:4:15"
																}
															]
														},
														{
															"nativeSrc": "25816:29:15",
															"nodeType": "YulAssignment",
															"src": "25816:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25827:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25827:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "25837:1:15",
																				"nodeType": "YulLiteral",
																				"src": "25837:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "25840:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "25840:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "25833:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25833:3:15"
																		},
																		"nativeSrc": "25833:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25833:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "25824:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "25824:2:15"
																},
																"nativeSrc": "25824:21:15",
																"nodeType": "YulFunctionCall",
																"src": "25824:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "25816:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25816:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "25556:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25618:4:15",
														"nodeType": "YulTypedName",
														"src": "25618:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "25624:3:15",
														"nodeType": "YulTypedName",
														"src": "25624:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "25632:4:15",
														"nodeType": "YulTypedName",
														"src": "25632:4:15",
														"type": ""
													}
												],
												"src": "25556:295:15"
											},
											{
												"body": {
													"nativeSrc": "25948:1303:15",
													"nodeType": "YulBlock",
													"src": "25948:1303:15",
													"statements": [
														{
															"nativeSrc": "25959:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "25959:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "26006:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "26006:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "25973:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "25973:32:15"
																},
																"nativeSrc": "25973:37:15",
																"nodeType": "YulFunctionCall",
																"src": "25973:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "25963:6:15",
																	"nodeType": "YulTypedName",
																	"src": "25963:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26095:22:15",
																"nodeType": "YulBlock",
																"src": "26095:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "26097:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "26097:16:15"
																			},
																			"nativeSrc": "26097:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "26097:18:15"
																		},
																		"nativeSrc": "26097:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "26097:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26067:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26067:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26075:18:15",
																		"nodeType": "YulLiteral",
																		"src": "26075:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26064:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "26064:2:15"
																},
																"nativeSrc": "26064:30:15",
																"nodeType": "YulFunctionCall",
																"src": "26064:30:15"
															},
															"nativeSrc": "26061:56:15",
															"nodeType": "YulIf",
															"src": "26061:56:15"
														},
														{
															"nativeSrc": "26127:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "26127:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "26173:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "26173:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "26167:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "26167:5:15"
																		},
																		"nativeSrc": "26167:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26167:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "26141:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "26141:25:15"
																},
																"nativeSrc": "26141:38:15",
																"nodeType": "YulFunctionCall",
																"src": "26141:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "26131:6:15",
																	"nodeType": "YulTypedName",
																	"src": "26131:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26272:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "26272:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "26278:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26278:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "26286:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26286:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "26226:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "26226:45:15"
																},
																"nativeSrc": "26226:67:15",
																"nodeType": "YulFunctionCall",
																"src": "26226:67:15"
															},
															"nativeSrc": "26226:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "26226:67:15"
														},
														{
															"nativeSrc": "26303:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "26303:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "26320:1:15",
																"nodeType": "YulLiteral",
																"src": "26320:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26307:9:15",
																	"nodeType": "YulTypedName",
																	"src": "26307:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26331:17:15",
															"nodeType": "YulAssignment",
															"src": "26331:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "26344:4:15",
																"nodeType": "YulLiteral",
																"src": "26344:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26331:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "26331:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "26395:611:15",
																		"nodeType": "YulBlock",
																		"src": "26395:611:15",
																		"statements": [
																			{
																				"nativeSrc": "26409:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26409:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "26428:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "26428:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "26440:4:15",
																									"nodeType": "YulLiteral",
																									"src": "26440:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "26436:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "26436:3:15"
																							},
																							"nativeSrc": "26436:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "26436:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "26424:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "26424:3:15"
																					},
																					"nativeSrc": "26424:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26424:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "26413:7:15",
																						"nodeType": "YulTypedName",
																						"src": "26413:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26460:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26460:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26506:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "26506:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "26474:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "26474:31:15"
																					},
																					"nativeSrc": "26474:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26474:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "26464:6:15",
																						"nodeType": "YulTypedName",
																						"src": "26464:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26524:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26524:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26533:1:15",
																					"nodeType": "YulLiteral",
																					"src": "26533:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "26528:1:15",
																						"nodeType": "YulTypedName",
																						"src": "26528:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26592:163:15",
																					"nodeType": "YulBlock",
																					"src": "26592:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26617:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "26617:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "26635:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "26635:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "26640:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "26640:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "26631:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "26631:3:15"
																												},
																												"nativeSrc": "26631:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "26631:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "26625:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "26625:5:15"
																										},
																										"nativeSrc": "26625:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "26625:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26610:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26610:6:15"
																								},
																								"nativeSrc": "26610:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26610:42:15"
																							},
																							"nativeSrc": "26610:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "26610:42:15"
																						},
																						{
																							"nativeSrc": "26669:24:15",
																							"nodeType": "YulAssignment",
																							"src": "26669:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26683:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "26683:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26691:1:15",
																										"nodeType": "YulLiteral",
																										"src": "26691:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26679:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "26679:3:15"
																								},
																								"nativeSrc": "26679:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26679:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "26669:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26669:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "26710:31:15",
																							"nodeType": "YulAssignment",
																							"src": "26710:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "26727:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "26727:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26738:2:15",
																										"nodeType": "YulLiteral",
																										"src": "26738:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26723:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "26723:3:15"
																								},
																								"nativeSrc": "26723:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26723:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "26710:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "26710:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "26558:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "26558:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26561:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "26561:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26555:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "26555:2:15"
																					},
																					"nativeSrc": "26555:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26555:14:15"
																				},
																				"nativeSrc": "26547:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "26570:21:15",
																					"nodeType": "YulBlock",
																					"src": "26570:21:15",
																					"statements": [
																						{
																							"nativeSrc": "26572:17:15",
																							"nodeType": "YulAssignment",
																							"src": "26572:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "26581:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "26581:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26584:4:15",
																										"nodeType": "YulLiteral",
																										"src": "26584:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26577:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "26577:3:15"
																								},
																								"nativeSrc": "26577:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26577:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "26572:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "26572:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "26551:3:15",
																					"nodeType": "YulBlock",
																					"src": "26551:3:15",
																					"statements": []
																				},
																				"src": "26547:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "26791:156:15",
																					"nodeType": "YulBlock",
																					"src": "26791:156:15",
																					"statements": [
																						{
																							"nativeSrc": "26809:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "26809:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26836:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "26836:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26841:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "26841:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26832:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "26832:3:15"
																										},
																										"nativeSrc": "26832:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "26832:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26826:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "26826:5:15"
																								},
																								"nativeSrc": "26826:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26826:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "26813:9:15",
																									"nodeType": "YulTypedName",
																									"src": "26813:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26876:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "26876:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "26903:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "26903:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "26918:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "26918:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "26926:4:15",
																														"nodeType": "YulLiteral",
																														"src": "26926:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "26914:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "26914:3:15"
																												},
																												"nativeSrc": "26914:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "26914:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "26884:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "26884:18:15"
																										},
																										"nativeSrc": "26884:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "26884:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26869:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26869:6:15"
																								},
																								"nativeSrc": "26869:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26869:64:15"
																							},
																							"nativeSrc": "26869:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "26869:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26774:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "26774:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "26783:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "26783:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26771:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "26771:2:15"
																					},
																					"nativeSrc": "26771:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26771:19:15"
																				},
																				"nativeSrc": "26768:179:15",
																				"nodeType": "YulIf",
																				"src": "26768:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26967:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "26967:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "26981:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "26981:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "26989:1:15",
																											"nodeType": "YulLiteral",
																											"src": "26989:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "26977:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "26977:3:15"
																									},
																									"nativeSrc": "26977:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "26977:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "26993:1:15",
																									"nodeType": "YulLiteral",
																									"src": "26993:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "26973:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "26973:3:15"
																							},
																							"nativeSrc": "26973:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "26973:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26960:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "26960:6:15"
																					},
																					"nativeSrc": "26960:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26960:36:15"
																				},
																				"nativeSrc": "26960:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "26960:36:15"
																			}
																		]
																	},
																	"nativeSrc": "26388:618:15",
																	"nodeType": "YulCase",
																	"src": "26388:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26393:1:15",
																		"nodeType": "YulLiteral",
																		"src": "26393:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "27023:222:15",
																		"nodeType": "YulBlock",
																		"src": "27023:222:15",
																		"statements": [
																			{
																				"nativeSrc": "27037:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27037:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27050:1:15",
																					"nodeType": "YulLiteral",
																					"src": "27050:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "27041:5:15",
																						"nodeType": "YulTypedName",
																						"src": "27041:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27074:67:15",
																					"nodeType": "YulBlock",
																					"src": "27074:67:15",
																					"statements": [
																						{
																							"nativeSrc": "27092:35:15",
																							"nodeType": "YulAssignment",
																							"src": "27092:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "27111:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "27111:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "27116:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "27116:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "27107:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "27107:3:15"
																										},
																										"nativeSrc": "27107:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "27107:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "27101:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "27101:5:15"
																								},
																								"nativeSrc": "27101:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "27101:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "27092:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "27092:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "27067:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "27067:6:15"
																				},
																				"nativeSrc": "27064:77:15",
																				"nodeType": "YulIf",
																				"src": "27064:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27161:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "27161:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "27220:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "27220:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "27227:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "27227:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "27167:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "27167:52:15"
																							},
																							"nativeSrc": "27167:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "27167:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "27154:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "27154:6:15"
																					},
																					"nativeSrc": "27154:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "27154:81:15"
																				},
																				"nativeSrc": "27154:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "27154:81:15"
																			}
																		]
																	},
																	"nativeSrc": "27015:230:15",
																	"nodeType": "YulCase",
																	"src": "27015:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26368:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26368:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26376:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26376:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26365:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "26365:2:15"
																},
																"nativeSrc": "26365:14:15",
																"nodeType": "YulFunctionCall",
																"src": "26365:14:15"
															},
															"nativeSrc": "26358:887:15",
															"nodeType": "YulSwitch",
															"src": "26358:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "25856:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25937:4:15",
														"nodeType": "YulTypedName",
														"src": "25937:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "25943:3:15",
														"nodeType": "YulTypedName",
														"src": "25943:3:15",
														"type": ""
													}
												],
												"src": "25856:1395:15"
											},
											{
												"body": {
													"nativeSrc": "27371:34:15",
													"nodeType": "YulBlock",
													"src": "27371:34:15",
													"statements": [
														{
															"nativeSrc": "27381:18:15",
															"nodeType": "YulAssignment",
															"src": "27381:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "27396:3:15",
																"nodeType": "YulIdentifier",
																"src": "27396:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "27381:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "27381:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "27257:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27343:3:15",
														"nodeType": "YulTypedName",
														"src": "27343:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "27348:6:15",
														"nodeType": "YulTypedName",
														"src": "27348:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "27359:11:15",
														"nodeType": "YulTypedName",
														"src": "27359:11:15",
														"type": ""
													}
												],
												"src": "27257:148:15"
											},
											{
												"body": {
													"nativeSrc": "27521:280:15",
													"nodeType": "YulBlock",
													"src": "27521:280:15",
													"statements": [
														{
															"nativeSrc": "27531:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "27531:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27578:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "27578:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "27545:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "27545:32:15"
																},
																"nativeSrc": "27545:39:15",
																"nodeType": "YulFunctionCall",
																"src": "27545:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "27535:6:15",
																	"nodeType": "YulTypedName",
																	"src": "27535:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27593:96:15",
															"nodeType": "YulAssignment",
															"src": "27593:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27677:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27677:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27682:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27682:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "27600:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "27600:76:15"
																},
																"nativeSrc": "27600:89:15",
																"nodeType": "YulFunctionCall",
																"src": "27600:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27593:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27593:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27737:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "27737:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27744:4:15",
																				"nodeType": "YulLiteral",
																				"src": "27744:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27733:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27733:3:15"
																		},
																		"nativeSrc": "27733:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27733:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27751:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27751:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27756:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27756:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "27698:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "27698:34:15"
																},
																"nativeSrc": "27698:65:15",
																"nodeType": "YulFunctionCall",
																"src": "27698:65:15"
															},
															"nativeSrc": "27698:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "27698:65:15"
														},
														{
															"nativeSrc": "27772:23:15",
															"nodeType": "YulAssignment",
															"src": "27772:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27783:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27783:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27788:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27788:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27779:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27779:3:15"
																},
																"nativeSrc": "27779:16:15",
																"nodeType": "YulFunctionCall",
																"src": "27779:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27772:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27772:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "27411:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27502:5:15",
														"nodeType": "YulTypedName",
														"src": "27502:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "27509:3:15",
														"nodeType": "YulTypedName",
														"src": "27509:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27517:3:15",
														"nodeType": "YulTypedName",
														"src": "27517:3:15",
														"type": ""
													}
												],
												"src": "27411:390:15"
											},
											{
												"body": {
													"nativeSrc": "27991:251:15",
													"nodeType": "YulBlock",
													"src": "27991:251:15",
													"statements": [
														{
															"nativeSrc": "28002:102:15",
															"nodeType": "YulAssignment",
															"src": "28002:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28091:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28091:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28100:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28100:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "28009:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "28009:81:15"
																},
																"nativeSrc": "28009:95:15",
																"nodeType": "YulFunctionCall",
																"src": "28009:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28002:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28002:3:15"
																}
															]
														},
														{
															"nativeSrc": "28114:102:15",
															"nodeType": "YulAssignment",
															"src": "28114:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28203:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28203:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28212:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28212:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "28121:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "28121:81:15"
																},
																"nativeSrc": "28121:95:15",
																"nodeType": "YulFunctionCall",
																"src": "28121:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28114:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28114:3:15"
																}
															]
														},
														{
															"nativeSrc": "28226:10:15",
															"nodeType": "YulAssignment",
															"src": "28226:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "28233:3:15",
																"nodeType": "YulIdentifier",
																"src": "28233:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28226:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28226:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "27807:435:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27962:3:15",
														"nodeType": "YulTypedName",
														"src": "27962:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27968:6:15",
														"nodeType": "YulTypedName",
														"src": "27968:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27976:6:15",
														"nodeType": "YulTypedName",
														"src": "27976:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27987:3:15",
														"nodeType": "YulTypedName",
														"src": "27987:3:15",
														"type": ""
													}
												],
												"src": "27807:435:15"
											},
											{
												"body": {
													"nativeSrc": "28354:119:15",
													"nodeType": "YulBlock",
													"src": "28354:119:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28376:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "28376:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28384:1:15",
																				"nodeType": "YulLiteral",
																				"src": "28384:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28372:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28372:3:15"
																		},
																		"nativeSrc": "28372:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28372:14:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "28388:34:15",
																		"nodeType": "YulLiteral",
																		"src": "28388:34:15",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28365:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "28365:6:15"
																},
																"nativeSrc": "28365:58:15",
																"nodeType": "YulFunctionCall",
																"src": "28365:58:15"
															},
															"nativeSrc": "28365:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "28365:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28444:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "28444:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28452:2:15",
																				"nodeType": "YulLiteral",
																				"src": "28452:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28440:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28440:3:15"
																		},
																		"nativeSrc": "28440:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28440:15:15"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "28457:8:15",
																		"nodeType": "YulLiteral",
																		"src": "28457:8:15",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "28433:6:15"
																},
																"nativeSrc": "28433:33:15",
																"nodeType": "YulFunctionCall",
																"src": "28433:33:15"
															},
															"nativeSrc": "28433:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "28433:33:15"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "28248:225:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28346:6:15",
														"nodeType": "YulTypedName",
														"src": "28346:6:15",
														"type": ""
													}
												],
												"src": "28248:225:15"
											},
											{
												"body": {
													"nativeSrc": "28625:220:15",
													"nodeType": "YulBlock",
													"src": "28625:220:15",
													"statements": [
														{
															"nativeSrc": "28635:74:15",
															"nodeType": "YulAssignment",
															"src": "28635:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28701:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28701:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28706:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28706:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28642:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "28642:58:15"
																},
																"nativeSrc": "28642:67:15",
																"nodeType": "YulFunctionCall",
																"src": "28642:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28635:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28635:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28807:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28807:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "28718:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "28718:88:15"
																},
																"nativeSrc": "28718:93:15",
																"nodeType": "YulFunctionCall",
																"src": "28718:93:15"
															},
															"nativeSrc": "28718:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "28718:93:15"
														},
														{
															"nativeSrc": "28820:19:15",
															"nodeType": "YulAssignment",
															"src": "28820:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28831:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28831:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28836:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28836:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28827:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28827:3:15"
																},
																"nativeSrc": "28827:12:15",
																"nodeType": "YulFunctionCall",
																"src": "28827:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28820:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28820:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28479:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28613:3:15",
														"nodeType": "YulTypedName",
														"src": "28613:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28621:3:15",
														"nodeType": "YulTypedName",
														"src": "28621:3:15",
														"type": ""
													}
												],
												"src": "28479:366:15"
											},
											{
												"body": {
													"nativeSrc": "29022:248:15",
													"nodeType": "YulBlock",
													"src": "29022:248:15",
													"statements": [
														{
															"nativeSrc": "29032:26:15",
															"nodeType": "YulAssignment",
															"src": "29032:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29044:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "29044:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29055:2:15",
																		"nodeType": "YulLiteral",
																		"src": "29055:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29040:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29040:3:15"
																},
																"nativeSrc": "29040:18:15",
																"nodeType": "YulFunctionCall",
																"src": "29040:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29032:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29032:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29079:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29079:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29090:1:15",
																				"nodeType": "YulLiteral",
																				"src": "29090:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29075:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29075:3:15"
																		},
																		"nativeSrc": "29075:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29075:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29098:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "29098:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29104:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29104:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29094:3:15"
																		},
																		"nativeSrc": "29094:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29094:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29068:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29068:6:15"
																},
																"nativeSrc": "29068:47:15",
																"nodeType": "YulFunctionCall",
																"src": "29068:47:15"
															},
															"nativeSrc": "29068:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "29068:47:15"
														},
														{
															"nativeSrc": "29124:139:15",
															"nodeType": "YulAssignment",
															"src": "29124:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29258:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "29258:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29132:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "29132:124:15"
																},
																"nativeSrc": "29132:131:15",
																"nodeType": "YulFunctionCall",
																"src": "29132:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29124:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29124:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28851:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29002:9:15",
														"nodeType": "YulTypedName",
														"src": "29002:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29017:4:15",
														"nodeType": "YulTypedName",
														"src": "29017:4:15",
														"type": ""
													}
												],
												"src": "28851:419:15"
											},
											{
												"body": {
													"nativeSrc": "29382:76:15",
													"nodeType": "YulBlock",
													"src": "29382:76:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29404:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "29404:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29412:1:15",
																				"nodeType": "YulLiteral",
																				"src": "29412:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29400:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29400:3:15"
																		},
																		"nativeSrc": "29400:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29400:14:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "29416:34:15",
																		"nodeType": "YulLiteral",
																		"src": "29416:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29393:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29393:6:15"
																},
																"nativeSrc": "29393:58:15",
																"nodeType": "YulFunctionCall",
																"src": "29393:58:15"
															},
															"nativeSrc": "29393:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "29393:58:15"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "29276:182:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29374:6:15",
														"nodeType": "YulTypedName",
														"src": "29374:6:15",
														"type": ""
													}
												],
												"src": "29276:182:15"
											},
											{
												"body": {
													"nativeSrc": "29610:220:15",
													"nodeType": "YulBlock",
													"src": "29610:220:15",
													"statements": [
														{
															"nativeSrc": "29620:74:15",
															"nodeType": "YulAssignment",
															"src": "29620:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29686:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29686:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29691:2:15",
																		"nodeType": "YulLiteral",
																		"src": "29691:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29627:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "29627:58:15"
																},
																"nativeSrc": "29627:67:15",
																"nodeType": "YulFunctionCall",
																"src": "29627:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29620:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29620:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29792:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29792:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "29703:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "29703:88:15"
																},
																"nativeSrc": "29703:93:15",
																"nodeType": "YulFunctionCall",
																"src": "29703:93:15"
															},
															"nativeSrc": "29703:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "29703:93:15"
														},
														{
															"nativeSrc": "29805:19:15",
															"nodeType": "YulAssignment",
															"src": "29805:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29816:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29816:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29821:2:15",
																		"nodeType": "YulLiteral",
																		"src": "29821:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29812:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29812:3:15"
																},
																"nativeSrc": "29812:12:15",
																"nodeType": "YulFunctionCall",
																"src": "29812:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29805:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29805:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29464:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29598:3:15",
														"nodeType": "YulTypedName",
														"src": "29598:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29606:3:15",
														"nodeType": "YulTypedName",
														"src": "29606:3:15",
														"type": ""
													}
												],
												"src": "29464:366:15"
											},
											{
												"body": {
													"nativeSrc": "30007:248:15",
													"nodeType": "YulBlock",
													"src": "30007:248:15",
													"statements": [
														{
															"nativeSrc": "30017:26:15",
															"nodeType": "YulAssignment",
															"src": "30017:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30029:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "30029:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30040:2:15",
																		"nodeType": "YulLiteral",
																		"src": "30040:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30025:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30025:3:15"
																},
																"nativeSrc": "30025:18:15",
																"nodeType": "YulFunctionCall",
																"src": "30025:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30017:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30017:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30064:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30064:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30075:1:15",
																				"nodeType": "YulLiteral",
																				"src": "30075:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30060:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30060:3:15"
																		},
																		"nativeSrc": "30060:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30060:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30083:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "30083:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30089:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30089:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30079:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30079:3:15"
																		},
																		"nativeSrc": "30079:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30079:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30053:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30053:6:15"
																},
																"nativeSrc": "30053:47:15",
																"nodeType": "YulFunctionCall",
																"src": "30053:47:15"
															},
															"nativeSrc": "30053:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "30053:47:15"
														},
														{
															"nativeSrc": "30109:139:15",
															"nodeType": "YulAssignment",
															"src": "30109:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30243:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "30243:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30117:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "30117:124:15"
																},
																"nativeSrc": "30117:131:15",
																"nodeType": "YulFunctionCall",
																"src": "30117:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30109:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30109:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29836:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29987:9:15",
														"nodeType": "YulTypedName",
														"src": "29987:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30002:4:15",
														"nodeType": "YulTypedName",
														"src": "30002:4:15",
														"type": ""
													}
												],
												"src": "29836:419:15"
											},
											{
												"body": {
													"nativeSrc": "30319:40:15",
													"nodeType": "YulBlock",
													"src": "30319:40:15",
													"statements": [
														{
															"nativeSrc": "30330:22:15",
															"nodeType": "YulAssignment",
															"src": "30330:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30346:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "30346:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30340:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "30340:5:15"
																},
																"nativeSrc": "30340:12:15",
																"nodeType": "YulFunctionCall",
																"src": "30340:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "30330:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30330:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "30261:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30302:5:15",
														"nodeType": "YulTypedName",
														"src": "30302:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "30312:6:15",
														"nodeType": "YulTypedName",
														"src": "30312:6:15",
														"type": ""
													}
												],
												"src": "30261:98:15"
											},
											{
												"body": {
													"nativeSrc": "30460:73:15",
													"nodeType": "YulBlock",
													"src": "30460:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30477:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30477:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30482:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30482:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30470:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30470:6:15"
																},
																"nativeSrc": "30470:19:15",
																"nodeType": "YulFunctionCall",
																"src": "30470:19:15"
															},
															"nativeSrc": "30470:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "30470:19:15"
														},
														{
															"nativeSrc": "30498:29:15",
															"nodeType": "YulAssignment",
															"src": "30498:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30517:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30517:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30522:4:15",
																		"nodeType": "YulLiteral",
																		"src": "30522:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30513:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30513:3:15"
																},
																"nativeSrc": "30513:14:15",
																"nodeType": "YulFunctionCall",
																"src": "30513:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "30498:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "30498:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "30365:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30432:3:15",
														"nodeType": "YulTypedName",
														"src": "30432:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "30437:6:15",
														"nodeType": "YulTypedName",
														"src": "30437:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "30448:11:15",
														"nodeType": "YulTypedName",
														"src": "30448:11:15",
														"type": ""
													}
												],
												"src": "30365:168:15"
											},
											{
												"body": {
													"nativeSrc": "30629:283:15",
													"nodeType": "YulBlock",
													"src": "30629:283:15",
													"statements": [
														{
															"nativeSrc": "30639:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "30639:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30685:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "30685:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "30653:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "30653:31:15"
																},
																"nativeSrc": "30653:38:15",
																"nodeType": "YulFunctionCall",
																"src": "30653:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "30643:6:15",
																	"nodeType": "YulTypedName",
																	"src": "30643:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "30700:77:15",
															"nodeType": "YulAssignment",
															"src": "30700:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30765:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30765:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30770:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30770:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "30707:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "30707:57:15"
																},
																"nativeSrc": "30707:70:15",
																"nodeType": "YulFunctionCall",
																"src": "30707:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30700:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30700:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "30825:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "30825:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30832:4:15",
																				"nodeType": "YulLiteral",
																				"src": "30832:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30821:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30821:3:15"
																		},
																		"nativeSrc": "30821:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30821:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "30839:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30839:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30844:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30844:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "30786:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "30786:34:15"
																},
																"nativeSrc": "30786:65:15",
																"nodeType": "YulFunctionCall",
																"src": "30786:65:15"
															},
															"nativeSrc": "30786:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "30786:65:15"
														},
														{
															"nativeSrc": "30860:46:15",
															"nodeType": "YulAssignment",
															"src": "30860:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30871:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30871:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "30898:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "30898:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "30876:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "30876:21:15"
																		},
																		"nativeSrc": "30876:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30876:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30867:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30867:3:15"
																},
																"nativeSrc": "30867:39:15",
																"nodeType": "YulFunctionCall",
																"src": "30867:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30860:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30860:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "30539:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30610:5:15",
														"nodeType": "YulTypedName",
														"src": "30610:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "30617:3:15",
														"nodeType": "YulTypedName",
														"src": "30617:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30625:3:15",
														"nodeType": "YulTypedName",
														"src": "30625:3:15",
														"type": ""
													}
												],
												"src": "30539:373:15"
											},
											{
												"body": {
													"nativeSrc": "31118:440:15",
													"nodeType": "YulBlock",
													"src": "31118:440:15",
													"statements": [
														{
															"nativeSrc": "31128:27:15",
															"nodeType": "YulAssignment",
															"src": "31128:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31140:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "31140:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31151:3:15",
																		"nodeType": "YulLiteral",
																		"src": "31151:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31136:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31136:3:15"
																},
																"nativeSrc": "31136:19:15",
																"nodeType": "YulFunctionCall",
																"src": "31136:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31128:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31128:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31209:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31209:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31222:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31222:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31233:1:15",
																				"nodeType": "YulLiteral",
																				"src": "31233:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31218:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31218:3:15"
																		},
																		"nativeSrc": "31218:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31218:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31165:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31165:43:15"
																},
																"nativeSrc": "31165:71:15",
																"nodeType": "YulFunctionCall",
																"src": "31165:71:15"
															},
															"nativeSrc": "31165:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "31165:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31290:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31290:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31303:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31303:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31314:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31314:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31299:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31299:3:15"
																		},
																		"nativeSrc": "31299:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31299:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31246:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31246:43:15"
																},
																"nativeSrc": "31246:72:15",
																"nodeType": "YulFunctionCall",
																"src": "31246:72:15"
															},
															"nativeSrc": "31246:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "31246:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31372:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31372:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31385:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31385:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31396:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31396:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31381:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31381:3:15"
																		},
																		"nativeSrc": "31381:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31381:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31328:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31328:43:15"
																},
																"nativeSrc": "31328:72:15",
																"nodeType": "YulFunctionCall",
																"src": "31328:72:15"
															},
															"nativeSrc": "31328:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "31328:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31421:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31421:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31432:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31432:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31417:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31417:3:15"
																		},
																		"nativeSrc": "31417:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31417:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31441:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "31441:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31447:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31447:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31437:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31437:3:15"
																		},
																		"nativeSrc": "31437:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31437:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31410:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31410:6:15"
																},
																"nativeSrc": "31410:48:15",
																"nodeType": "YulFunctionCall",
																"src": "31410:48:15"
															},
															"nativeSrc": "31410:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "31410:48:15"
														},
														{
															"nativeSrc": "31467:84:15",
															"nodeType": "YulAssignment",
															"src": "31467:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "31537:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31537:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31546:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "31546:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "31475:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "31475:61:15"
																},
																"nativeSrc": "31475:76:15",
																"nodeType": "YulFunctionCall",
																"src": "31475:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31467:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31467:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "30918:640:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31066:9:15",
														"nodeType": "YulTypedName",
														"src": "31066:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "31078:6:15",
														"nodeType": "YulTypedName",
														"src": "31078:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31086:6:15",
														"nodeType": "YulTypedName",
														"src": "31086:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31094:6:15",
														"nodeType": "YulTypedName",
														"src": "31094:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31102:6:15",
														"nodeType": "YulTypedName",
														"src": "31102:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31113:4:15",
														"nodeType": "YulTypedName",
														"src": "31113:4:15",
														"type": ""
													}
												],
												"src": "30918:640:15"
											},
											{
												"body": {
													"nativeSrc": "31626:79:15",
													"nodeType": "YulBlock",
													"src": "31626:79:15",
													"statements": [
														{
															"nativeSrc": "31636:22:15",
															"nodeType": "YulAssignment",
															"src": "31636:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "31651:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31651:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "31645:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "31645:5:15"
																},
																"nativeSrc": "31645:13:15",
																"nodeType": "YulFunctionCall",
																"src": "31645:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "31636:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "31636:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "31693:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "31693:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "31667:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "31667:25:15"
																},
																"nativeSrc": "31667:32:15",
																"nodeType": "YulFunctionCall",
																"src": "31667:32:15"
															},
															"nativeSrc": "31667:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "31667:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "31564:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "31604:6:15",
														"nodeType": "YulTypedName",
														"src": "31604:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "31612:3:15",
														"nodeType": "YulTypedName",
														"src": "31612:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "31620:5:15",
														"nodeType": "YulTypedName",
														"src": "31620:5:15",
														"type": ""
													}
												],
												"src": "31564:141:15"
											},
											{
												"body": {
													"nativeSrc": "31787:273:15",
													"nodeType": "YulBlock",
													"src": "31787:273:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "31833:83:15",
																"nodeType": "YulBlock",
																"src": "31833:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "31835:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "31835:77:15"
																			},
																			"nativeSrc": "31835:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "31835:79:15"
																		},
																		"nativeSrc": "31835:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "31835:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "31808:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "31808:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31817:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31817:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31804:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31804:3:15"
																		},
																		"nativeSrc": "31804:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31804:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31829:2:15",
																		"nodeType": "YulLiteral",
																		"src": "31829:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "31800:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31800:3:15"
																},
																"nativeSrc": "31800:32:15",
																"nodeType": "YulFunctionCall",
																"src": "31800:32:15"
															},
															"nativeSrc": "31797:119:15",
															"nodeType": "YulIf",
															"src": "31797:119:15"
														},
														{
															"nativeSrc": "31926:127:15",
															"nodeType": "YulBlock",
															"src": "31926:127:15",
															"statements": [
																{
																	"nativeSrc": "31941:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "31941:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "31955:1:15",
																		"nodeType": "YulLiteral",
																		"src": "31955:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "31945:6:15",
																			"nodeType": "YulTypedName",
																			"src": "31945:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "31970:73:15",
																	"nodeType": "YulAssignment",
																	"src": "31970:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "32015:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "32015:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "32026:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "32026:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "32011:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "32011:3:15"
																				},
																				"nativeSrc": "32011:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "32011:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "32035:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "32035:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "31980:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "31980:30:15"
																		},
																		"nativeSrc": "31980:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31980:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "31970:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "31970:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "31711:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31757:9:15",
														"nodeType": "YulTypedName",
														"src": "31757:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "31768:7:15",
														"nodeType": "YulTypedName",
														"src": "31768:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "31780:6:15",
														"nodeType": "YulTypedName",
														"src": "31780:6:15",
														"type": ""
													}
												],
												"src": "31711:349:15"
											},
											{
												"body": {
													"nativeSrc": "32094:152:15",
													"nodeType": "YulBlock",
													"src": "32094:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32111:1:15",
																		"nodeType": "YulLiteral",
																		"src": "32111:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32114:77:15",
																		"nodeType": "YulLiteral",
																		"src": "32114:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32104:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "32104:6:15"
																},
																"nativeSrc": "32104:88:15",
																"nodeType": "YulFunctionCall",
																"src": "32104:88:15"
															},
															"nativeSrc": "32104:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "32104:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32208:1:15",
																		"nodeType": "YulLiteral",
																		"src": "32208:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32211:4:15",
																		"nodeType": "YulLiteral",
																		"src": "32211:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32201:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "32201:6:15"
																},
																"nativeSrc": "32201:15:15",
																"nodeType": "YulFunctionCall",
																"src": "32201:15:15"
															},
															"nativeSrc": "32201:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "32201:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32232:1:15",
																		"nodeType": "YulLiteral",
																		"src": "32232:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32235:4:15",
																		"nodeType": "YulLiteral",
																		"src": "32235:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "32225:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "32225:6:15"
																},
																"nativeSrc": "32225:15:15",
																"nodeType": "YulFunctionCall",
																"src": "32225:15:15"
															},
															"nativeSrc": "32225:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "32225:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "32066:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "32066:180:15"
											},
											{
												"body": {
													"nativeSrc": "32378:206:15",
													"nodeType": "YulBlock",
													"src": "32378:206:15",
													"statements": [
														{
															"nativeSrc": "32388:26:15",
															"nodeType": "YulAssignment",
															"src": "32388:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32400:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "32400:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32411:2:15",
																		"nodeType": "YulLiteral",
																		"src": "32411:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32396:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "32396:3:15"
																},
																"nativeSrc": "32396:18:15",
																"nodeType": "YulFunctionCall",
																"src": "32396:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32388:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "32388:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "32468:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "32468:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32481:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "32481:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32492:1:15",
																				"nodeType": "YulLiteral",
																				"src": "32492:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32477:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "32477:3:15"
																		},
																		"nativeSrc": "32477:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "32477:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "32424:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "32424:43:15"
																},
																"nativeSrc": "32424:71:15",
																"nodeType": "YulFunctionCall",
																"src": "32424:71:15"
															},
															"nativeSrc": "32424:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "32424:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "32549:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "32549:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32562:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "32562:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32573:2:15",
																				"nodeType": "YulLiteral",
																				"src": "32573:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32558:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "32558:3:15"
																		},
																		"nativeSrc": "32558:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "32558:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "32505:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "32505:43:15"
																},
																"nativeSrc": "32505:72:15",
																"nodeType": "YulFunctionCall",
																"src": "32505:72:15"
															},
															"nativeSrc": "32505:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "32505:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "32252:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32342:9:15",
														"nodeType": "YulTypedName",
														"src": "32342:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "32354:6:15",
														"nodeType": "YulTypedName",
														"src": "32354:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "32362:6:15",
														"nodeType": "YulTypedName",
														"src": "32362:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32373:4:15",
														"nodeType": "YulTypedName",
														"src": "32373:4:15",
														"type": ""
													}
												],
												"src": "32252:332:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct ProductStore.Product -> struct ProductStore.Product\n    function abi_encode_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct ProductStore.Product[] -> struct ProductStore.Product[]\n    function abi_encode_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Product_$3080_memory_ptr_to_t_struct$_Product_$3080_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$327_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$327_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$327_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$327__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$327_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592(memPtr) {\n\n        mstore(add(memPtr, 0), \"Product does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061014b575f3560e01c80637acc0b20116100c1578063b88d4fde1161007a578063b88d4fde1461039b578063c87b56dd146103b7578063cf2c0334146103e7578063e985e9c514610417578063f2fde38b14610447578063fc0c546a146104635761014b565b80637acc0b20146102d95780638642269e1461030b5780638da5cb5b1461032757806395d89b4114610345578063a22cb46514610363578063b15247d91461037f5761014b565b806323b872dd1161011357806323b872dd1461021957806342842e0e146102355780634de91a63146102515780636352211e1461026f57806370a082311461029f578063715018a6146102cf5761014b565b8063019d2fbf1461014f57806301ffc9a71461017f57806306fdde03146101af578063081812fc146101cd578063095ea7b3146101fd575b5f80fd5b61016960048036038101906101649190611f51565b610481565b6040516101769190612126565b60405180910390f35b6101996004803603810190610194919061219b565b610687565b6040516101a691906121e0565b60405180910390f35b6101b7610768565b6040516101c49190612241565b60405180910390f35b6101e760048036038101906101e2919061228b565b6107f7565b6040516101f491906122c5565b60405180910390f35b610217600480360381019061021291906122de565b610812565b005b610233600480360381019061022e919061231c565b610828565b005b61024f600480360381019061024a919061231c565b610927565b005b610259610946565b604051610266919061237b565b60405180910390f35b6102896004803603810190610284919061228b565b61094c565b60405161029691906122c5565b60405180910390f35b6102b960048036038101906102b49190611f51565b61095d565b6040516102c6919061237b565b60405180910390f35b6102d7610a13565b005b6102f360048036038101906102ee919061228b565b610a26565b60405161030293929190612394565b60405180910390f35b6103256004803603810190610320919061228b565b610ad2565b005b61032f610cfa565b60405161033c91906122c5565b60405180910390f35b61034d610d22565b60405161035a9190612241565b60405180910390f35b61037d600480360381019061037891906123fa565b610db2565b005b61039960048036038101906103949190612564565b610dc8565b005b6103b560048036038101906103b0919061265c565b610e45565b005b6103d160048036038101906103cc919061228b565b610e62565b6040516103de9190612241565b60405180910390f35b61040160048036038101906103fc91906122de565b610ec8565b60405161040e919061237b565b60405180910390f35b610431600480360381019061042c91906126dc565b610ef3565b60405161043e91906121e0565b60405180910390f35b610461600480360381019061045c9190611f51565b610f81565b005b61046b611003565b6040516104789190612775565b60405180910390f35b60605f600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561050957602002820191905f5260205f20905b8154815260200190600101908083116104f5575b505050505090505f815167ffffffffffffffff81111561052c5761052b612440565b5b60405190808252806020026020018201604052801561056557816020015b610552611ec7565b81526020019060019003908161054a5790505b5090505f5b825181101561067c575f8382815181106105875761058661278e565b5b6020026020010151905060095f8281526020019081526020015f206040518060600160405290815f82015481526020016001820180546105c6906127e8565b80601f01602080910402602001604051908101604052809291908181526020018280546105f2906127e8565b801561063d5780601f106106145761010080835404028352916020019161063d565b820191905f5260205f20905b81548152906001019060200180831161062057829003601f168201915b505050505081526020016002820154815250508383815181106106635761066261278e565b5b602002602001018190525050808060010191505061056a565b508092505050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610761575061076082611028565b5b9050919050565b60605f8054610776906127e8565b80601f01602080910402602001604051908101604052809291908181526020018280546107a2906127e8565b80156107ed5780601f106107c4576101008083540402835291602001916107ed565b820191905f5260205f20905b8154815290600101906020018083116107d057829003601f168201915b5050505050905090565b5f61080182611091565b5061080b82611117565b9050919050565b610824828261081f611150565b611157565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610898575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161088f91906122c5565b60405180910390fd5b5f6108ab83836108a6611150565b611169565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610921578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161091893929190612818565b60405180910390fd5b50505050565b61094183838360405180602001604052805f815250610e45565b505050565b600b5481565b5f61095682611091565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ce575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016109c591906122c5565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a1b611374565b610a245f6113f2565b565b6009602052805f5260405f205f91509050805f015490806001018054610a4b906127e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a77906127e8565b8015610ac25780601f10610a9957610100808354040283529160200191610ac2565b820191905f5260205f20905b815481529060010190602001808311610aa557829003601f168201915b5050505050908060020154905083565b5f60095f8381526020019081526020015f2090505f815f015403610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2290612897565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330670de0b6b3a76400008560020154610b8291906128e2565b6040518463ffffffff1660e01b8152600401610ba093929190612923565b6020604051808303815f875af1158015610bbc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be0919061296c565b610c1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c16906129e1565b60405180910390fd5b5f610c2a60086114b5565b9050610c3633826114c1565b610c4060086114de565b600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083908060018154018082558091505060019003905f5260205f20015f90919091909150553373ffffffffffffffffffffffffffffffffffffffff167f52e9b4b2677873f4a0e6ac637221c8e8cfd2149accd54695cb8fdaf9491ddecc848460020154604051610ced9291906129ff565b60405180910390a2505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610d31906127e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5d906127e8565b8015610da85780601f10610d7f57610100808354040283529160200191610da8565b820191905f5260205f20905b815481529060010190602001808311610d8b57829003601f168201915b5050505050905090565b610dc4610dbd611150565b83836114f2565b5050565b610dd0611374565b5f600b5f815480929190610de390612a26565b91905055905060405180606001604052808281526020018481526020018381525060095f8381526020019081526020015f205f820151815f01556020820151816001019081610e329190612c01565b5060408201518160020155905050505050565b610e50848484610828565b610e5c8484848461165b565b50505050565b6060610e6d82611091565b505f610e7761180d565b90505f815111610e955760405180602001604052805f815250610ec0565b80610e9f84611823565b604051602001610eb0929190612d0a565b6040516020818303038152906040525b915050919050565b600a602052815f5260405f208181548110610ee1575f80fd5b905f5260205f20015f91509150505481565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610f89611374565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fee90612d9d565b60405180910390fd5b611000816113f2565b50565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061109c836118ed565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361110e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611105919061237b565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6111648383836001611926565b505050565b5f80611174846118ed565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146111b5576111b4818486611ae5565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611240576111f45f855f80611926565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146112bf57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61137c611150565b73ffffffffffffffffffffffffffffffffffffffff1661139a610cfa565b73ffffffffffffffffffffffffffffffffffffffff16146113f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e790612e05565b60405180910390fd5b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f815f01549050919050565b6114da828260405180602001604052805f815250611ba8565b5050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361156257816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161155991906122c5565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161164e91906121e0565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611807578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261169e611150565b8685856040518563ffffffff1660e01b81526004016116c09493929190612e75565b6020604051808303815f875af19250505080156116fb57506040513d601f19601f820116820180604052508101906116f89190612ed3565b60015b61177c573d805f8114611729576040519150601f19603f3d011682016040523d82523d5f602084013e61172e565b606091505b505f81510361177457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161176b91906122c5565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461180557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117fc91906122c5565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f600161183184611bc3565b0190505f8167ffffffffffffffff81111561184f5761184e612440565b5b6040519080825280601f01601f1916602001820160405280156118815781602001600182028036833780820191505090505b5090505f82602001820190505b6001156118e2578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118d7576118d6612efe565b5b0494505f850361188e575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061195e57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611a90575f61196d84611091565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119d757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156119ea57506119e88184610ef3565b155b15611a2c57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611a2391906122c5565b60405180910390fd5b8115611a8e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611af0838383611d14565b611ba3575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b6457806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611b5b919061237b565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611b9a929190612f2b565b60405180910390fd5b505050565b611bb28383611dd4565b611bbe5f84848461165b565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c1f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c1557611c14612efe565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c5c576d04ee2d6d415b85acef81000000008381611c5257611c51612efe565b5b0492506020810190505b662386f26fc100008310611c8b57662386f26fc100008381611c8157611c80612efe565b5b0492506010810190505b6305f5e1008310611cb4576305f5e1008381611caa57611ca9612efe565b5b0492506008810190505b6127108310611cd9576127108381611ccf57611cce612efe565b5b0492506004810190505b60648310611cfc5760648381611cf257611cf1612efe565b5b0492506002810190505b600a8310611d0b576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611dcb57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d8c5750611d8b8484610ef3565b5b80611dca57508273ffffffffffffffffffffffffffffffffffffffff16611db283611117565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e44575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611e3b91906122c5565b60405180910390fd5b5f611e5083835f611169565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ec2575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611eb991906122c5565b60405180910390fd5b505050565b60405180606001604052805f8152602001606081526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f2082611ef7565b9050919050565b611f3081611f16565b8114611f3a575f80fd5b50565b5f81359050611f4b81611f27565b92915050565b5f60208284031215611f6657611f65611eef565b5b5f611f7384828501611f3d565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b611fb781611fa5565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611ff4578082015181840152602081019050611fd9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61201982611fbd565b6120238185611fc7565b9350612033818560208601611fd7565b61203c81611fff565b840191505092915050565b5f606083015f83015161205c5f860182611fae565b5060208301518482036020860152612074828261200f565b91505060408301516120896040860182611fae565b508091505092915050565b5f61209f8383612047565b905092915050565b5f602082019050919050565b5f6120bd82611f7c565b6120c78185611f86565b9350836020820285016120d985611f96565b805f5b8581101561211457848403895281516120f58582612094565b9450612100836120a7565b925060208a019950506001810190506120dc565b50829750879550505050505092915050565b5f6020820190508181035f83015261213e81846120b3565b905092915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61217a81612146565b8114612184575f80fd5b50565b5f8135905061219581612171565b92915050565b5f602082840312156121b0576121af611eef565b5b5f6121bd84828501612187565b91505092915050565b5f8115159050919050565b6121da816121c6565b82525050565b5f6020820190506121f35f8301846121d1565b92915050565b5f82825260208201905092915050565b5f61221382611fbd565b61221d81856121f9565b935061222d818560208601611fd7565b61223681611fff565b840191505092915050565b5f6020820190508181035f8301526122598184612209565b905092915050565b61226a81611fa5565b8114612274575f80fd5b50565b5f8135905061228581612261565b92915050565b5f602082840312156122a05761229f611eef565b5b5f6122ad84828501612277565b91505092915050565b6122bf81611f16565b82525050565b5f6020820190506122d85f8301846122b6565b92915050565b5f80604083850312156122f4576122f3611eef565b5b5f61230185828601611f3d565b925050602061231285828601612277565b9150509250929050565b5f805f6060848603121561233357612332611eef565b5b5f61234086828701611f3d565b935050602061235186828701611f3d565b925050604061236286828701612277565b9150509250925092565b61237581611fa5565b82525050565b5f60208201905061238e5f83018461236c565b92915050565b5f6060820190506123a75f83018661236c565b81810360208301526123b98185612209565b90506123c8604083018461236c565b949350505050565b6123d9816121c6565b81146123e3575f80fd5b50565b5f813590506123f4816123d0565b92915050565b5f80604083850312156124105761240f611eef565b5b5f61241d85828601611f3d565b925050602061242e858286016123e6565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61247682611fff565b810181811067ffffffffffffffff8211171561249557612494612440565b5b80604052505050565b5f6124a7611ee6565b90506124b3828261246d565b919050565b5f67ffffffffffffffff8211156124d2576124d1612440565b5b6124db82611fff565b9050602081019050919050565b828183375f83830152505050565b5f612508612503846124b8565b61249e565b9050828152602081018484840111156125245761252361243c565b5b61252f8482856124e8565b509392505050565b5f82601f83011261254b5761254a612438565b5b813561255b8482602086016124f6565b91505092915050565b5f806040838503121561257a57612579611eef565b5b5f83013567ffffffffffffffff81111561259757612596611ef3565b5b6125a385828601612537565b92505060206125b485828601612277565b9150509250929050565b5f67ffffffffffffffff8211156125d8576125d7612440565b5b6125e182611fff565b9050602081019050919050565b5f6126006125fb846125be565b61249e565b90508281526020810184848401111561261c5761261b61243c565b5b6126278482856124e8565b509392505050565b5f82601f83011261264357612642612438565b5b81356126538482602086016125ee565b91505092915050565b5f805f806080858703121561267457612673611eef565b5b5f61268187828801611f3d565b945050602061269287828801611f3d565b93505060406126a387828801612277565b925050606085013567ffffffffffffffff8111156126c4576126c3611ef3565b5b6126d08782880161262f565b91505092959194509250565b5f80604083850312156126f2576126f1611eef565b5b5f6126ff85828601611f3d565b925050602061271085828601611f3d565b9150509250929050565b5f819050919050565b5f61273d61273861273384611ef7565b61271a565b611ef7565b9050919050565b5f61274e82612723565b9050919050565b5f61275f82612744565b9050919050565b61276f81612755565b82525050565b5f6020820190506127885f830184612766565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806127ff57607f821691505b602082108103612812576128116127bb565b5b50919050565b5f60608201905061282b5f8301866122b6565b612838602083018561236c565b61284560408301846122b6565b949350505050565b7f50726f6475637420646f6573206e6f74206578697374000000000000000000005f82015250565b5f6128816016836121f9565b915061288c8261284d565b602082019050919050565b5f6020820190508181035f8301526128ae81612875565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128ec82611fa5565b91506128f783611fa5565b925082820261290581611fa5565b9150828204841483151761291c5761291b6128b5565b5b5092915050565b5f6060820190506129365f8301866122b6565b61294360208301856122b6565b612950604083018461236c565b949350505050565b5f81519050612966816123d0565b92915050565b5f6020828403121561298157612980611eef565b5b5f61298e84828501612958565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f6129cb6015836121f9565b91506129d682612997565b602082019050919050565b5f6020820190508181035f8301526129f8816129bf565b9050919050565b5f604082019050612a125f83018561236c565b612a1f602083018461236c565b9392505050565b5f612a3082611fa5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a6257612a616128b5565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612ac97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a8e565b612ad38683612a8e565b95508019841693508086168417925050509392505050565b5f612b05612b00612afb84611fa5565b61271a565b611fa5565b9050919050565b5f819050919050565b612b1e83612aeb565b612b32612b2a82612b0c565b848454612a9a565b825550505050565b5f90565b612b46612b3a565b612b51818484612b15565b505050565b5b81811015612b7457612b695f82612b3e565b600181019050612b57565b5050565b601f821115612bb957612b8a81612a6d565b612b9384612a7f565b81016020851015612ba2578190505b612bb6612bae85612a7f565b830182612b56565b50505b505050565b5f82821c905092915050565b5f612bd95f1984600802612bbe565b1980831691505092915050565b5f612bf18383612bca565b9150826002028217905092915050565b612c0a82611fbd565b67ffffffffffffffff811115612c2357612c22612440565b5b612c2d82546127e8565b612c38828285612b78565b5f60209050601f831160018114612c69575f8415612c57578287015190505b612c618582612be6565b865550612cc8565b601f198416612c7786612a6d565b5f5b82811015612c9e57848901518255600182019150602085019450602081019050612c79565b86831015612cbb5784890151612cb7601f891682612bca565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f612ce482611fbd565b612cee8185612cd0565b9350612cfe818560208601611fd7565b80840191505092915050565b5f612d158285612cda565b9150612d218284612cda565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f612d876026836121f9565b9150612d9282612d2d565b604082019050919050565b5f6020820190508181035f830152612db481612d7b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612def6020836121f9565b9150612dfa82612dbb565b602082019050919050565b5f6020820190508181035f830152612e1c81612de3565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612e4782612e23565b612e518185612e2d565b9350612e61818560208601611fd7565b612e6a81611fff565b840191505092915050565b5f608082019050612e885f8301876122b6565b612e9560208301866122b6565b612ea2604083018561236c565b8181036060830152612eb48184612e3d565b905095945050505050565b5f81519050612ecd81612171565b92915050565b5f60208284031215612ee857612ee7611eef565b5b5f612ef584828501612ebf565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050612f3e5f8301856122b6565b612f4b602083018461236c565b939250505056fea26469706673582212209d12e630dbaee6201dcca645506ae7ba042529c523195945bc9894904e7eca8864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ACC0B20 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xCF2C0334 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x463 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x7ACC0B20 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x8642269E EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB15247D9 EQ PUSH2 0x37F JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x4DE91A63 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CF JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x19D2FBF EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1F51 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1F51 JUMP JUMPDEST PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH2 0xA13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0xDB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2564 JUMP JUMPDEST PUSH2 0xDC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x265C JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x26DC JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x1F51 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46B PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4F5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52C JUMPI PUSH2 0x52B PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x565 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x552 PUSH2 0x1EC7 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x54A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x587 JUMPI PUSH2 0x586 PUSH2 0x278E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F2 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x63D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x614 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x620 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x663 JUMPI PUSH2 0x662 PUSH2 0x278E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x56A JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x751 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x761 JUMPI POP PUSH2 0x760 DUP3 PUSH2 0x1028 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x776 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A2 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x801 DUP3 PUSH2 0x1091 JUMP JUMPDEST POP PUSH2 0x80B DUP3 PUSH2 0x1117 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x824 DUP3 DUP3 PUSH2 0x81F PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x1157 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x898 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8AB DUP4 DUP4 PUSH2 0x8A6 PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x1169 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x921 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x918 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x941 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x956 DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0x1374 JUMP JUMPDEST PUSH2 0xA24 PUSH0 PUSH2 0x13F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA4B SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA77 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA99 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAA5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0xB2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB22 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x296C JUMP JUMPDEST PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC16 SWAP1 PUSH2 0x29E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC2A PUSH1 0x8 PUSH2 0x14B5 JUMP JUMPDEST SWAP1 POP PUSH2 0xC36 CALLER DUP3 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0xC40 PUSH1 0x8 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x52E9B4B2677873F4A0E6AC637221C8E8CFD2149ACCD54695CB8FDAF9491DDECC DUP5 DUP5 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xCED SWAP3 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xD31 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD5D SWAP1 PUSH2 0x27E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD7F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDC4 PUSH2 0xDBD PUSH2 0x1150 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x14F2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xDD0 PUSH2 0x1374 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDE3 SWAP1 PUSH2 0x2A26 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xE32 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE50 DUP5 DUP5 DUP5 PUSH2 0x828 JUMP JUMPDEST PUSH2 0xE5C DUP5 DUP5 DUP5 DUP5 PUSH2 0x165B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE6D DUP3 PUSH2 0x1091 JUMP JUMPDEST POP PUSH0 PUSH2 0xE77 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xEC0 JUMP JUMPDEST DUP1 PUSH2 0xE9F DUP5 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEB0 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF89 PUSH2 0x1374 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEE SWAP1 PUSH2 0x2D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1000 DUP2 PUSH2 0x13F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x109C DUP4 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1105 SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1164 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1926 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1174 DUP5 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B5 JUMPI PUSH2 0x11B4 DUP2 DUP5 DUP7 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1240 JUMPI PUSH2 0x11F4 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12BF JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x137C PUSH2 0x1150 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x139A PUSH2 0xCFA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E7 SWAP1 PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DA DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1BA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1562 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1559 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1807 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x169E PUSH2 0x1150 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16FB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F8 SWAP2 SWAP1 PUSH2 0x2ED3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x177C JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1729 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x172E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1774 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176B SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1805 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FC SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1831 DUP5 PUSH2 0x1BC3 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1881 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x18E2 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x18D7 JUMPI PUSH2 0x18D6 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x188E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x195E JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A90 JUMPI PUSH0 PUSH2 0x196D DUP5 PUSH2 0x1091 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19EA JUMPI POP PUSH2 0x19E8 DUP2 DUP5 PUSH2 0xEF3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1A2C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A23 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1A8E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AF0 DUP4 DUP4 DUP4 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B64 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5B SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9A SWAP3 SWAP2 SWAP1 PUSH2 0x2F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1BB2 DUP4 DUP4 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x1BBE PUSH0 DUP5 DUP5 DUP5 PUSH2 0x165B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C1F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C5C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1C8B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1C81 JUMPI PUSH2 0x1C80 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CB4 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1CAA JUMPI PUSH2 0x1CA9 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1CD9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CFC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1CF2 JUMPI PUSH2 0x1CF1 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D0B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DCB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1D8C JUMPI POP PUSH2 0x1D8B DUP5 DUP5 PUSH2 0xEF3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1DCA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB2 DUP4 PUSH2 0x1117 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3B SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E50 DUP4 DUP4 PUSH0 PUSH2 0x1169 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EC2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB9 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F20 DUP3 PUSH2 0x1EF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F30 DUP2 PUSH2 0x1F16 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F4B DUP2 PUSH2 0x1F27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F65 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F73 DUP5 DUP3 DUP6 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB7 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FD9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2019 DUP3 PUSH2 0x1FBD JUMP JUMPDEST PUSH2 0x2023 DUP2 DUP6 PUSH2 0x1FC7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2033 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x203C DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x205C PUSH0 DUP7 ADD DUP3 PUSH2 0x1FAE JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2074 DUP3 DUP3 PUSH2 0x200F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2089 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1FAE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x209F DUP4 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20BD DUP3 PUSH2 0x1F7C JUMP JUMPDEST PUSH2 0x20C7 DUP2 DUP6 PUSH2 0x1F86 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x20D9 DUP6 PUSH2 0x1F96 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2114 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x20F5 DUP6 DUP3 PUSH2 0x2094 JUMP JUMPDEST SWAP5 POP PUSH2 0x2100 DUP4 PUSH2 0x20A7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20DC JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x213E DUP2 DUP5 PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x217A DUP2 PUSH2 0x2146 JUMP JUMPDEST DUP2 EQ PUSH2 0x2184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2195 DUP2 PUSH2 0x2171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B0 JUMPI PUSH2 0x21AF PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21BD DUP5 DUP3 DUP6 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21DA DUP2 PUSH2 0x21C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x21D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2213 DUP3 PUSH2 0x1FBD JUMP JUMPDEST PUSH2 0x221D DUP2 DUP6 PUSH2 0x21F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x222D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x2236 DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2259 DUP2 DUP5 PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x226A DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2285 DUP2 PUSH2 0x2261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A0 JUMPI PUSH2 0x229F PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22AD DUP5 DUP3 DUP6 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22BF DUP2 PUSH2 0x1F16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x22B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F4 JUMPI PUSH2 0x22F3 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2301 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2312 DUP6 DUP3 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2333 JUMPI PUSH2 0x2332 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2340 DUP7 DUP3 DUP8 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2351 DUP7 DUP3 DUP8 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2362 DUP7 DUP3 DUP8 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2375 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x238E PUSH0 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23A7 PUSH0 DUP4 ADD DUP7 PUSH2 0x236C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23B9 DUP2 DUP6 PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP PUSH2 0x23C8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x23D9 DUP2 PUSH2 0x21C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23F4 DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2410 JUMPI PUSH2 0x240F PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x241D DUP6 DUP3 DUP7 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x242E DUP6 DUP3 DUP7 ADD PUSH2 0x23E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2476 DUP3 PUSH2 0x1FFF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2495 JUMPI PUSH2 0x2494 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24A7 PUSH2 0x1EE6 JUMP JUMPDEST SWAP1 POP PUSH2 0x24B3 DUP3 DUP3 PUSH2 0x246D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH2 0x24DB DUP3 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2508 PUSH2 0x2503 DUP5 PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0x249E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2524 JUMPI PUSH2 0x2523 PUSH2 0x243C JUMP JUMPDEST JUMPDEST PUSH2 0x252F DUP5 DUP3 DUP6 PUSH2 0x24E8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x254B JUMPI PUSH2 0x254A PUSH2 0x2438 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x255B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x257A JUMPI PUSH2 0x2579 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2597 JUMPI PUSH2 0x2596 PUSH2 0x1EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x25A3 DUP6 DUP3 DUP7 ADD PUSH2 0x2537 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25D8 JUMPI PUSH2 0x25D7 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH2 0x25E1 DUP3 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2600 PUSH2 0x25FB DUP5 PUSH2 0x25BE JUMP JUMPDEST PUSH2 0x249E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x261C JUMPI PUSH2 0x261B PUSH2 0x243C JUMP JUMPDEST JUMPDEST PUSH2 0x2627 DUP5 DUP3 DUP6 PUSH2 0x24E8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2643 JUMPI PUSH2 0x2642 PUSH2 0x2438 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2653 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2673 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2681 DUP8 DUP3 DUP9 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2692 DUP8 DUP3 DUP9 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x26A3 DUP8 DUP3 DUP9 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26C4 JUMPI PUSH2 0x26C3 PUSH2 0x1EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x26D0 DUP8 DUP3 DUP9 ADD PUSH2 0x262F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26F2 JUMPI PUSH2 0x26F1 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26FF DUP6 DUP3 DUP7 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2710 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x273D PUSH2 0x2738 PUSH2 0x2733 DUP5 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x271A JUMP JUMPDEST PUSH2 0x1EF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x274E DUP3 PUSH2 0x2723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275F DUP3 PUSH2 0x2744 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276F DUP2 PUSH2 0x2755 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2788 PUSH0 DUP4 ADD DUP5 PUSH2 0x2766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x27FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2812 JUMPI PUSH2 0x2811 PUSH2 0x27BB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x282B PUSH0 DUP4 ADD DUP7 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2838 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x236C JUMP JUMPDEST PUSH2 0x2845 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x50726F6475637420646F6573206E6F7420657869737400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2881 PUSH1 0x16 DUP4 PUSH2 0x21F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x288C DUP3 PUSH2 0x284D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28AE DUP2 PUSH2 0x2875 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28EC DUP3 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x28F7 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2905 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x291C JUMPI PUSH2 0x291B PUSH2 0x28B5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2936 PUSH0 DUP4 ADD DUP7 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2943 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2950 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2966 DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x298E DUP5 DUP3 DUP6 ADD PUSH2 0x2958 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29CB PUSH1 0x15 DUP4 PUSH2 0x21F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D6 DUP3 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29F8 DUP2 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A12 PUSH0 DUP4 ADD DUP6 PUSH2 0x236C JUMP JUMPDEST PUSH2 0x2A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A30 DUP3 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2A62 JUMPI PUSH2 0x2A61 PUSH2 0x28B5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2AC9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0x2AD3 DUP7 DUP4 PUSH2 0x2A8E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B05 PUSH2 0x2B00 PUSH2 0x2AFB DUP5 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x271A JUMP JUMPDEST PUSH2 0x1FA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B1E DUP4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x2B32 PUSH2 0x2B2A DUP3 PUSH2 0x2B0C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A9A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2B46 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x2B51 DUP2 DUP5 DUP5 PUSH2 0x2B15 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B74 JUMPI PUSH2 0x2B69 PUSH0 DUP3 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2BB9 JUMPI PUSH2 0x2B8A DUP2 PUSH2 0x2A6D JUMP JUMPDEST PUSH2 0x2B93 DUP5 PUSH2 0x2A7F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2BA2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2BB6 PUSH2 0x2BAE DUP6 PUSH2 0x2A7F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B56 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2BBE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BF1 DUP4 DUP4 PUSH2 0x2BCA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C0A DUP3 PUSH2 0x1FBD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C23 JUMPI PUSH2 0x2C22 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST PUSH2 0x2C2D DUP3 SLOAD PUSH2 0x27E8 JUMP JUMPDEST PUSH2 0x2C38 DUP3 DUP3 DUP6 PUSH2 0x2B78 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C69 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2C57 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C61 DUP6 DUP3 PUSH2 0x2BE6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C77 DUP7 PUSH2 0x2A6D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C9E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C79 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2CBB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2CB7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BCA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CE4 DUP3 PUSH2 0x1FBD JUMP JUMPDEST PUSH2 0x2CEE DUP2 DUP6 PUSH2 0x2CD0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D15 DUP3 DUP6 PUSH2 0x2CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2D21 DUP3 DUP5 PUSH2 0x2CDA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D87 PUSH1 0x26 DUP4 PUSH2 0x21F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D92 DUP3 PUSH2 0x2D2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DB4 DUP2 PUSH2 0x2D7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DEF PUSH1 0x20 DUP4 PUSH2 0x21F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DFA DUP3 PUSH2 0x2DBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E1C DUP2 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E47 DUP3 PUSH2 0x2E23 JUMP JUMPDEST PUSH2 0x2E51 DUP2 DUP6 PUSH2 0x2E2D JUMP JUMPDEST SWAP4 POP PUSH2 0x2E61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x2E6A DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E88 PUSH0 DUP4 ADD DUP8 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2E95 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2EA2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x236C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2EB4 DUP2 DUP5 PUSH2 0x2E3D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2ECD DUP2 PUSH2 0x2171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE8 JUMPI PUSH2 0x2EE7 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EF5 DUP5 DUP3 DUP6 ADD PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F3E PUSH0 DUP4 ADD DUP6 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x2F4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x236C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SLT 0xE6 ADDRESS 0xDB 0xAE 0xE6 KECCAK256 SAR 0xCC 0xA6 GASLIMIT POP PUSH11 0xE7BA042529C523195945BC SWAP9 SWAP5 SWAP1 0x4E PUSH31 0xCA8864736F6C63430008160033000000000000000000000000000000000000 ",
							"sourceMap": "292:1979:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:466;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;770:28:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;661:43:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1131:663;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;927:196:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;711:50:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;340:19:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1802:466;1870:16;1899:36;1938:13;:19;1952:4;1938:19;;;;;;;;;;;;;;;1899:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:28;2013:19;:26;1999:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1968:72;;2058:9;2053:177;2077:19;:26;2073:1;:30;2053:177;;;2125:17;2145:19;2165:1;2145:22;;;;;;;;:::i;:::-;;;;;;;;2125:42;;2199:8;:19;2208:9;2199:19;;;;;;;;;;;2182:36;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;2194:1;2182:14;;;;;;;;:::i;:::-;;;;;;;:36;;;;2110:120;2105:3;;;;;;;2053:177;;;;2249:11;2242:18;;;;1802:466;;;:::o;1561:300:3:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;770:28:14:-;;;;:::o;2185:118:3:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;661:43:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1131:663::-;1191:23;1217:8;:20;1226:10;1217:20;;;;;;;;;;;1191:46;;1270:1;1256:7;:10;;;:15;1248:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1317:5;;;;;;;;;;;:18;;;1336:10;1356:4;1377:6;1363:7;:13;;;:20;;;;:::i;:::-;1317:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1309:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;1511:14;1528:18;:8;:16;:18::i;:::-;1511:35;;1557:29;1567:10;1579:6;1557:9;:29::i;:::-;1599:20;:8;:18;:20::i;:::-;1677:13;:25;1691:10;1677:25;;;;;;;;;;;;;;;1708:10;1677:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:10;1737:49;;;1760:10;1772:7;:13;;;1737:49;;;;;;;:::i;:::-;;;;;;;;1180:614;;1131:663;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2518:93:3:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;927:196:14:-;1094:13:0;:11;:13::i;:::-;1014:17:14::1;1034:13;;:15;;;;;;;;;:::i;:::-;;;;;1014:35;;1082:33;;;;;;;;1090:9;1082:33;;;;1101:5;1082:33;;;;1108:6;1082:33;;::::0;1060:8:::1;:19;1069:9;1060:19;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1003:120;927:196:::0;;:::o;4985:208:3:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;711:50:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3928:153:3:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;340:19:14:-;;;;;;;;;;;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:3:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;14418:120:3:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;827:112:8:-;892:7;918;:14;;;911:21;;827:112;;;:::o;10633:100:3:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;945:123:8:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;15591:312:3:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:9:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:3:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;12214:916:12:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:3:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:139::-;1268:6;1302:5;1296:12;1286:22;;1176:139;;;:::o;1321:209::-;1445:11;1479:6;1474:3;1467:19;1519:4;1514:3;1510:14;1495:29;;1321:209;;;;:::o;1536:157::-;1628:4;1651:3;1643:11;;1681:4;1676:3;1672:14;1664:22;;1536:157;;;:::o;1699:77::-;1736:7;1765:5;1754:16;;1699:77;;;:::o;1782:108::-;1859:24;1877:5;1859:24;:::i;:::-;1854:3;1847:37;1782:108;;:::o;1896:99::-;1948:6;1982:5;1976:12;1966:22;;1896:99;;;:::o;2001:159::-;2075:11;2109:6;2104:3;2097:19;2149:4;2144:3;2140:14;2125:29;;2001:159;;;;:::o;2166:246::-;2247:1;2257:113;2271:6;2268:1;2265:13;2257:113;;;2356:1;2351:3;2347:11;2341:18;2337:1;2332:3;2328:11;2321:39;2293:2;2290:1;2286:10;2281:15;;2257:113;;;2404:1;2395:6;2390:3;2386:16;2379:27;2228:184;2166:246;;;:::o;2418:102::-;2459:6;2510:2;2506:7;2501:2;2494:5;2490:14;2486:28;2476:38;;2418:102;;;:::o;2526:357::-;2604:3;2632:39;2665:5;2632:39;:::i;:::-;2687:61;2741:6;2736:3;2687:61;:::i;:::-;2680:68;;2757:65;2815:6;2810:3;2803:4;2796:5;2792:16;2757:65;:::i;:::-;2847:29;2869:6;2847:29;:::i;:::-;2842:3;2838:39;2831:46;;2608:275;2526:357;;;;:::o;2955:769::-;3064:3;3100:4;3095:3;3091:14;3185:4;3178:5;3174:16;3168:23;3204:63;3261:4;3256:3;3252:14;3238:12;3204:63;:::i;:::-;3115:162;3359:4;3352:5;3348:16;3342:23;3412:3;3406:4;3402:14;3395:4;3390:3;3386:14;3379:38;3438:73;3506:4;3492:12;3438:73;:::i;:::-;3430:81;;3287:235;3605:4;3598:5;3594:16;3588:23;3624:63;3681:4;3676:3;3672:14;3658:12;3624:63;:::i;:::-;3532:165;3714:4;3707:11;;3069:655;2955:769;;;;:::o;3730:256::-;3849:10;3884:96;3976:3;3968:6;3884:96;:::i;:::-;3870:110;;3730:256;;;;:::o;3992:138::-;4087:4;4119;4114:3;4110:14;4102:22;;3992:138;;;:::o;4206:1111::-;4375:3;4404:79;4477:5;4404:79;:::i;:::-;4499:111;4603:6;4598:3;4499:111;:::i;:::-;4492:118;;4636:3;4681:4;4673:6;4669:17;4664:3;4660:27;4711:81;4786:5;4711:81;:::i;:::-;4815:7;4846:1;4831:441;4856:6;4853:1;4850:13;4831:441;;;4927:9;4921:4;4917:20;4912:3;4905:33;4978:6;4972:13;5006:114;5115:4;5100:13;5006:114;:::i;:::-;4998:122;;5143:85;5221:6;5143:85;:::i;:::-;5133:95;;5257:4;5252:3;5248:14;5241:21;;4891:381;4878:1;4875;4871:9;4866:14;;4831:441;;;4835:14;5288:4;5281:11;;5308:3;5301:10;;4380:937;;;;;4206:1111;;;;:::o;5323:473::-;5516:4;5554:2;5543:9;5539:18;5531:26;;5603:9;5597:4;5593:20;5589:1;5578:9;5574:17;5567:47;5631:158;5784:4;5775:6;5631:158;:::i;:::-;5623:166;;5323:473;;;;:::o;5802:149::-;5838:7;5878:66;5871:5;5867:78;5856:89;;5802:149;;;:::o;5957:120::-;6029:23;6046:5;6029:23;:::i;:::-;6022:5;6019:34;6009:62;;6067:1;6064;6057:12;6009:62;5957:120;:::o;6083:137::-;6128:5;6166:6;6153:20;6144:29;;6182:32;6208:5;6182:32;:::i;:::-;6083:137;;;;:::o;6226:327::-;6284:6;6333:2;6321:9;6312:7;6308:23;6304:32;6301:119;;;6339:79;;:::i;:::-;6301:119;6459:1;6484:52;6528:7;6519:6;6508:9;6504:22;6484:52;:::i;:::-;6474:62;;6430:116;6226:327;;;;:::o;6559:90::-;6593:7;6636:5;6629:13;6622:21;6611:32;;6559:90;;;:::o;6655:109::-;6736:21;6751:5;6736:21;:::i;:::-;6731:3;6724:34;6655:109;;:::o;6770:210::-;6857:4;6895:2;6884:9;6880:18;6872:26;;6908:65;6970:1;6959:9;6955:17;6946:6;6908:65;:::i;:::-;6770:210;;;;:::o;6986:169::-;7070:11;7104:6;7099:3;7092:19;7144:4;7139:3;7135:14;7120:29;;6986:169;;;;:::o;7161:377::-;7249:3;7277:39;7310:5;7277:39;:::i;:::-;7332:71;7396:6;7391:3;7332:71;:::i;:::-;7325:78;;7412:65;7470:6;7465:3;7458:4;7451:5;7447:16;7412:65;:::i;:::-;7502:29;7524:6;7502:29;:::i;:::-;7497:3;7493:39;7486:46;;7253:285;7161:377;;;;:::o;7544:313::-;7657:4;7695:2;7684:9;7680:18;7672:26;;7744:9;7738:4;7734:20;7730:1;7719:9;7715:17;7708:47;7772:78;7845:4;7836:6;7772:78;:::i;:::-;7764:86;;7544:313;;;;:::o;7863:122::-;7936:24;7954:5;7936:24;:::i;:::-;7929:5;7926:35;7916:63;;7975:1;7972;7965:12;7916:63;7863:122;:::o;7991:139::-;8037:5;8075:6;8062:20;8053:29;;8091:33;8118:5;8091:33;:::i;:::-;7991:139;;;;:::o;8136:329::-;8195:6;8244:2;8232:9;8223:7;8219:23;8215:32;8212:119;;;8250:79;;:::i;:::-;8212:119;8370:1;8395:53;8440:7;8431:6;8420:9;8416:22;8395:53;:::i;:::-;8385:63;;8341:117;8136:329;;;;:::o;8471:118::-;8558:24;8576:5;8558:24;:::i;:::-;8553:3;8546:37;8471:118;;:::o;8595:222::-;8688:4;8726:2;8715:9;8711:18;8703:26;;8739:71;8807:1;8796:9;8792:17;8783:6;8739:71;:::i;:::-;8595:222;;;;:::o;8823:474::-;8891:6;8899;8948:2;8936:9;8927:7;8923:23;8919:32;8916:119;;;8954:79;;:::i;:::-;8916:119;9074:1;9099:53;9144:7;9135:6;9124:9;9120:22;9099:53;:::i;:::-;9089:63;;9045:117;9201:2;9227:53;9272:7;9263:6;9252:9;9248:22;9227:53;:::i;:::-;9217:63;;9172:118;8823:474;;;;;:::o;9303:619::-;9380:6;9388;9396;9445:2;9433:9;9424:7;9420:23;9416:32;9413:119;;;9451:79;;:::i;:::-;9413:119;9571:1;9596:53;9641:7;9632:6;9621:9;9617:22;9596:53;:::i;:::-;9586:63;;9542:117;9698:2;9724:53;9769:7;9760:6;9749:9;9745:22;9724:53;:::i;:::-;9714:63;;9669:118;9826:2;9852:53;9897:7;9888:6;9877:9;9873:22;9852:53;:::i;:::-;9842:63;;9797:118;9303:619;;;;;:::o;9928:118::-;10015:24;10033:5;10015:24;:::i;:::-;10010:3;10003:37;9928:118;;:::o;10052:222::-;10145:4;10183:2;10172:9;10168:18;10160:26;;10196:71;10264:1;10253:9;10249:17;10240:6;10196:71;:::i;:::-;10052:222;;;;:::o;10280:533::-;10449:4;10487:2;10476:9;10472:18;10464:26;;10500:71;10568:1;10557:9;10553:17;10544:6;10500:71;:::i;:::-;10618:9;10612:4;10608:20;10603:2;10592:9;10588:18;10581:48;10646:78;10719:4;10710:6;10646:78;:::i;:::-;10638:86;;10734:72;10802:2;10791:9;10787:18;10778:6;10734:72;:::i;:::-;10280:533;;;;;;:::o;10819:116::-;10889:21;10904:5;10889:21;:::i;:::-;10882:5;10879:32;10869:60;;10925:1;10922;10915:12;10869:60;10819:116;:::o;10941:133::-;10984:5;11022:6;11009:20;11000:29;;11038:30;11062:5;11038:30;:::i;:::-;10941:133;;;;:::o;11080:468::-;11145:6;11153;11202:2;11190:9;11181:7;11177:23;11173:32;11170:119;;;11208:79;;:::i;:::-;11170:119;11328:1;11353:53;11398:7;11389:6;11378:9;11374:22;11353:53;:::i;:::-;11343:63;;11299:117;11455:2;11481:50;11523:7;11514:6;11503:9;11499:22;11481:50;:::i;:::-;11471:60;;11426:115;11080:468;;;;;:::o;11554:117::-;11663:1;11660;11653:12;11677:117;11786:1;11783;11776:12;11800:180;11848:77;11845:1;11838:88;11945:4;11942:1;11935:15;11969:4;11966:1;11959:15;11986:281;12069:27;12091:4;12069:27;:::i;:::-;12061:6;12057:40;12199:6;12187:10;12184:22;12163:18;12151:10;12148:34;12145:62;12142:88;;;12210:18;;:::i;:::-;12142:88;12250:10;12246:2;12239:22;12029:238;11986:281;;:::o;12273:129::-;12307:6;12334:20;;:::i;:::-;12324:30;;12363:33;12391:4;12383:6;12363:33;:::i;:::-;12273:129;;;:::o;12408:308::-;12470:4;12560:18;12552:6;12549:30;12546:56;;;12582:18;;:::i;:::-;12546:56;12620:29;12642:6;12620:29;:::i;:::-;12612:37;;12704:4;12698;12694:15;12686:23;;12408:308;;;:::o;12722:146::-;12819:6;12814:3;12809;12796:30;12860:1;12851:6;12846:3;12842:16;12835:27;12722:146;;;:::o;12874:425::-;12952:5;12977:66;12993:49;13035:6;12993:49;:::i;:::-;12977:66;:::i;:::-;12968:75;;13066:6;13059:5;13052:21;13104:4;13097:5;13093:16;13142:3;13133:6;13128:3;13124:16;13121:25;13118:112;;;13149:79;;:::i;:::-;13118:112;13239:54;13286:6;13281:3;13276;13239:54;:::i;:::-;12958:341;12874:425;;;;;:::o;13319:340::-;13375:5;13424:3;13417:4;13409:6;13405:17;13401:27;13391:122;;13432:79;;:::i;:::-;13391:122;13549:6;13536:20;13574:79;13649:3;13641:6;13634:4;13626:6;13622:17;13574:79;:::i;:::-;13565:88;;13381:278;13319:340;;;;:::o;13665:654::-;13743:6;13751;13800:2;13788:9;13779:7;13775:23;13771:32;13768:119;;;13806:79;;:::i;:::-;13768:119;13954:1;13943:9;13939:17;13926:31;13984:18;13976:6;13973:30;13970:117;;;14006:79;;:::i;:::-;13970:117;14111:63;14166:7;14157:6;14146:9;14142:22;14111:63;:::i;:::-;14101:73;;13897:287;14223:2;14249:53;14294:7;14285:6;14274:9;14270:22;14249:53;:::i;:::-;14239:63;;14194:118;13665:654;;;;;:::o;14325:307::-;14386:4;14476:18;14468:6;14465:30;14462:56;;;14498:18;;:::i;:::-;14462:56;14536:29;14558:6;14536:29;:::i;:::-;14528:37;;14620:4;14614;14610:15;14602:23;;14325:307;;;:::o;14638:423::-;14715:5;14740:65;14756:48;14797:6;14756:48;:::i;:::-;14740:65;:::i;:::-;14731:74;;14828:6;14821:5;14814:21;14866:4;14859:5;14855:16;14904:3;14895:6;14890:3;14886:16;14883:25;14880:112;;;14911:79;;:::i;:::-;14880:112;15001:54;15048:6;15043:3;15038;15001:54;:::i;:::-;14721:340;14638:423;;;;;:::o;15080:338::-;15135:5;15184:3;15177:4;15169:6;15165:17;15161:27;15151:122;;15192:79;;:::i;:::-;15151:122;15309:6;15296:20;15334:78;15408:3;15400:6;15393:4;15385:6;15381:17;15334:78;:::i;:::-;15325:87;;15141:277;15080:338;;;;:::o;15424:943::-;15519:6;15527;15535;15543;15592:3;15580:9;15571:7;15567:23;15563:33;15560:120;;;15599:79;;:::i;:::-;15560:120;15719:1;15744:53;15789:7;15780:6;15769:9;15765:22;15744:53;:::i;:::-;15734:63;;15690:117;15846:2;15872:53;15917:7;15908:6;15897:9;15893:22;15872:53;:::i;:::-;15862:63;;15817:118;15974:2;16000:53;16045:7;16036:6;16025:9;16021:22;16000:53;:::i;:::-;15990:63;;15945:118;16130:2;16119:9;16115:18;16102:32;16161:18;16153:6;16150:30;16147:117;;;16183:79;;:::i;:::-;16147:117;16288:62;16342:7;16333:6;16322:9;16318:22;16288:62;:::i;:::-;16278:72;;16073:287;15424:943;;;;;;;:::o;16373:474::-;16441:6;16449;16498:2;16486:9;16477:7;16473:23;16469:32;16466:119;;;16504:79;;:::i;:::-;16466:119;16624:1;16649:53;16694:7;16685:6;16674:9;16670:22;16649:53;:::i;:::-;16639:63;;16595:117;16751:2;16777:53;16822:7;16813:6;16802:9;16798:22;16777:53;:::i;:::-;16767:63;;16722:118;16373:474;;;;;:::o;16853:60::-;16881:3;16902:5;16895:12;;16853:60;;;:::o;16919:142::-;16969:9;17002:53;17020:34;17029:24;17047:5;17029:24;:::i;:::-;17020:34;:::i;:::-;17002:53;:::i;:::-;16989:66;;16919:142;;;:::o;17067:126::-;17117:9;17150:37;17181:5;17150:37;:::i;:::-;17137:50;;17067:126;;;:::o;17199:140::-;17263:9;17296:37;17327:5;17296:37;:::i;:::-;17283:50;;17199:140;;;:::o;17345:159::-;17446:51;17491:5;17446:51;:::i;:::-;17441:3;17434:64;17345:159;;:::o;17510:250::-;17617:4;17655:2;17644:9;17640:18;17632:26;;17668:85;17750:1;17739:9;17735:17;17726:6;17668:85;:::i;:::-;17510:250;;;;:::o;17766:180::-;17814:77;17811:1;17804:88;17911:4;17908:1;17901:15;17935:4;17932:1;17925:15;17952:180;18000:77;17997:1;17990:88;18097:4;18094:1;18087:15;18121:4;18118:1;18111:15;18138:320;18182:6;18219:1;18213:4;18209:12;18199:22;;18266:1;18260:4;18256:12;18287:18;18277:81;;18343:4;18335:6;18331:17;18321:27;;18277:81;18405:2;18397:6;18394:14;18374:18;18371:38;18368:84;;18424:18;;:::i;:::-;18368:84;18189:269;18138:320;;;:::o;18464:442::-;18613:4;18651:2;18640:9;18636:18;18628:26;;18664:71;18732:1;18721:9;18717:17;18708:6;18664:71;:::i;:::-;18745:72;18813:2;18802:9;18798:18;18789:6;18745:72;:::i;:::-;18827;18895:2;18884:9;18880:18;18871:6;18827:72;:::i;:::-;18464:442;;;;;;:::o;18912:172::-;19052:24;19048:1;19040:6;19036:14;19029:48;18912:172;:::o;19090:366::-;19232:3;19253:67;19317:2;19312:3;19253:67;:::i;:::-;19246:74;;19329:93;19418:3;19329:93;:::i;:::-;19447:2;19442:3;19438:12;19431:19;;19090:366;;;:::o;19462:419::-;19628:4;19666:2;19655:9;19651:18;19643:26;;19715:9;19709:4;19705:20;19701:1;19690:9;19686:17;19679:47;19743:131;19869:4;19743:131;:::i;:::-;19735:139;;19462:419;;;:::o;19887:180::-;19935:77;19932:1;19925:88;20032:4;20029:1;20022:15;20056:4;20053:1;20046:15;20073:410;20113:7;20136:20;20154:1;20136:20;:::i;:::-;20131:25;;20170:20;20188:1;20170:20;:::i;:::-;20165:25;;20225:1;20222;20218:9;20247:30;20265:11;20247:30;:::i;:::-;20236:41;;20426:1;20417:7;20413:15;20410:1;20407:22;20387:1;20380:9;20360:83;20337:139;;20456:18;;:::i;:::-;20337:139;20121:362;20073:410;;;;:::o;20489:442::-;20638:4;20676:2;20665:9;20661:18;20653:26;;20689:71;20757:1;20746:9;20742:17;20733:6;20689:71;:::i;:::-;20770:72;20838:2;20827:9;20823:18;20814:6;20770:72;:::i;:::-;20852;20920:2;20909:9;20905:18;20896:6;20852:72;:::i;:::-;20489:442;;;;;;:::o;20937:137::-;20991:5;21022:6;21016:13;21007:22;;21038:30;21062:5;21038:30;:::i;:::-;20937:137;;;;:::o;21080:345::-;21147:6;21196:2;21184:9;21175:7;21171:23;21167:32;21164:119;;;21202:79;;:::i;:::-;21164:119;21322:1;21347:61;21400:7;21391:6;21380:9;21376:22;21347:61;:::i;:::-;21337:71;;21293:125;21080:345;;;;:::o;21431:171::-;21571:23;21567:1;21559:6;21555:14;21548:47;21431:171;:::o;21608:366::-;21750:3;21771:67;21835:2;21830:3;21771:67;:::i;:::-;21764:74;;21847:93;21936:3;21847:93;:::i;:::-;21965:2;21960:3;21956:12;21949:19;;21608:366;;;:::o;21980:419::-;22146:4;22184:2;22173:9;22169:18;22161:26;;22233:9;22227:4;22223:20;22219:1;22208:9;22204:17;22197:47;22261:131;22387:4;22261:131;:::i;:::-;22253:139;;21980:419;;;:::o;22405:332::-;22526:4;22564:2;22553:9;22549:18;22541:26;;22577:71;22645:1;22634:9;22630:17;22621:6;22577:71;:::i;:::-;22658:72;22726:2;22715:9;22711:18;22702:6;22658:72;:::i;:::-;22405:332;;;;;:::o;22743:233::-;22782:3;22805:24;22823:5;22805:24;:::i;:::-;22796:33;;22851:66;22844:5;22841:77;22838:103;;22921:18;;:::i;:::-;22838:103;22968:1;22961:5;22957:13;22950:20;;22743:233;;;:::o;22982:141::-;23031:4;23054:3;23046:11;;23077:3;23074:1;23067:14;23111:4;23108:1;23098:18;23090:26;;22982:141;;;:::o;23129:93::-;23166:6;23213:2;23208;23201:5;23197:14;23193:23;23183:33;;23129:93;;;:::o;23228:107::-;23272:8;23322:5;23316:4;23312:16;23291:37;;23228:107;;;;:::o;23341:393::-;23410:6;23460:1;23448:10;23444:18;23483:97;23513:66;23502:9;23483:97;:::i;:::-;23601:39;23631:8;23620:9;23601:39;:::i;:::-;23589:51;;23673:4;23669:9;23662:5;23658:21;23649:30;;23722:4;23712:8;23708:19;23701:5;23698:30;23688:40;;23417:317;;23341:393;;;;;:::o;23740:142::-;23790:9;23823:53;23841:34;23850:24;23868:5;23850:24;:::i;:::-;23841:34;:::i;:::-;23823:53;:::i;:::-;23810:66;;23740:142;;;:::o;23888:75::-;23931:3;23952:5;23945:12;;23888:75;;;:::o;23969:269::-;24079:39;24110:7;24079:39;:::i;:::-;24140:91;24189:41;24213:16;24189:41;:::i;:::-;24181:6;24174:4;24168:11;24140:91;:::i;:::-;24134:4;24127:105;24045:193;23969:269;;;:::o;24244:73::-;24289:3;24244:73;:::o;24323:189::-;24400:32;;:::i;:::-;24441:65;24499:6;24491;24485:4;24441:65;:::i;:::-;24376:136;24323:189;;:::o;24518:186::-;24578:120;24595:3;24588:5;24585:14;24578:120;;;24649:39;24686:1;24679:5;24649:39;:::i;:::-;24622:1;24615:5;24611:13;24602:22;;24578:120;;;24518:186;;:::o;24710:543::-;24811:2;24806:3;24803:11;24800:446;;;24845:38;24877:5;24845:38;:::i;:::-;24929:29;24947:10;24929:29;:::i;:::-;24919:8;24915:44;25112:2;25100:10;25097:18;25094:49;;;25133:8;25118:23;;25094:49;25156:80;25212:22;25230:3;25212:22;:::i;:::-;25202:8;25198:37;25185:11;25156:80;:::i;:::-;24815:431;;24800:446;24710:543;;;:::o;25259:117::-;25313:8;25363:5;25357:4;25353:16;25332:37;;25259:117;;;;:::o;25382:169::-;25426:6;25459:51;25507:1;25503:6;25495:5;25492:1;25488:13;25459:51;:::i;:::-;25455:56;25540:4;25534;25530:15;25520:25;;25433:118;25382:169;;;;:::o;25556:295::-;25632:4;25778:29;25803:3;25797:4;25778:29;:::i;:::-;25770:37;;25840:3;25837:1;25833:11;25827:4;25824:21;25816:29;;25556:295;;;;:::o;25856:1395::-;25973:37;26006:3;25973:37;:::i;:::-;26075:18;26067:6;26064:30;26061:56;;;26097:18;;:::i;:::-;26061:56;26141:38;26173:4;26167:11;26141:38;:::i;:::-;26226:67;26286:6;26278;26272:4;26226:67;:::i;:::-;26320:1;26344:4;26331:17;;26376:2;26368:6;26365:14;26393:1;26388:618;;;;27050:1;27067:6;27064:77;;;27116:9;27111:3;27107:19;27101:26;27092:35;;27064:77;27167:67;27227:6;27220:5;27167:67;:::i;:::-;27161:4;27154:81;27023:222;26358:887;;26388:618;26440:4;26436:9;26428:6;26424:22;26474:37;26506:4;26474:37;:::i;:::-;26533:1;26547:208;26561:7;26558:1;26555:14;26547:208;;;26640:9;26635:3;26631:19;26625:26;26617:6;26610:42;26691:1;26683:6;26679:14;26669:24;;26738:2;26727:9;26723:18;26710:31;;26584:4;26581:1;26577:12;26572:17;;26547:208;;;26783:6;26774:7;26771:19;26768:179;;;26841:9;26836:3;26832:19;26826:26;26884:48;26926:4;26918:6;26914:17;26903:9;26884:48;:::i;:::-;26876:6;26869:64;26791:156;26768:179;26993:1;26989;26981:6;26977:14;26973:22;26967:4;26960:36;26395:611;;;26358:887;;25948:1303;;;25856:1395;;:::o;27257:148::-;27359:11;27396:3;27381:18;;27257:148;;;;:::o;27411:390::-;27517:3;27545:39;27578:5;27545:39;:::i;:::-;27600:89;27682:6;27677:3;27600:89;:::i;:::-;27593:96;;27698:65;27756:6;27751:3;27744:4;27737:5;27733:16;27698:65;:::i;:::-;27788:6;27783:3;27779:16;27772:23;;27521:280;27411:390;;;;:::o;27807:435::-;27987:3;28009:95;28100:3;28091:6;28009:95;:::i;:::-;28002:102;;28121:95;28212:3;28203:6;28121:95;:::i;:::-;28114:102;;28233:3;28226:10;;27807:435;;;;;:::o;28248:225::-;28388:34;28384:1;28376:6;28372:14;28365:58;28457:8;28452:2;28444:6;28440:15;28433:33;28248:225;:::o;28479:366::-;28621:3;28642:67;28706:2;28701:3;28642:67;:::i;:::-;28635:74;;28718:93;28807:3;28718:93;:::i;:::-;28836:2;28831:3;28827:12;28820:19;;28479:366;;;:::o;28851:419::-;29017:4;29055:2;29044:9;29040:18;29032:26;;29104:9;29098:4;29094:20;29090:1;29079:9;29075:17;29068:47;29132:131;29258:4;29132:131;:::i;:::-;29124:139;;28851:419;;;:::o;29276:182::-;29416:34;29412:1;29404:6;29400:14;29393:58;29276:182;:::o;29464:366::-;29606:3;29627:67;29691:2;29686:3;29627:67;:::i;:::-;29620:74;;29703:93;29792:3;29703:93;:::i;:::-;29821:2;29816:3;29812:12;29805:19;;29464:366;;;:::o;29836:419::-;30002:4;30040:2;30029:9;30025:18;30017:26;;30089:9;30083:4;30079:20;30075:1;30064:9;30060:17;30053:47;30117:131;30243:4;30117:131;:::i;:::-;30109:139;;29836:419;;;:::o;30261:98::-;30312:6;30346:5;30340:12;30330:22;;30261:98;;;:::o;30365:168::-;30448:11;30482:6;30477:3;30470:19;30522:4;30517:3;30513:14;30498:29;;30365:168;;;;:::o;30539:373::-;30625:3;30653:38;30685:5;30653:38;:::i;:::-;30707:70;30770:6;30765:3;30707:70;:::i;:::-;30700:77;;30786:65;30844:6;30839:3;30832:4;30825:5;30821:16;30786:65;:::i;:::-;30876:29;30898:6;30876:29;:::i;:::-;30871:3;30867:39;30860:46;;30629:283;30539:373;;;;:::o;30918:640::-;31113:4;31151:3;31140:9;31136:19;31128:27;;31165:71;31233:1;31222:9;31218:17;31209:6;31165:71;:::i;:::-;31246:72;31314:2;31303:9;31299:18;31290:6;31246:72;:::i;:::-;31328;31396:2;31385:9;31381:18;31372:6;31328:72;:::i;:::-;31447:9;31441:4;31437:20;31432:2;31421:9;31417:18;31410:48;31475:76;31546:4;31537:6;31475:76;:::i;:::-;31467:84;;30918:640;;;;;;;:::o;31564:141::-;31620:5;31651:6;31645:13;31636:22;;31667:32;31693:5;31667:32;:::i;:::-;31564:141;;;;:::o;31711:349::-;31780:6;31829:2;31817:9;31808:7;31804:23;31800:32;31797:119;;;31835:79;;:::i;:::-;31797:119;31955:1;31980:63;32035:7;32026:6;32015:9;32011:22;31980:63;:::i;:::-;31970:73;;31926:127;31711:349;;;;:::o;32066:180::-;32114:77;32111:1;32104:88;32211:4;32208:1;32201:15;32235:4;32232:1;32225:15;32252:332;32373:4;32411:2;32400:9;32396:18;32388:26;;32424:71;32492:1;32481:9;32477:17;32468:6;32424:71;:::i;:::-;32505:72;32573:2;32562:9;32558:18;32549:6;32505:72;:::i;:::-;32252:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2433600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addProduct(string,uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"buyProduct(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"getUserProductDetails(address)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"nextProductId()": "2492",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"products(uint256)": "infinite",
								"renounceOwnership()": "30523",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "809",
								"symbol()": "infinite",
								"token()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30841",
								"userPurchases(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 2271,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 919,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 919,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 919,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 919,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 919,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 807,
									"end": 919,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 807,
									"end": 919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 807,
									"end": 919,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "50726F6475637442696C6C000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "50424C0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 897,
									"end": 910,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 882,
									"end": 887,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 882,
									"end": 887,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 882,
									"end": 911,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 807,
									"end": 919,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "113"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 15,
									"value": "113"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 2271,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d12e630dbaee6201dcca645506ae7ba042529c523195945bc9894904e7eca8864736f6c63430008160033",
									".code": [
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "7ACC0B20"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "C87B56DD"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "CF2C0334"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "FC0C546A"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "7ACC0B20"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "8642269E"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "B15247D9"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "4DE91A63"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "19D2FBF"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "81812FC"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 2271,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 1802,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1802,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1802,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 770,
											"end": 798,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 770,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 770,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 661,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 661,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 661,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1131,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 1131,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 927,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 927,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 711,
											"end": 761,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 711,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 711,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 711,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 359,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 340,
											"end": 359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 340,
											"end": 359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 1886,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1951,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1956,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2039,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 1999,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 1999,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2040,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1968,
											"end": 2040,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1968,
											"end": 2040,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2077,
											"end": 2096,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2077,
											"end": 2103,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2103,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2164,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 2145,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "tag",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2167,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2125,
											"end": 2167,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2125,
											"end": 2167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2207,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2218,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 2182,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 2182,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 2182,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2249,
											"end": 2260,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2260,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 2268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 770,
											"end": 798,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 770,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 661,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 661,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 661,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1191,
											"end": 1214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1225,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1236,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1191,
											"end": 1237,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1191,
											"end": 1237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1263,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1266,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1266,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1266,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 1248,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 1336,
											"end": 1346,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1356,
											"end": 1360,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1377,
											"end": 1383,
											"name": "PUSH",
											"source": 14,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1376,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1363,
											"end": 1376,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1376,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 1363,
											"end": 1383,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 1363,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1363,
											"end": 1383,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 1363,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 1317,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 1317,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 1317,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 1309,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 1309,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1511,
											"end": 1525,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 1528,
											"end": 1536,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1528,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 1528,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1546,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 1528,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1511,
											"end": 1546,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1511,
											"end": 1546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1557,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 1567,
											"end": 1577,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1557,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 1557,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1557,
											"end": 1586,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 1557,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1599,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 1599,
											"end": 1607,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 1599,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1599,
											"end": 1619,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 1599,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1690,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1701,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1708,
											"end": 1718,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1719,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1748,
											"end": 1758,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "PUSH",
											"source": 14,
											"value": "52E9B4B2677873F4A0E6AC637221C8E8CFD2149ACCD54695CB8FDAF9491DDECC"
										},
										{
											"begin": 1760,
											"end": 1770,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1785,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1772,
											"end": 1785,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1785,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 1737,
											"end": 1786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "tag",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1786,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1794,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1794,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 1034,
											"end": 1047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 1034,
											"end": 1049,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1014,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1014,
											"end": 1049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1090,
											"end": 1099,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1101,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1108,
											"end": 1114,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1078,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1079,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 1060,
											"end": 1115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1003,
											"end": 1123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 927,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 711,
											"end": 761,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "tag",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 711,
											"end": 761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 359,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 340,
											"end": 359,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 340,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 9,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "131"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1315,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 1176,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1307,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1315,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1315,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1315,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1530,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 1321,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1474,
											"end": 1477,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1467,
											"end": 1486,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1517,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1510,
											"end": 1524,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1524,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1524,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1530,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1530,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1530,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1530,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1536,
											"end": 1693,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 1536,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1632,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1654,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1643,
											"end": 1654,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1643,
											"end": 1654,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1681,
											"end": 1685,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1676,
											"end": 1679,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1672,
											"end": 1686,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1664,
											"end": 1686,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1664,
											"end": 1686,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1536,
											"end": 1693,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1536,
											"end": 1693,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1536,
											"end": 1693,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1536,
											"end": 1693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1770,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1754,
											"end": 1770,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1754,
											"end": 1770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1699,
											"end": 1776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1782,
											"end": 1890,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 1782,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1859,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1859,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 1859,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1859,
											"end": 1883,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 1859,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1854,
											"end": 1857,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1847,
											"end": 1884,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1782,
											"end": 1890,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1782,
											"end": 1890,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1782,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 1995,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 1896,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1987,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 1988,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1966,
											"end": 1988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 1995,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 1995,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 1995,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2075,
											"end": 2086,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2115,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2104,
											"end": 2107,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2097,
											"end": 2116,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2149,
											"end": 2153,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2154,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2154,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2154,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2166,
											"end": 2412,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 2166,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2247,
											"end": 2248,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2265,
											"end": 2278,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2356,
											"end": 2357,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2354,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2347,
											"end": 2358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2341,
											"end": 2359,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2328,
											"end": 2339,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2291,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2296,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2281,
											"end": 2296,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2281,
											"end": 2296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 2257,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2390,
											"end": 2393,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2228,
											"end": 2412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2166,
											"end": 2412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2166,
											"end": 2412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2166,
											"end": 2412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2166,
											"end": 2412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2418,
											"end": 2520,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 2418,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2512,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2506,
											"end": 2513,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2490,
											"end": 2504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2486,
											"end": 2514,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2514,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2418,
											"end": 2520,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2418,
											"end": 2520,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2418,
											"end": 2520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2418,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2526,
											"end": 2883,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 2526,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2604,
											"end": 2607,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 2665,
											"end": 2670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2632,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 2632,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2632,
											"end": 2671,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 2632,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2687,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2687,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 2687,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2687,
											"end": 2748,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 2687,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2748,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2748,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2757,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 2815,
											"end": 2821,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2810,
											"end": 2813,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2801,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2757,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 2757,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2757,
											"end": 2822,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 2757,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 2847,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 2847,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2842,
											"end": 2845,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2877,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2877,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2608,
											"end": 2883,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2526,
											"end": 2883,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2526,
											"end": 2883,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2526,
											"end": 2883,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2526,
											"end": 2883,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2526,
											"end": 2883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2955,
											"end": 3724,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 2955,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3067,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3104,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3095,
											"end": 3098,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3189,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3183,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3174,
											"end": 3190,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3259,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3252,
											"end": 3266,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3238,
											"end": 3250,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 3204,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3115,
											"end": 3277,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3359,
											"end": 3363,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3348,
											"end": 3364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3342,
											"end": 3365,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3412,
											"end": 3415,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3402,
											"end": 3416,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3395,
											"end": 3399,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3386,
											"end": 3400,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3379,
											"end": 3417,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3438,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 3506,
											"end": 3510,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3438,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 3438,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3438,
											"end": 3511,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 3438,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3430,
											"end": 3511,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3430,
											"end": 3511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3287,
											"end": 3522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3605,
											"end": 3609,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3611,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 3681,
											"end": 3685,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3676,
											"end": 3679,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 3624,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3687,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 3624,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3532,
											"end": 3697,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3714,
											"end": 3718,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3069,
											"end": 3724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2955,
											"end": 3724,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2955,
											"end": 3724,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2955,
											"end": 3724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2955,
											"end": 3724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2955,
											"end": 3724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3730,
											"end": 3986,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 3730,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 3976,
											"end": 3979,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3884,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 3884,
											"end": 3980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3884,
											"end": 3980,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 3884,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3870,
											"end": 3980,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3870,
											"end": 3980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3730,
											"end": 3986,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3730,
											"end": 3986,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3730,
											"end": 3986,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3730,
											"end": 3986,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3730,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4130,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 3992,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4087,
											"end": 4091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4110,
											"end": 4124,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4130,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 5317,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 4206,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4375,
											"end": 4378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 4477,
											"end": 4482,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4404,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 4404,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4404,
											"end": 4483,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 4404,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4499,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 4603,
											"end": 4609,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4598,
											"end": 4601,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4499,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 4499,
											"end": 4610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4499,
											"end": 4610,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 4499,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4492,
											"end": 4610,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4492,
											"end": 4610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4681,
											"end": 4685,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4669,
											"end": 4686,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4660,
											"end": 4687,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4711,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 4786,
											"end": 4791,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4711,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 4711,
											"end": 4792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4711,
											"end": 4792,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 4711,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4846,
											"end": 4847,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4850,
											"end": 4863,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4927,
											"end": 4936,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4937,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4912,
											"end": 4915,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4905,
											"end": 4938,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4972,
											"end": 4985,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5006,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 5115,
											"end": 5119,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5100,
											"end": 5113,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5006,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 5006,
											"end": 5120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5006,
											"end": 5120,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 5006,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4998,
											"end": 5120,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4998,
											"end": 5120,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5143,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5143,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 5143,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5143,
											"end": 5228,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 5143,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5133,
											"end": 5228,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5133,
											"end": 5228,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5255,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 5248,
											"end": 5262,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4891,
											"end": 5272,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4875,
											"end": 4876,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4871,
											"end": 4880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4866,
											"end": 4880,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4866,
											"end": 4880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 4831,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 4849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5311,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5301,
											"end": 5311,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5301,
											"end": 5311,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4380,
											"end": 5317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4380,
											"end": 5317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4380,
											"end": 5317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4380,
											"end": 5317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4380,
											"end": 5317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 5317,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 5317,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 5317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 5317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 5317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5323,
											"end": 5796,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 5323,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5516,
											"end": 5520,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5556,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5557,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5531,
											"end": 5557,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5531,
											"end": 5557,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5597,
											"end": 5601,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5593,
											"end": 5613,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5589,
											"end": 5590,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5574,
											"end": 5591,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5567,
											"end": 5614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5631,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 5784,
											"end": 5788,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5775,
											"end": 5781,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5631,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5631,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5631,
											"end": 5789,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 5631,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5623,
											"end": 5789,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5623,
											"end": 5789,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5323,
											"end": 5796,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5323,
											"end": 5796,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5323,
											"end": 5796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5323,
											"end": 5796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5323,
											"end": 5796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5802,
											"end": 5951,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 5802,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5838,
											"end": 5845,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5944,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5871,
											"end": 5876,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 5945,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5856,
											"end": 5945,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5856,
											"end": 5945,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5802,
											"end": 5951,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5802,
											"end": 5951,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5802,
											"end": 5951,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5802,
											"end": 5951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5957,
											"end": 6077,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 5957,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 6046,
											"end": 6051,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 6029,
											"end": 6052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6019,
											"end": 6053,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6009,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 6009,
											"end": 6071,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6067,
											"end": 6068,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6064,
											"end": 6065,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6057,
											"end": 6069,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6009,
											"end": 6071,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 6009,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5957,
											"end": 6077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5957,
											"end": 6077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6220,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 6083,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6128,
											"end": 6133,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6172,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6153,
											"end": 6173,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6144,
											"end": 6173,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6144,
											"end": 6173,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6182,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 6208,
											"end": 6213,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6182,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 6182,
											"end": 6214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6182,
											"end": 6214,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 6182,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6220,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6220,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6553,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 6226,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6290,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6335,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6321,
											"end": 6330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6308,
											"end": 6331,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6304,
											"end": 6336,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6301,
											"end": 6420,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6301,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 6301,
											"end": 6420,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 6339,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 6339,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6418,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 6339,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6301,
											"end": 6420,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 6301,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6459,
											"end": 6460,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 6528,
											"end": 6535,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6504,
											"end": 6526,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6484,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 6484,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6484,
											"end": 6536,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 6484,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6474,
											"end": 6536,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6474,
											"end": 6536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6430,
											"end": 6546,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6553,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6553,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6553,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6553,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6559,
											"end": 6649,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 6559,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6636,
											"end": 6641,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6629,
											"end": 6642,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6611,
											"end": 6643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6611,
											"end": 6643,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6559,
											"end": 6649,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6559,
											"end": 6649,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6559,
											"end": 6649,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6559,
											"end": 6649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6655,
											"end": 6764,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 6655,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 6751,
											"end": 6756,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 6736,
											"end": 6757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6757,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 6736,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6731,
											"end": 6734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6758,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6655,
											"end": 6764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6655,
											"end": 6764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6655,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6770,
											"end": 6980,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6857,
											"end": 6861,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6897,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6893,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6872,
											"end": 6898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6872,
											"end": 6898,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6908,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6955,
											"end": 6972,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6946,
											"end": 6952,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6908,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 6908,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6908,
											"end": 6973,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 6908,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6770,
											"end": 6980,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6770,
											"end": 6980,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6770,
											"end": 6980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6770,
											"end": 6980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6770,
											"end": 6980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 7155,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 6986,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7070,
											"end": 7081,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7144,
											"end": 7148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7139,
											"end": 7142,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7135,
											"end": 7149,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7120,
											"end": 7149,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7120,
											"end": 7149,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 7155,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 7155,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 7155,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 7155,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 7155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7538,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 7161,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7249,
											"end": 7252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 7310,
											"end": 7315,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7277,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 7277,
											"end": 7316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7277,
											"end": 7316,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 7277,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7332,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 7396,
											"end": 7402,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7391,
											"end": 7394,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7332,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 7332,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7332,
											"end": 7403,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 7332,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7325,
											"end": 7403,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7325,
											"end": 7403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7412,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 7470,
											"end": 7476,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7465,
											"end": 7468,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7458,
											"end": 7462,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7451,
											"end": 7456,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7447,
											"end": 7463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7412,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 7412,
											"end": 7477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7412,
											"end": 7477,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 7412,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7502,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7502,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 7502,
											"end": 7531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7502,
											"end": 7531,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 7502,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7497,
											"end": 7500,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7493,
											"end": 7532,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7486,
											"end": 7532,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7486,
											"end": 7532,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7253,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7538,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7538,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7857,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7544,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7657,
											"end": 7661,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7697,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7684,
											"end": 7693,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7680,
											"end": 7698,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7672,
											"end": 7698,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7672,
											"end": 7698,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7744,
											"end": 7753,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7738,
											"end": 7742,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7730,
											"end": 7731,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7719,
											"end": 7728,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7715,
											"end": 7732,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7708,
											"end": 7755,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7772,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 7845,
											"end": 7849,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7836,
											"end": 7842,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7772,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 7772,
											"end": 7850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7772,
											"end": 7850,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 7772,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7764,
											"end": 7850,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7764,
											"end": 7850,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7857,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7857,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7863,
											"end": 7985,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 7863,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 7954,
											"end": 7959,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 7936,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7929,
											"end": 7934,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7926,
											"end": 7961,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7975,
											"end": 7976,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7965,
											"end": 7977,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7863,
											"end": 7985,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7863,
											"end": 7985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8130,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 7991,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8037,
											"end": 8042,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8053,
											"end": 8082,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8053,
											"end": 8082,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8091,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 8118,
											"end": 8123,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8091,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 8091,
											"end": 8124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8091,
											"end": 8124,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 8091,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8130,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8465,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 8136,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8246,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8241,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8223,
											"end": 8230,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8219,
											"end": 8242,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8215,
											"end": 8247,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8212,
											"end": 8331,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8212,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 8212,
											"end": 8331,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8250,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 8250,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 8250,
											"end": 8329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8250,
											"end": 8329,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 8250,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8212,
											"end": 8331,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 8212,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8370,
											"end": 8371,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 8440,
											"end": 8447,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8431,
											"end": 8437,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8420,
											"end": 8429,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8416,
											"end": 8438,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8395,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 8395,
											"end": 8448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8395,
											"end": 8448,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 8395,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8385,
											"end": 8448,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8385,
											"end": 8448,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8341,
											"end": 8458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8465,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8465,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8465,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8465,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8589,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 8471,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 8576,
											"end": 8581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 8558,
											"end": 8582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8553,
											"end": 8556,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8546,
											"end": 8583,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8595,
											"end": 8817,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 8595,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8688,
											"end": 8692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8728,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8724,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8703,
											"end": 8729,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8703,
											"end": 8729,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8739,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 8807,
											"end": 8808,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8796,
											"end": 8805,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8792,
											"end": 8809,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8739,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 8739,
											"end": 8810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8739,
											"end": 8810,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 8739,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8595,
											"end": 8817,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8595,
											"end": 8817,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8595,
											"end": 8817,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8595,
											"end": 8817,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8595,
											"end": 8817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 9297,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 8823,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8897,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8905,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8948,
											"end": 8950,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8936,
											"end": 8945,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8927,
											"end": 8934,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8923,
											"end": 8946,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8919,
											"end": 8951,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8916,
											"end": 9035,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8916,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 8916,
											"end": 9035,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 8954,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 8954,
											"end": 9033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9033,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 8954,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8916,
											"end": 9035,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 8916,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9074,
											"end": 9075,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9152,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 9144,
											"end": 9151,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9135,
											"end": 9141,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9124,
											"end": 9133,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9120,
											"end": 9142,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9099,
											"end": 9152,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 9099,
											"end": 9152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9099,
											"end": 9152,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 9099,
											"end": 9152,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9089,
											"end": 9152,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9089,
											"end": 9152,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9045,
											"end": 9162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9201,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9227,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 9272,
											"end": 9279,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9263,
											"end": 9269,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9252,
											"end": 9261,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9248,
											"end": 9270,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 9227,
											"end": 9280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 9280,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 9227,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9217,
											"end": 9280,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9217,
											"end": 9280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9172,
											"end": 9290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 9297,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 9297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 9297,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 9297,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 9297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 9297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9303,
											"end": 9922,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 9303,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9380,
											"end": 9386,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9396,
											"end": 9402,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9433,
											"end": 9442,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9424,
											"end": 9431,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9420,
											"end": 9443,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9416,
											"end": 9448,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9413,
											"end": 9532,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9413,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 9413,
											"end": 9532,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 9451,
											"end": 9530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9413,
											"end": 9532,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 9413,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9596,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 9641,
											"end": 9648,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9632,
											"end": 9638,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9621,
											"end": 9630,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9617,
											"end": 9639,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 9596,
											"end": 9649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9649,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 9596,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9586,
											"end": 9649,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9586,
											"end": 9649,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9542,
											"end": 9659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9698,
											"end": 9700,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9724,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 9769,
											"end": 9776,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9760,
											"end": 9766,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9749,
											"end": 9758,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9745,
											"end": 9767,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 9724,
											"end": 9777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9777,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 9724,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9714,
											"end": 9777,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9714,
											"end": 9777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9669,
											"end": 9787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9826,
											"end": 9828,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9852,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 9897,
											"end": 9904,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9888,
											"end": 9894,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9877,
											"end": 9886,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9873,
											"end": 9895,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9852,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 9852,
											"end": 9905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9852,
											"end": 9905,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 9852,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9842,
											"end": 9905,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9842,
											"end": 9905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9797,
											"end": 9915,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9303,
											"end": 9922,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9303,
											"end": 9922,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9303,
											"end": 9922,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9303,
											"end": 9922,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9303,
											"end": 9922,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9303,
											"end": 9922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9928,
											"end": 10046,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 9928,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10015,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 10033,
											"end": 10038,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10015,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 10015,
											"end": 10039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10015,
											"end": 10039,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 10015,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10013,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10003,
											"end": 10040,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9928,
											"end": 10046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9928,
											"end": 10046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9928,
											"end": 10046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10274,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 10052,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10145,
											"end": 10149,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10183,
											"end": 10185,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10172,
											"end": 10181,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10168,
											"end": 10186,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10160,
											"end": 10186,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10160,
											"end": 10186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10196,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10262,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10249,
											"end": 10266,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10240,
											"end": 10246,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10196,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 10196,
											"end": 10267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10196,
											"end": 10267,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 10196,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10274,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10274,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10813,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10280,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10449,
											"end": 10453,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10487,
											"end": 10489,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10476,
											"end": 10485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10472,
											"end": 10490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10464,
											"end": 10490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10464,
											"end": 10490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10500,
											"end": 10571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 10568,
											"end": 10569,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10566,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10553,
											"end": 10570,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10544,
											"end": 10550,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10500,
											"end": 10571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 10500,
											"end": 10571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10500,
											"end": 10571,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 10500,
											"end": 10571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10618,
											"end": 10627,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10612,
											"end": 10616,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10608,
											"end": 10628,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10603,
											"end": 10605,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10592,
											"end": 10601,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10588,
											"end": 10606,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10581,
											"end": 10629,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10646,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 10719,
											"end": 10723,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 10716,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10646,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 10646,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10646,
											"end": 10724,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 10646,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10638,
											"end": 10724,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10638,
											"end": 10724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 10802,
											"end": 10804,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10791,
											"end": 10800,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10787,
											"end": 10805,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10778,
											"end": 10784,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 10734,
											"end": 10806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10806,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 10734,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10813,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10813,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10935,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 10819,
											"end": 10935,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10889,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10889,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 10889,
											"end": 10910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10889,
											"end": 10910,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 10889,
											"end": 10910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10882,
											"end": 10887,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10879,
											"end": 10911,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10869,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 10869,
											"end": 10929,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10925,
											"end": 10926,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10915,
											"end": 10927,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10869,
											"end": 10929,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 10869,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 11074,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 10941,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10984,
											"end": 10989,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11028,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11009,
											"end": 11029,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11000,
											"end": 11029,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11000,
											"end": 11029,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 11062,
											"end": 11067,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 11038,
											"end": 11068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 11074,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 11074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 11074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 11074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 11074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11080,
											"end": 11548,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 11080,
											"end": 11548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11145,
											"end": 11151,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11190,
											"end": 11199,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11181,
											"end": 11188,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11177,
											"end": 11200,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11173,
											"end": 11205,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11170,
											"end": 11289,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11170,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 11170,
											"end": 11289,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11208,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 11208,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 11208,
											"end": 11287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11208,
											"end": 11287,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 11208,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11170,
											"end": 11289,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 11170,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11328,
											"end": 11329,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11353,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 11398,
											"end": 11405,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11389,
											"end": 11395,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11387,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11353,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 11353,
											"end": 11406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11353,
											"end": 11406,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 11353,
											"end": 11406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11343,
											"end": 11406,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11343,
											"end": 11406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11299,
											"end": 11416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11455,
											"end": 11457,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11481,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 11523,
											"end": 11530,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11503,
											"end": 11512,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11499,
											"end": 11521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11481,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 11481,
											"end": 11531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11481,
											"end": 11531,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 11481,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11531,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11426,
											"end": 11541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11080,
											"end": 11548,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11080,
											"end": 11548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11080,
											"end": 11548,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11080,
											"end": 11548,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11080,
											"end": 11548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11080,
											"end": 11548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11554,
											"end": 11671,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 11554,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11663,
											"end": 11664,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11660,
											"end": 11661,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11653,
											"end": 11665,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11677,
											"end": 11794,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 11677,
											"end": 11794,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11783,
											"end": 11784,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11776,
											"end": 11788,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11800,
											"end": 11980,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 11800,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11848,
											"end": 11925,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11845,
											"end": 11846,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11838,
											"end": 11926,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11945,
											"end": 11949,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 11942,
											"end": 11943,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11935,
											"end": 11950,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11969,
											"end": 11973,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11966,
											"end": 11967,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 11974,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11986,
											"end": 12267,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 11986,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12069,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 12091,
											"end": 12095,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12069,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 12069,
											"end": 12096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12069,
											"end": 12096,
											"name": "tag",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 12069,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12061,
											"end": 12067,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12057,
											"end": 12097,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12199,
											"end": 12205,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12187,
											"end": 12197,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12184,
											"end": 12206,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12163,
											"end": 12181,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12151,
											"end": 12161,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12148,
											"end": 12182,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12145,
											"end": 12207,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 12142,
											"end": 12230,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12142,
											"end": 12230,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 12142,
											"end": 12230,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 12210,
											"end": 12228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "tag",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12142,
											"end": 12230,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 12142,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12250,
											"end": 12260,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12246,
											"end": 12248,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12239,
											"end": 12261,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12029,
											"end": 12267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11986,
											"end": 12267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11986,
											"end": 12267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11986,
											"end": 12267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12402,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 12273,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12334,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 12334,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 12334,
											"end": 12354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12334,
											"end": 12354,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 12334,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12324,
											"end": 12354,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12324,
											"end": 12354,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 12391,
											"end": 12395,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12383,
											"end": 12389,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 12363,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 12363,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12402,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12402,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12408,
											"end": 12716,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 12408,
											"end": 12716,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12470,
											"end": 12474,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12560,
											"end": 12578,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12552,
											"end": 12558,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12549,
											"end": 12579,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12546,
											"end": 12602,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12546,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 12546,
											"end": 12602,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 12582,
											"end": 12600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "tag",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12546,
											"end": 12602,
											"name": "tag",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 12546,
											"end": 12602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 12642,
											"end": 12648,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 12620,
											"end": 12649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "tag",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12612,
											"end": 12649,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12612,
											"end": 12649,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12704,
											"end": 12708,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12698,
											"end": 12702,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12694,
											"end": 12709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12709,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12709,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12408,
											"end": 12716,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12408,
											"end": 12716,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12408,
											"end": 12716,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12408,
											"end": 12716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12722,
											"end": 12868,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 12722,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12819,
											"end": 12825,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12814,
											"end": 12817,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12809,
											"end": 12812,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12796,
											"end": 12826,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 12860,
											"end": 12861,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12857,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12846,
											"end": 12849,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12842,
											"end": 12858,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12835,
											"end": 12862,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12722,
											"end": 12868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12722,
											"end": 12868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12722,
											"end": 12868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12722,
											"end": 12868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 13299,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 12874,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12957,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12977,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 12993,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 13035,
											"end": 13041,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12993,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 12993,
											"end": 13042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12993,
											"end": 13042,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 12993,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12977,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 12977,
											"end": 13043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12977,
											"end": 13043,
											"name": "tag",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 12977,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12968,
											"end": 13043,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12968,
											"end": 13043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13066,
											"end": 13072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13064,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13052,
											"end": 13073,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13104,
											"end": 13108,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13097,
											"end": 13102,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13093,
											"end": 13109,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13142,
											"end": 13145,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13133,
											"end": 13139,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13128,
											"end": 13131,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13124,
											"end": 13140,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13121,
											"end": 13146,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13118,
											"end": 13230,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13118,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 13118,
											"end": 13230,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13149,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 13149,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 13149,
											"end": 13228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13149,
											"end": 13228,
											"name": "tag",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 13149,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13118,
											"end": 13230,
											"name": "tag",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 13118,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13239,
											"end": 13293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 13286,
											"end": 13292,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13281,
											"end": 13284,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13276,
											"end": 13279,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13239,
											"end": 13293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 13239,
											"end": 13293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13239,
											"end": 13293,
											"name": "tag",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 13239,
											"end": 13293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12958,
											"end": 13299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 13299,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 13299,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 13299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 13299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 13299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 13299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13319,
											"end": 13659,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 13319,
											"end": 13659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13375,
											"end": 13380,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13424,
											"end": 13427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13417,
											"end": 13421,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 13409,
											"end": 13415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13405,
											"end": 13422,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13401,
											"end": 13428,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 13391,
											"end": 13513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 13391,
											"end": 13513,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13432,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 13432,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 13432,
											"end": 13511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13432,
											"end": 13511,
											"name": "tag",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 13432,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13391,
											"end": 13513,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 13391,
											"end": 13513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13549,
											"end": 13555,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13536,
											"end": 13556,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 13574,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 13649,
											"end": 13652,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13641,
											"end": 13647,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13638,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13626,
											"end": 13632,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13622,
											"end": 13639,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13574,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 13574,
											"end": 13653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13574,
											"end": 13653,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 13574,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13565,
											"end": 13653,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13565,
											"end": 13653,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13381,
											"end": 13659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13319,
											"end": 13659,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13319,
											"end": 13659,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13319,
											"end": 13659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13319,
											"end": 13659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13319,
											"end": 13659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13665,
											"end": 14319,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 13665,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13743,
											"end": 13749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13757,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13800,
											"end": 13802,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13788,
											"end": 13797,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13779,
											"end": 13786,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13775,
											"end": 13798,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13771,
											"end": 13803,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13806,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 13806,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 13806,
											"end": 13885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13806,
											"end": 13885,
											"name": "tag",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 13806,
											"end": 13885,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "tag",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13954,
											"end": 13955,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13943,
											"end": 13952,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13939,
											"end": 13956,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13926,
											"end": 13957,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 13984,
											"end": 14002,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13976,
											"end": 13982,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13973,
											"end": 14003,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13970,
											"end": 14087,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13970,
											"end": 14087,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 13970,
											"end": 14087,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14006,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 14006,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 14006,
											"end": 14085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14006,
											"end": 14085,
											"name": "tag",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 14006,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13970,
											"end": 14087,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 13970,
											"end": 14087,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14111,
											"end": 14174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 14166,
											"end": 14173,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14157,
											"end": 14163,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14142,
											"end": 14164,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14111,
											"end": 14174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 14111,
											"end": 14174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14111,
											"end": 14174,
											"name": "tag",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 14111,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14101,
											"end": 14174,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14101,
											"end": 14174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13897,
											"end": 14184,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14223,
											"end": 14225,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14249,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 14294,
											"end": 14301,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14285,
											"end": 14291,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14274,
											"end": 14283,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14270,
											"end": 14292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14249,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 14249,
											"end": 14302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14249,
											"end": 14302,
											"name": "tag",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 14249,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14239,
											"end": 14302,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14239,
											"end": 14302,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14194,
											"end": 14312,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13665,
											"end": 14319,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13665,
											"end": 14319,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13665,
											"end": 14319,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13665,
											"end": 14319,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13665,
											"end": 14319,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13665,
											"end": 14319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14325,
											"end": 14632,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 14325,
											"end": 14632,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14386,
											"end": 14390,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14476,
											"end": 14494,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14468,
											"end": 14474,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14465,
											"end": 14495,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 14498,
											"end": 14516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "tag",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "tag",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14536,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 14558,
											"end": 14564,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14536,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 14536,
											"end": 14565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14536,
											"end": 14565,
											"name": "tag",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 14536,
											"end": 14565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14528,
											"end": 14565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14528,
											"end": 14565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14620,
											"end": 14624,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14614,
											"end": 14618,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14610,
											"end": 14625,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14625,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14325,
											"end": 14632,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14325,
											"end": 14632,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14325,
											"end": 14632,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14325,
											"end": 14632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14638,
											"end": 15061,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 14638,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14715,
											"end": 14720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14740,
											"end": 14805,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 14756,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 14797,
											"end": 14803,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14756,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 14756,
											"end": 14804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14756,
											"end": 14804,
											"name": "tag",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 14756,
											"end": 14804,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14740,
											"end": 14805,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 14740,
											"end": 14805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14740,
											"end": 14805,
											"name": "tag",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 14740,
											"end": 14805,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14731,
											"end": 14805,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14731,
											"end": 14805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14821,
											"end": 14826,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14814,
											"end": 14835,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14866,
											"end": 14870,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14859,
											"end": 14864,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14855,
											"end": 14871,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14904,
											"end": 14907,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14895,
											"end": 14901,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14890,
											"end": 14893,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14886,
											"end": 14902,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14883,
											"end": 14908,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14880,
											"end": 14992,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14880,
											"end": 14992,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 14880,
											"end": 14992,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14911,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 14911,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 14911,
											"end": 14990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14911,
											"end": 14990,
											"name": "tag",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 14911,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14880,
											"end": 14992,
											"name": "tag",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 14880,
											"end": 14992,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15001,
											"end": 15055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 15048,
											"end": 15054,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15043,
											"end": 15046,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15038,
											"end": 15041,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15001,
											"end": 15055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 15001,
											"end": 15055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15001,
											"end": 15055,
											"name": "tag",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 15001,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14638,
											"end": 15061,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14638,
											"end": 15061,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14638,
											"end": 15061,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14638,
											"end": 15061,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14638,
											"end": 15061,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14638,
											"end": 15061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15418,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 15080,
											"end": 15418,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15135,
											"end": 15140,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15184,
											"end": 15187,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15177,
											"end": 15181,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 15169,
											"end": 15175,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15165,
											"end": 15182,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15161,
											"end": 15188,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15151,
											"end": 15273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 15151,
											"end": 15273,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 15192,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 15192,
											"end": 15271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15271,
											"name": "tag",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 15192,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15151,
											"end": 15273,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 15151,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15309,
											"end": 15315,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15296,
											"end": 15316,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 15334,
											"end": 15412,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "627"
										},
										{
											"begin": 15408,
											"end": 15411,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15400,
											"end": 15406,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15393,
											"end": 15397,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15385,
											"end": 15391,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15381,
											"end": 15398,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15334,
											"end": 15412,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 15334,
											"end": 15412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15334,
											"end": 15412,
											"name": "tag",
											"source": 15,
											"value": "627"
										},
										{
											"begin": 15334,
											"end": 15412,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15325,
											"end": 15412,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15325,
											"end": 15412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15141,
											"end": 15418,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15418,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15418,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15418,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15418,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 15525,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15527,
											"end": 15533,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15535,
											"end": 15541,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15543,
											"end": 15549,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15592,
											"end": 15595,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 15580,
											"end": 15589,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15571,
											"end": 15578,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 15567,
											"end": 15590,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15563,
											"end": 15596,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15560,
											"end": 15680,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15560,
											"end": 15680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 15560,
											"end": 15680,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15599,
											"end": 15678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 15599,
											"end": 15678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 15599,
											"end": 15678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15599,
											"end": 15678,
											"name": "tag",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 15599,
											"end": 15678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15560,
											"end": 15680,
											"name": "tag",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 15560,
											"end": 15680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15719,
											"end": 15720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15744,
											"end": 15797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 15789,
											"end": 15796,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 15780,
											"end": 15786,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15769,
											"end": 15778,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 15765,
											"end": 15787,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15744,
											"end": 15797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 15744,
											"end": 15797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15744,
											"end": 15797,
											"name": "tag",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 15744,
											"end": 15797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15734,
											"end": 15797,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 15734,
											"end": 15797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15690,
											"end": 15807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15846,
											"end": 15848,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15872,
											"end": 15925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "632"
										},
										{
											"begin": 15917,
											"end": 15924,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 15908,
											"end": 15914,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15897,
											"end": 15906,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 15893,
											"end": 15915,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15872,
											"end": 15925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 15872,
											"end": 15925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15872,
											"end": 15925,
											"name": "tag",
											"source": 15,
											"value": "632"
										},
										{
											"begin": 15872,
											"end": 15925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15862,
											"end": 15925,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 15862,
											"end": 15925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15817,
											"end": 15935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15974,
											"end": 15976,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16000,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 16045,
											"end": 16052,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16036,
											"end": 16042,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16025,
											"end": 16034,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 16021,
											"end": 16043,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16000,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 16000,
											"end": 16053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16000,
											"end": 16053,
											"name": "tag",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 16000,
											"end": 16053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15990,
											"end": 16053,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15990,
											"end": 16053,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15945,
											"end": 16063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16130,
											"end": 16132,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16119,
											"end": 16128,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16115,
											"end": 16133,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16102,
											"end": 16134,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 16161,
											"end": 16179,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16153,
											"end": 16159,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16150,
											"end": 16180,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 16147,
											"end": 16264,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16147,
											"end": 16264,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "634"
										},
										{
											"begin": 16147,
											"end": 16264,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16183,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 16183,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 16183,
											"end": 16262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16183,
											"end": 16262,
											"name": "tag",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 16183,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16147,
											"end": 16264,
											"name": "tag",
											"source": 15,
											"value": "634"
										},
										{
											"begin": 16147,
											"end": 16264,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16288,
											"end": 16350,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 16342,
											"end": 16349,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16333,
											"end": 16339,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16322,
											"end": 16331,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 16318,
											"end": 16340,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16288,
											"end": 16350,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 16288,
											"end": 16350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16288,
											"end": 16350,
											"name": "tag",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 16288,
											"end": 16350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16278,
											"end": 16350,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16278,
											"end": 16350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16073,
											"end": 16360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15424,
											"end": 16367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16373,
											"end": 16847,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 16373,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16441,
											"end": 16447,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16449,
											"end": 16455,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16498,
											"end": 16500,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16486,
											"end": 16495,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16477,
											"end": 16484,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16473,
											"end": 16496,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16469,
											"end": 16501,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16466,
											"end": 16585,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16466,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 16466,
											"end": 16585,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16504,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "639"
										},
										{
											"begin": 16504,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 16504,
											"end": 16583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16504,
											"end": 16583,
											"name": "tag",
											"source": 15,
											"value": "639"
										},
										{
											"begin": 16504,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16466,
											"end": 16585,
											"name": "tag",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 16466,
											"end": 16585,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16624,
											"end": 16625,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16649,
											"end": 16702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "640"
										},
										{
											"begin": 16694,
											"end": 16701,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16685,
											"end": 16691,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16674,
											"end": 16683,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16649,
											"end": 16702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 16649,
											"end": 16702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16649,
											"end": 16702,
											"name": "tag",
											"source": 15,
											"value": "640"
										},
										{
											"begin": 16649,
											"end": 16702,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16639,
											"end": 16702,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16639,
											"end": 16702,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16595,
											"end": 16712,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16751,
											"end": 16753,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16777,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 16822,
											"end": 16829,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16813,
											"end": 16819,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16802,
											"end": 16811,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16798,
											"end": 16820,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16777,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 16777,
											"end": 16830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16777,
											"end": 16830,
											"name": "tag",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 16777,
											"end": 16830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16830,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16830,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16722,
											"end": 16840,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16373,
											"end": 16847,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16373,
											"end": 16847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16373,
											"end": 16847,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16373,
											"end": 16847,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16373,
											"end": 16847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16373,
											"end": 16847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16853,
											"end": 16913,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 16853,
											"end": 16913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16881,
											"end": 16884,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16902,
											"end": 16907,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16895,
											"end": 16907,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16895,
											"end": 16907,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16853,
											"end": 16913,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16853,
											"end": 16913,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16853,
											"end": 16913,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16853,
											"end": 16913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16919,
											"end": 17061,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 16919,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16969,
											"end": 16978,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17002,
											"end": 17055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "644"
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 17029,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 17047,
											"end": 17052,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17029,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 17029,
											"end": 17053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17029,
											"end": 17053,
											"name": "tag",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 17029,
											"end": 17053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 17020,
											"end": 17054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "tag",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17002,
											"end": 17055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 17002,
											"end": 17055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17002,
											"end": 17055,
											"name": "tag",
											"source": 15,
											"value": "644"
										},
										{
											"begin": 17002,
											"end": 17055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16989,
											"end": 17055,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16989,
											"end": 17055,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16919,
											"end": 17061,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16919,
											"end": 17061,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16919,
											"end": 17061,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16919,
											"end": 17061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17193,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 17067,
											"end": 17193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17117,
											"end": 17126,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17150,
											"end": 17187,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 17181,
											"end": 17186,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17150,
											"end": 17187,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 17150,
											"end": 17187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17150,
											"end": 17187,
											"name": "tag",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 17150,
											"end": 17187,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17137,
											"end": 17187,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17137,
											"end": 17187,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17193,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17193,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17193,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17199,
											"end": 17339,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 17199,
											"end": 17339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17263,
											"end": 17272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17296,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 17327,
											"end": 17332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17296,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 17296,
											"end": 17333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17296,
											"end": 17333,
											"name": "tag",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 17296,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17283,
											"end": 17333,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17283,
											"end": 17333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17199,
											"end": 17339,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17199,
											"end": 17339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17199,
											"end": 17339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17199,
											"end": 17339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17345,
											"end": 17504,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 17345,
											"end": 17504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17446,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 17491,
											"end": 17496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17446,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 17446,
											"end": 17497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17446,
											"end": 17497,
											"name": "tag",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 17446,
											"end": 17497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17441,
											"end": 17444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17434,
											"end": 17498,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17345,
											"end": 17504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17345,
											"end": 17504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17345,
											"end": 17504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17760,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 17510,
											"end": 17760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17617,
											"end": 17621,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17655,
											"end": 17657,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17644,
											"end": 17653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17640,
											"end": 17658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17632,
											"end": 17658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17632,
											"end": 17658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17668,
											"end": 17753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 17750,
											"end": 17751,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17739,
											"end": 17748,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17735,
											"end": 17752,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17726,
											"end": 17732,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17668,
											"end": 17753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 17668,
											"end": 17753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17668,
											"end": 17753,
											"name": "tag",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 17668,
											"end": 17753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17760,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17760,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17766,
											"end": 17946,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 17766,
											"end": 17946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17814,
											"end": 17891,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17811,
											"end": 17812,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17804,
											"end": 17892,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17911,
											"end": 17915,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 17908,
											"end": 17909,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 17901,
											"end": 17916,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17935,
											"end": 17939,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17932,
											"end": 17933,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17925,
											"end": 17940,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17952,
											"end": 18132,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 17952,
											"end": 18132,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18000,
											"end": 18077,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17997,
											"end": 17998,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17990,
											"end": 18078,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18097,
											"end": 18101,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 18094,
											"end": 18095,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 18087,
											"end": 18102,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18121,
											"end": 18125,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18118,
											"end": 18119,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18111,
											"end": 18126,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18138,
											"end": 18458,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 18138,
											"end": 18458,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18182,
											"end": 18188,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18219,
											"end": 18220,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 18213,
											"end": 18217,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18209,
											"end": 18221,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 18199,
											"end": 18221,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18199,
											"end": 18221,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18266,
											"end": 18267,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 18260,
											"end": 18264,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18256,
											"end": 18268,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 18287,
											"end": 18305,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18277,
											"end": 18358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 18277,
											"end": 18358,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18343,
											"end": 18347,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 18335,
											"end": 18341,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18331,
											"end": 18348,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 18321,
											"end": 18348,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18321,
											"end": 18348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18277,
											"end": 18358,
											"name": "tag",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 18277,
											"end": 18358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18405,
											"end": 18407,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18397,
											"end": 18403,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18394,
											"end": 18408,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 18374,
											"end": 18392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18371,
											"end": 18409,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18368,
											"end": 18452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 18368,
											"end": 18452,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18424,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 18424,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 18424,
											"end": 18442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18424,
											"end": 18442,
											"name": "tag",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 18424,
											"end": 18442,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18368,
											"end": 18452,
											"name": "tag",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 18368,
											"end": 18452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18189,
											"end": 18458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18138,
											"end": 18458,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18138,
											"end": 18458,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18138,
											"end": 18458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18138,
											"end": 18458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18464,
											"end": 18906,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 18464,
											"end": 18906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18613,
											"end": 18617,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18651,
											"end": 18653,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 18640,
											"end": 18649,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18636,
											"end": 18654,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18628,
											"end": 18654,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18628,
											"end": 18654,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18664,
											"end": 18735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 18732,
											"end": 18733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18721,
											"end": 18730,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18717,
											"end": 18734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18708,
											"end": 18714,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 18664,
											"end": 18735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 18664,
											"end": 18735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18664,
											"end": 18735,
											"name": "tag",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 18664,
											"end": 18735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18745,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 18813,
											"end": 18815,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18802,
											"end": 18811,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18798,
											"end": 18816,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18789,
											"end": 18795,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18745,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 18745,
											"end": 18817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18745,
											"end": 18817,
											"name": "tag",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 18745,
											"end": 18817,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18827,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 18895,
											"end": 18897,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 18884,
											"end": 18893,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18880,
											"end": 18898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18871,
											"end": 18877,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18827,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 18827,
											"end": 18899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18827,
											"end": 18899,
											"name": "tag",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 18827,
											"end": 18899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18464,
											"end": 18906,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 18464,
											"end": 18906,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 18464,
											"end": 18906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18464,
											"end": 18906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18464,
											"end": 18906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18464,
											"end": 18906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18464,
											"end": 18906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18912,
											"end": 19084,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 18912,
											"end": 19084,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19052,
											"end": 19076,
											"name": "PUSH",
											"source": 15,
											"value": "50726F6475637420646F6573206E6F7420657869737400000000000000000000"
										},
										{
											"begin": 19048,
											"end": 19049,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19040,
											"end": 19046,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19036,
											"end": 19050,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19029,
											"end": 19077,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18912,
											"end": 19084,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18912,
											"end": 19084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19090,
											"end": 19456,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 19090,
											"end": 19456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19232,
											"end": 19235,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19253,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 19317,
											"end": 19319,
											"name": "PUSH",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 19312,
											"end": 19315,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19253,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 19253,
											"end": 19320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19253,
											"end": 19320,
											"name": "tag",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 19253,
											"end": 19320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19246,
											"end": 19320,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19246,
											"end": 19320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19329,
											"end": 19422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 19418,
											"end": 19421,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19329,
											"end": 19422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 19329,
											"end": 19422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19329,
											"end": 19422,
											"name": "tag",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 19329,
											"end": 19422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19447,
											"end": 19449,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19442,
											"end": 19445,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19438,
											"end": 19450,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19431,
											"end": 19450,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19431,
											"end": 19450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19090,
											"end": 19456,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19090,
											"end": 19456,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19090,
											"end": 19456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19090,
											"end": 19456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19462,
											"end": 19881,
											"name": "tag",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 19462,
											"end": 19881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19628,
											"end": 19632,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19666,
											"end": 19668,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19655,
											"end": 19664,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19651,
											"end": 19669,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19643,
											"end": 19669,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19643,
											"end": 19669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19715,
											"end": 19724,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19709,
											"end": 19713,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19705,
											"end": 19725,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19701,
											"end": 19702,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19690,
											"end": 19699,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19686,
											"end": 19703,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19679,
											"end": 19726,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19743,
											"end": 19874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 19869,
											"end": 19873,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19743,
											"end": 19874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 19743,
											"end": 19874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19743,
											"end": 19874,
											"name": "tag",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 19743,
											"end": 19874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19735,
											"end": 19874,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19735,
											"end": 19874,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19462,
											"end": 19881,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19462,
											"end": 19881,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19462,
											"end": 19881,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19462,
											"end": 19881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19887,
											"end": 20067,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 19887,
											"end": 20067,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19935,
											"end": 20012,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19932,
											"end": 19933,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19925,
											"end": 20013,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20032,
											"end": 20036,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 20029,
											"end": 20030,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 20022,
											"end": 20037,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20056,
											"end": 20060,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 20053,
											"end": 20054,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20046,
											"end": 20061,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 20073,
											"end": 20483,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 20073,
											"end": 20483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20113,
											"end": 20120,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20136,
											"end": 20156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "673"
										},
										{
											"begin": 20154,
											"end": 20155,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20136,
											"end": 20156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 20136,
											"end": 20156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20136,
											"end": 20156,
											"name": "tag",
											"source": 15,
											"value": "673"
										},
										{
											"begin": 20136,
											"end": 20156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20131,
											"end": 20156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20131,
											"end": 20156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20170,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 20188,
											"end": 20189,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20170,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 20170,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20170,
											"end": 20190,
											"name": "tag",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 20170,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20165,
											"end": 20190,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20165,
											"end": 20190,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20225,
											"end": 20226,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20222,
											"end": 20223,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20218,
											"end": 20227,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 20247,
											"end": 20277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 20265,
											"end": 20276,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20247,
											"end": 20277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 20247,
											"end": 20277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20247,
											"end": 20277,
											"name": "tag",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 20247,
											"end": 20277,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20236,
											"end": 20277,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20236,
											"end": 20277,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20426,
											"end": 20427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20417,
											"end": 20424,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20413,
											"end": 20428,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 20410,
											"end": 20411,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20407,
											"end": 20429,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 20387,
											"end": 20388,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20380,
											"end": 20389,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20360,
											"end": 20443,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 20337,
											"end": 20476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "676"
										},
										{
											"begin": 20337,
											"end": 20476,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20456,
											"end": 20474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "677"
										},
										{
											"begin": 20456,
											"end": 20474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 20456,
											"end": 20474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20456,
											"end": 20474,
											"name": "tag",
											"source": 15,
											"value": "677"
										},
										{
											"begin": 20456,
											"end": 20474,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20337,
											"end": 20476,
											"name": "tag",
											"source": 15,
											"value": "676"
										},
										{
											"begin": 20337,
											"end": 20476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20121,
											"end": 20483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20073,
											"end": 20483,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20073,
											"end": 20483,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20073,
											"end": 20483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20073,
											"end": 20483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20073,
											"end": 20483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20931,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 20489,
											"end": 20931,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20638,
											"end": 20642,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20676,
											"end": 20678,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 20665,
											"end": 20674,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20661,
											"end": 20679,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20653,
											"end": 20679,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20653,
											"end": 20679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20689,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 20757,
											"end": 20758,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20746,
											"end": 20755,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20742,
											"end": 20759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20733,
											"end": 20739,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20689,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 20689,
											"end": 20760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20689,
											"end": 20760,
											"name": "tag",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 20689,
											"end": 20760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20770,
											"end": 20842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "680"
										},
										{
											"begin": 20838,
											"end": 20840,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20827,
											"end": 20836,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20823,
											"end": 20841,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20814,
											"end": 20820,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20770,
											"end": 20842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 20770,
											"end": 20842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20770,
											"end": 20842,
											"name": "tag",
											"source": 15,
											"value": "680"
										},
										{
											"begin": 20770,
											"end": 20842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20852,
											"end": 20924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "681"
										},
										{
											"begin": 20920,
											"end": 20922,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 20909,
											"end": 20918,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20905,
											"end": 20923,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20896,
											"end": 20902,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20852,
											"end": 20924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 20852,
											"end": 20924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20852,
											"end": 20924,
											"name": "tag",
											"source": 15,
											"value": "681"
										},
										{
											"begin": 20852,
											"end": 20924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20931,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20931,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20937,
											"end": 21074,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 20937,
											"end": 21074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20991,
											"end": 20996,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21022,
											"end": 21028,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21016,
											"end": 21029,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 21007,
											"end": 21029,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21007,
											"end": 21029,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21038,
											"end": 21068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 21062,
											"end": 21067,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21038,
											"end": 21068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 21038,
											"end": 21068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21038,
											"end": 21068,
											"name": "tag",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 21038,
											"end": 21068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20937,
											"end": 21074,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20937,
											"end": 21074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20937,
											"end": 21074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20937,
											"end": 21074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20937,
											"end": 21074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21080,
											"end": 21425,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 21080,
											"end": 21425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21147,
											"end": 21153,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21196,
											"end": 21198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21184,
											"end": 21193,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21175,
											"end": 21182,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21171,
											"end": 21194,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21167,
											"end": 21199,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 21164,
											"end": 21283,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 21164,
											"end": 21283,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "685"
										},
										{
											"begin": 21164,
											"end": 21283,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21202,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 21202,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 21202,
											"end": 21281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21202,
											"end": 21281,
											"name": "tag",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 21202,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21164,
											"end": 21283,
											"name": "tag",
											"source": 15,
											"value": "685"
										},
										{
											"begin": 21164,
											"end": 21283,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21322,
											"end": 21323,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21347,
											"end": 21408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 21400,
											"end": 21407,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21391,
											"end": 21397,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21380,
											"end": 21389,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21376,
											"end": 21398,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21347,
											"end": 21408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 21347,
											"end": 21408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21347,
											"end": 21408,
											"name": "tag",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 21347,
											"end": 21408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21337,
											"end": 21408,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21337,
											"end": 21408,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21293,
											"end": 21418,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21080,
											"end": 21425,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21080,
											"end": 21425,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21080,
											"end": 21425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21080,
											"end": 21425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21080,
											"end": 21425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21431,
											"end": 21602,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 21431,
											"end": 21602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21571,
											"end": 21594,
											"name": "PUSH",
											"source": 15,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 21567,
											"end": 21568,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21559,
											"end": 21565,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21555,
											"end": 21569,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21548,
											"end": 21595,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21431,
											"end": 21602,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21431,
											"end": 21602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21608,
											"end": 21974,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 21608,
											"end": 21974,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21750,
											"end": 21753,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21771,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 21835,
											"end": 21837,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 21830,
											"end": 21833,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21771,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 21771,
											"end": 21838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21771,
											"end": 21838,
											"name": "tag",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 21771,
											"end": 21838,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21764,
											"end": 21838,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21764,
											"end": 21838,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21847,
											"end": 21940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 21936,
											"end": 21939,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21847,
											"end": 21940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 21847,
											"end": 21940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21847,
											"end": 21940,
											"name": "tag",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 21847,
											"end": 21940,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21965,
											"end": 21967,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21960,
											"end": 21963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21956,
											"end": 21968,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21949,
											"end": 21968,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21949,
											"end": 21968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21608,
											"end": 21974,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21608,
											"end": 21974,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21608,
											"end": 21974,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21608,
											"end": 21974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21980,
											"end": 22399,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 21980,
											"end": 22399,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22146,
											"end": 22150,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22184,
											"end": 22186,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22173,
											"end": 22182,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22169,
											"end": 22187,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22161,
											"end": 22187,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22161,
											"end": 22187,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22233,
											"end": 22242,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22227,
											"end": 22231,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22223,
											"end": 22243,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22219,
											"end": 22220,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22208,
											"end": 22217,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22204,
											"end": 22221,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22197,
											"end": 22244,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22261,
											"end": 22392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 22387,
											"end": 22391,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22261,
											"end": 22392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 22261,
											"end": 22392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22261,
											"end": 22392,
											"name": "tag",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 22261,
											"end": 22392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22253,
											"end": 22392,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22253,
											"end": 22392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21980,
											"end": 22399,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21980,
											"end": 22399,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21980,
											"end": 22399,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21980,
											"end": 22399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22405,
											"end": 22737,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 22405,
											"end": 22737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22526,
											"end": 22530,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22564,
											"end": 22566,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22553,
											"end": 22562,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22549,
											"end": 22567,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22541,
											"end": 22567,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22541,
											"end": 22567,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22577,
											"end": 22648,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 22645,
											"end": 22646,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22634,
											"end": 22643,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22630,
											"end": 22647,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22621,
											"end": 22627,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22577,
											"end": 22648,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 22577,
											"end": 22648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22577,
											"end": 22648,
											"name": "tag",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 22577,
											"end": 22648,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22658,
											"end": 22730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 22726,
											"end": 22728,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22715,
											"end": 22724,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22711,
											"end": 22729,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22702,
											"end": 22708,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22658,
											"end": 22730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 22658,
											"end": 22730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22658,
											"end": 22730,
											"name": "tag",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 22658,
											"end": 22730,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22405,
											"end": 22737,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22405,
											"end": 22737,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22405,
											"end": 22737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22405,
											"end": 22737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22405,
											"end": 22737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22405,
											"end": 22737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22743,
											"end": 22976,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 22743,
											"end": 22976,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22782,
											"end": 22785,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22805,
											"end": 22829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "698"
										},
										{
											"begin": 22823,
											"end": 22828,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22805,
											"end": 22829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 22805,
											"end": 22829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22805,
											"end": 22829,
											"name": "tag",
											"source": 15,
											"value": "698"
										},
										{
											"begin": 22805,
											"end": 22829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22796,
											"end": 22829,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22796,
											"end": 22829,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 22917,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22844,
											"end": 22849,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22841,
											"end": 22918,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22838,
											"end": 22941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "699"
										},
										{
											"begin": 22838,
											"end": 22941,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 22921,
											"end": 22939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 22921,
											"end": 22939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 22921,
											"end": 22939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22921,
											"end": 22939,
											"name": "tag",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 22921,
											"end": 22939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22838,
											"end": 22941,
											"name": "tag",
											"source": 15,
											"value": "699"
										},
										{
											"begin": 22838,
											"end": 22941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22968,
											"end": 22969,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 22961,
											"end": 22966,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22957,
											"end": 22970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22950,
											"end": 22970,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22950,
											"end": 22970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22743,
											"end": 22976,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22743,
											"end": 22976,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22743,
											"end": 22976,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22743,
											"end": 22976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22982,
											"end": 23123,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 22982,
											"end": 23123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23031,
											"end": 23035,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23054,
											"end": 23057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23046,
											"end": 23057,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23046,
											"end": 23057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23077,
											"end": 23080,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23074,
											"end": 23075,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23067,
											"end": 23081,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23111,
											"end": 23115,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23108,
											"end": 23109,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23098,
											"end": 23116,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 23090,
											"end": 23116,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23090,
											"end": 23116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22982,
											"end": 23123,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22982,
											"end": 23123,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22982,
											"end": 23123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22982,
											"end": 23123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23222,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 23129,
											"end": 23222,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23166,
											"end": 23172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23213,
											"end": 23215,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23208,
											"end": 23210,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 23201,
											"end": 23206,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23197,
											"end": 23211,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23193,
											"end": 23216,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 23183,
											"end": 23216,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23183,
											"end": 23216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23222,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23222,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23222,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23228,
											"end": 23335,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 23228,
											"end": 23335,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23272,
											"end": 23280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23322,
											"end": 23327,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23316,
											"end": 23320,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23312,
											"end": 23328,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 23291,
											"end": 23328,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23291,
											"end": 23328,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23228,
											"end": 23335,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23228,
											"end": 23335,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23228,
											"end": 23335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23228,
											"end": 23335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23228,
											"end": 23335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23341,
											"end": 23734,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 23341,
											"end": 23734,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23410,
											"end": 23416,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23460,
											"end": 23461,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 23448,
											"end": 23458,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23444,
											"end": 23462,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 23483,
											"end": 23580,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "705"
										},
										{
											"begin": 23513,
											"end": 23579,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23502,
											"end": 23511,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23483,
											"end": 23580,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 23483,
											"end": 23580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23483,
											"end": 23580,
											"name": "tag",
											"source": 15,
											"value": "705"
										},
										{
											"begin": 23483,
											"end": 23580,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "706"
										},
										{
											"begin": 23631,
											"end": 23639,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 23620,
											"end": 23629,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 23601,
											"end": 23640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "tag",
											"source": 15,
											"value": "706"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23589,
											"end": 23640,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 23589,
											"end": 23640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23673,
											"end": 23677,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 23669,
											"end": 23678,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 23662,
											"end": 23667,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23658,
											"end": 23679,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 23649,
											"end": 23679,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 23649,
											"end": 23679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23722,
											"end": 23726,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 23712,
											"end": 23720,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 23708,
											"end": 23727,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 23701,
											"end": 23706,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23698,
											"end": 23728,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 23688,
											"end": 23728,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23688,
											"end": 23728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23417,
											"end": 23734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23417,
											"end": 23734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23341,
											"end": 23734,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 23341,
											"end": 23734,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23341,
											"end": 23734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23341,
											"end": 23734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23341,
											"end": 23734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23341,
											"end": 23734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23882,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 23740,
											"end": 23882,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23790,
											"end": 23799,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23823,
											"end": 23876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "708"
										},
										{
											"begin": 23841,
											"end": 23875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "709"
										},
										{
											"begin": 23850,
											"end": 23874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "710"
										},
										{
											"begin": 23868,
											"end": 23873,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23850,
											"end": 23874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 23850,
											"end": 23874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23850,
											"end": 23874,
											"name": "tag",
											"source": 15,
											"value": "710"
										},
										{
											"begin": 23850,
											"end": 23874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23841,
											"end": 23875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 23841,
											"end": 23875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23841,
											"end": 23875,
											"name": "tag",
											"source": 15,
											"value": "709"
										},
										{
											"begin": 23841,
											"end": 23875,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23823,
											"end": 23876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 23823,
											"end": 23876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23823,
											"end": 23876,
											"name": "tag",
											"source": 15,
											"value": "708"
										},
										{
											"begin": 23823,
											"end": 23876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23810,
											"end": 23876,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23810,
											"end": 23876,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23882,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23882,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23888,
											"end": 23963,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 23888,
											"end": 23963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23931,
											"end": 23934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23952,
											"end": 23957,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23945,
											"end": 23957,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23945,
											"end": 23957,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23888,
											"end": 23963,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23888,
											"end": 23963,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23888,
											"end": 23963,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23888,
											"end": 23963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23969,
											"end": 24238,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 23969,
											"end": 24238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24079,
											"end": 24118,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "713"
										},
										{
											"begin": 24110,
											"end": 24117,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24079,
											"end": 24118,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 24079,
											"end": 24118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24079,
											"end": 24118,
											"name": "tag",
											"source": 15,
											"value": "713"
										},
										{
											"begin": 24079,
											"end": 24118,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24140,
											"end": 24231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "714"
										},
										{
											"begin": 24189,
											"end": 24230,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "715"
										},
										{
											"begin": 24213,
											"end": 24229,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24189,
											"end": 24230,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 24189,
											"end": 24230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24189,
											"end": 24230,
											"name": "tag",
											"source": 15,
											"value": "715"
										},
										{
											"begin": 24189,
											"end": 24230,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24181,
											"end": 24187,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24174,
											"end": 24178,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24168,
											"end": 24179,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 24140,
											"end": 24231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 24140,
											"end": 24231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24140,
											"end": 24231,
											"name": "tag",
											"source": 15,
											"value": "714"
										},
										{
											"begin": 24140,
											"end": 24231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24134,
											"end": 24138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24127,
											"end": 24232,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 24045,
											"end": 24238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23969,
											"end": 24238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23969,
											"end": 24238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23969,
											"end": 24238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23969,
											"end": 24238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24244,
											"end": 24317,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 24244,
											"end": 24317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24289,
											"end": 24292,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24244,
											"end": 24317,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24244,
											"end": 24317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24323,
											"end": 24512,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 24323,
											"end": 24512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24400,
											"end": 24432,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "718"
										},
										{
											"begin": 24400,
											"end": 24432,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 24400,
											"end": 24432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24400,
											"end": 24432,
											"name": "tag",
											"source": 15,
											"value": "718"
										},
										{
											"begin": 24400,
											"end": 24432,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24441,
											"end": 24506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "719"
										},
										{
											"begin": 24499,
											"end": 24505,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24491,
											"end": 24497,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24485,
											"end": 24489,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24441,
											"end": 24506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 24441,
											"end": 24506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24441,
											"end": 24506,
											"name": "tag",
											"source": 15,
											"value": "719"
										},
										{
											"begin": 24441,
											"end": 24506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24376,
											"end": 24512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24323,
											"end": 24512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24323,
											"end": 24512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24323,
											"end": 24512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24518,
											"end": 24704,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 24518,
											"end": 24704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "tag",
											"source": 15,
											"value": "721"
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24595,
											"end": 24598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24588,
											"end": 24593,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24585,
											"end": 24599,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 24649,
											"end": 24688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "724"
										},
										{
											"begin": 24686,
											"end": 24687,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24679,
											"end": 24684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24649,
											"end": 24688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 24649,
											"end": 24688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24649,
											"end": 24688,
											"name": "tag",
											"source": 15,
											"value": "724"
										},
										{
											"begin": 24649,
											"end": 24688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24622,
											"end": 24623,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 24615,
											"end": 24620,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24611,
											"end": 24624,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24602,
											"end": 24624,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24602,
											"end": 24624,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "721"
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "tag",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 24578,
											"end": 24698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24518,
											"end": 24704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24518,
											"end": 24704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24518,
											"end": 24704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24710,
											"end": 25253,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 24710,
											"end": 25253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24811,
											"end": 24813,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 24806,
											"end": 24809,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24803,
											"end": 24814,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 24800,
											"end": 25246,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 24800,
											"end": 25246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "726"
										},
										{
											"begin": 24800,
											"end": 25246,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 24845,
											"end": 24883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "727"
										},
										{
											"begin": 24877,
											"end": 24882,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24845,
											"end": 24883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 24845,
											"end": 24883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24845,
											"end": 24883,
											"name": "tag",
											"source": 15,
											"value": "727"
										},
										{
											"begin": 24845,
											"end": 24883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24929,
											"end": 24958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 24947,
											"end": 24957,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24929,
											"end": 24958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 24929,
											"end": 24958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24929,
											"end": 24958,
											"name": "tag",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 24929,
											"end": 24958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24919,
											"end": 24927,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24915,
											"end": 24959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25112,
											"end": 25114,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25100,
											"end": 25110,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 25097,
											"end": 25115,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 25094,
											"end": 25143,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 25094,
											"end": 25143,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 25094,
											"end": 25143,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 25133,
											"end": 25141,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25118,
											"end": 25141,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25118,
											"end": 25141,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25094,
											"end": 25143,
											"name": "tag",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 25094,
											"end": 25143,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25156,
											"end": 25236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "730"
										},
										{
											"begin": 25212,
											"end": 25234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 25230,
											"end": 25233,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 25212,
											"end": 25234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 25212,
											"end": 25234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25212,
											"end": 25234,
											"name": "tag",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 25212,
											"end": 25234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25202,
											"end": 25210,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25198,
											"end": 25235,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25185,
											"end": 25196,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25156,
											"end": 25236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 25156,
											"end": 25236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25156,
											"end": 25236,
											"name": "tag",
											"source": 15,
											"value": "730"
										},
										{
											"begin": 25156,
											"end": 25236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24815,
											"end": 25246,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24815,
											"end": 25246,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24800,
											"end": 25246,
											"name": "tag",
											"source": 15,
											"value": "726"
										},
										{
											"begin": 24800,
											"end": 25246,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24710,
											"end": 25253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24710,
											"end": 25253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24710,
											"end": 25253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24710,
											"end": 25253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25259,
											"end": 25376,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 25259,
											"end": 25376,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25313,
											"end": 25321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25363,
											"end": 25368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25357,
											"end": 25361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25353,
											"end": 25369,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 25332,
											"end": 25369,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25332,
											"end": 25369,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25259,
											"end": 25376,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25259,
											"end": 25376,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25259,
											"end": 25376,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25259,
											"end": 25376,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25259,
											"end": 25376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25382,
											"end": 25551,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 25382,
											"end": 25551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25426,
											"end": 25432,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25459,
											"end": 25510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 25507,
											"end": 25508,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25503,
											"end": 25509,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 25495,
											"end": 25500,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 25492,
											"end": 25493,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 25488,
											"end": 25501,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 25459,
											"end": 25510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 25459,
											"end": 25510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25459,
											"end": 25510,
											"name": "tag",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 25459,
											"end": 25510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25455,
											"end": 25511,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 25540,
											"end": 25544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 25534,
											"end": 25538,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25530,
											"end": 25545,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 25520,
											"end": 25545,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25520,
											"end": 25545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25433,
											"end": 25551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25382,
											"end": 25551,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25382,
											"end": 25551,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25382,
											"end": 25551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25382,
											"end": 25551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25382,
											"end": 25551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25851,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 25556,
											"end": 25851,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25632,
											"end": 25636,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25778,
											"end": 25807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "736"
										},
										{
											"begin": 25803,
											"end": 25806,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25797,
											"end": 25801,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25778,
											"end": 25807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 25778,
											"end": 25807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25778,
											"end": 25807,
											"name": "tag",
											"source": 15,
											"value": "736"
										},
										{
											"begin": 25778,
											"end": 25807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25770,
											"end": 25807,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25770,
											"end": 25807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25840,
											"end": 25843,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25837,
											"end": 25838,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 25833,
											"end": 25844,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 25827,
											"end": 25831,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25824,
											"end": 25845,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 25816,
											"end": 25845,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25816,
											"end": 25845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25851,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25851,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25856,
											"end": 27251,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 25856,
											"end": 27251,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25973,
											"end": 26010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "738"
										},
										{
											"begin": 26006,
											"end": 26009,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25973,
											"end": 26010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 25973,
											"end": 26010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25973,
											"end": 26010,
											"name": "tag",
											"source": 15,
											"value": "738"
										},
										{
											"begin": 25973,
											"end": 26010,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26075,
											"end": 26093,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26067,
											"end": 26073,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26064,
											"end": 26094,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 26061,
											"end": 26117,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26061,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "739"
										},
										{
											"begin": 26061,
											"end": 26117,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26097,
											"end": 26115,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "740"
										},
										{
											"begin": 26097,
											"end": 26115,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 26097,
											"end": 26115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26097,
											"end": 26115,
											"name": "tag",
											"source": 15,
											"value": "740"
										},
										{
											"begin": 26097,
											"end": 26115,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26061,
											"end": 26117,
											"name": "tag",
											"source": 15,
											"value": "739"
										},
										{
											"begin": 26061,
											"end": 26117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26141,
											"end": 26179,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "741"
										},
										{
											"begin": 26173,
											"end": 26177,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 26141,
											"end": 26179,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 26141,
											"end": 26179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26141,
											"end": 26179,
											"name": "tag",
											"source": 15,
											"value": "741"
										},
										{
											"begin": 26141,
											"end": 26179,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26226,
											"end": 26293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "742"
										},
										{
											"begin": 26286,
											"end": 26292,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26278,
											"end": 26284,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26272,
											"end": 26276,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26226,
											"end": 26293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 26226,
											"end": 26293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26226,
											"end": 26293,
											"name": "tag",
											"source": 15,
											"value": "742"
										},
										{
											"begin": 26226,
											"end": 26293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26320,
											"end": 26321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26344,
											"end": 26348,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26331,
											"end": 26348,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26331,
											"end": 26348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26376,
											"end": 26378,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 26368,
											"end": 26374,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26365,
											"end": 26379,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 26393,
											"end": 26394,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 26388,
											"end": 27006,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26388,
											"end": 27006,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 26388,
											"end": 27006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "744"
										},
										{
											"begin": 26388,
											"end": 27006,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 27050,
											"end": 27051,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27067,
											"end": 27073,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27064,
											"end": 27141,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 27064,
											"end": 27141,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "745"
										},
										{
											"begin": 27064,
											"end": 27141,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 27116,
											"end": 27125,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27111,
											"end": 27114,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 27107,
											"end": 27126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27101,
											"end": 27127,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 27092,
											"end": 27127,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27092,
											"end": 27127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27064,
											"end": 27141,
											"name": "tag",
											"source": 15,
											"value": "745"
										},
										{
											"begin": 27064,
											"end": 27141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27167,
											"end": 27234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "746"
										},
										{
											"begin": 27227,
											"end": 27233,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27220,
											"end": 27225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27167,
											"end": 27234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 27167,
											"end": 27234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27167,
											"end": 27234,
											"name": "tag",
											"source": 15,
											"value": "746"
										},
										{
											"begin": 27167,
											"end": 27234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27161,
											"end": 27165,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27154,
											"end": 27235,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 27023,
											"end": 27245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26358,
											"end": 27245,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 26358,
											"end": 27245,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26388,
											"end": 27006,
											"name": "tag",
											"source": 15,
											"value": "744"
										},
										{
											"begin": 26388,
											"end": 27006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26440,
											"end": 26444,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 26436,
											"end": 26445,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 26428,
											"end": 26434,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26424,
											"end": 26446,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 26474,
											"end": 26511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "747"
										},
										{
											"begin": 26506,
											"end": 26510,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 26474,
											"end": 26511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 26474,
											"end": 26511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26474,
											"end": 26511,
											"name": "tag",
											"source": 15,
											"value": "747"
										},
										{
											"begin": 26474,
											"end": 26511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26533,
											"end": 26534,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "tag",
											"source": 15,
											"value": "748"
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26561,
											"end": 26568,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26558,
											"end": 26559,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26555,
											"end": 26569,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "750"
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26640,
											"end": 26649,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26635,
											"end": 26638,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 26631,
											"end": 26650,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26625,
											"end": 26651,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 26617,
											"end": 26623,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26610,
											"end": 26652,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26691,
											"end": 26692,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 26683,
											"end": 26689,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26679,
											"end": 26693,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26669,
											"end": 26693,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26669,
											"end": 26693,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26738,
											"end": 26740,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26727,
											"end": 26736,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26723,
											"end": 26741,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26710,
											"end": 26741,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 26710,
											"end": 26741,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26584,
											"end": 26588,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26581,
											"end": 26582,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26577,
											"end": 26589,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26572,
											"end": 26589,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26572,
											"end": 26589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "748"
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "tag",
											"source": 15,
											"value": "750"
										},
										{
											"begin": 26547,
											"end": 26755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26783,
											"end": 26789,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 26774,
											"end": 26781,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26771,
											"end": 26790,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 26768,
											"end": 26947,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26768,
											"end": 26947,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "751"
										},
										{
											"begin": 26768,
											"end": 26947,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26841,
											"end": 26850,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26836,
											"end": 26839,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 26832,
											"end": 26851,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26826,
											"end": 26852,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 26884,
											"end": 26932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "752"
										},
										{
											"begin": 26926,
											"end": 26930,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 26918,
											"end": 26924,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 26914,
											"end": 26931,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 26903,
											"end": 26912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26884,
											"end": 26932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 26884,
											"end": 26932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26884,
											"end": 26932,
											"name": "tag",
											"source": 15,
											"value": "752"
										},
										{
											"begin": 26884,
											"end": 26932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26876,
											"end": 26882,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26869,
											"end": 26933,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26791,
											"end": 26947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26768,
											"end": 26947,
											"name": "tag",
											"source": 15,
											"value": "751"
										},
										{
											"begin": 26768,
											"end": 26947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26993,
											"end": 26994,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 26989,
											"end": 26990,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 26981,
											"end": 26987,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 26977,
											"end": 26991,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 26973,
											"end": 26995,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26967,
											"end": 26971,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 26960,
											"end": 26996,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26395,
											"end": 27006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26395,
											"end": 27006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26395,
											"end": 27006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26358,
											"end": 27245,
											"name": "tag",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 26358,
											"end": 27245,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26358,
											"end": 27245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25948,
											"end": 27251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25948,
											"end": 27251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25948,
											"end": 27251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25856,
											"end": 27251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25856,
											"end": 27251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25856,
											"end": 27251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27257,
											"end": 27405,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 27257,
											"end": 27405,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27359,
											"end": 27370,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27396,
											"end": 27399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27381,
											"end": 27399,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27381,
											"end": 27399,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27257,
											"end": 27405,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27257,
											"end": 27405,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27257,
											"end": 27405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27257,
											"end": 27405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27257,
											"end": 27405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27411,
											"end": 27801,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 27411,
											"end": 27801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27517,
											"end": 27520,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27545,
											"end": 27584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "755"
										},
										{
											"begin": 27578,
											"end": 27583,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27545,
											"end": 27584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 27545,
											"end": 27584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27545,
											"end": 27584,
											"name": "tag",
											"source": 15,
											"value": "755"
										},
										{
											"begin": 27545,
											"end": 27584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27600,
											"end": 27689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "756"
										},
										{
											"begin": 27682,
											"end": 27688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27677,
											"end": 27680,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27600,
											"end": 27689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 27600,
											"end": 27689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27600,
											"end": 27689,
											"name": "tag",
											"source": 15,
											"value": "756"
										},
										{
											"begin": 27600,
											"end": 27689,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27593,
											"end": 27689,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 27593,
											"end": 27689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27698,
											"end": 27763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "757"
										},
										{
											"begin": 27756,
											"end": 27762,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27751,
											"end": 27754,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27744,
											"end": 27748,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27737,
											"end": 27742,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27733,
											"end": 27749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27698,
											"end": 27763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 27698,
											"end": 27763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27698,
											"end": 27763,
											"name": "tag",
											"source": 15,
											"value": "757"
										},
										{
											"begin": 27698,
											"end": 27763,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27788,
											"end": 27794,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 27783,
											"end": 27786,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27779,
											"end": 27795,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27772,
											"end": 27795,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27772,
											"end": 27795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27521,
											"end": 27801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27411,
											"end": 27801,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27411,
											"end": 27801,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27411,
											"end": 27801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27411,
											"end": 27801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27411,
											"end": 27801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27807,
											"end": 28242,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 27807,
											"end": 28242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27987,
											"end": 27990,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28009,
											"end": 28104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "759"
										},
										{
											"begin": 28100,
											"end": 28103,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28091,
											"end": 28097,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28009,
											"end": 28104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 28009,
											"end": 28104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28009,
											"end": 28104,
											"name": "tag",
											"source": 15,
											"value": "759"
										},
										{
											"begin": 28009,
											"end": 28104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28002,
											"end": 28104,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28002,
											"end": 28104,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28121,
											"end": 28216,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "760"
										},
										{
											"begin": 28212,
											"end": 28215,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28203,
											"end": 28209,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28121,
											"end": 28216,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 28121,
											"end": 28216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28121,
											"end": 28216,
											"name": "tag",
											"source": 15,
											"value": "760"
										},
										{
											"begin": 28121,
											"end": 28216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28114,
											"end": 28216,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28114,
											"end": 28216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28233,
											"end": 28236,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28226,
											"end": 28236,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28226,
											"end": 28236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27807,
											"end": 28242,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 27807,
											"end": 28242,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27807,
											"end": 28242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27807,
											"end": 28242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27807,
											"end": 28242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27807,
											"end": 28242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28248,
											"end": 28473,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 28248,
											"end": 28473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28388,
											"end": 28422,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 28384,
											"end": 28385,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28376,
											"end": 28382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28372,
											"end": 28386,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28365,
											"end": 28423,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28457,
											"end": 28465,
											"name": "PUSH",
											"source": 15,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28452,
											"end": 28454,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28444,
											"end": 28450,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28440,
											"end": 28455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28433,
											"end": 28466,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28248,
											"end": 28473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28248,
											"end": 28473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28479,
											"end": 28845,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 28479,
											"end": 28845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28621,
											"end": 28624,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28642,
											"end": 28709,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "763"
										},
										{
											"begin": 28706,
											"end": 28708,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 28701,
											"end": 28704,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28642,
											"end": 28709,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 28642,
											"end": 28709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28642,
											"end": 28709,
											"name": "tag",
											"source": 15,
											"value": "763"
										},
										{
											"begin": 28642,
											"end": 28709,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28635,
											"end": 28709,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28635,
											"end": 28709,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28718,
											"end": 28811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "764"
										},
										{
											"begin": 28807,
											"end": 28810,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28718,
											"end": 28811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 28718,
											"end": 28811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28718,
											"end": 28811,
											"name": "tag",
											"source": 15,
											"value": "764"
										},
										{
											"begin": 28718,
											"end": 28811,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28836,
											"end": 28838,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 28831,
											"end": 28834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28827,
											"end": 28839,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28820,
											"end": 28839,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28820,
											"end": 28839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28479,
											"end": 28845,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28479,
											"end": 28845,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28479,
											"end": 28845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28479,
											"end": 28845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28851,
											"end": 29270,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 28851,
											"end": 29270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29017,
											"end": 29021,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29055,
											"end": 29057,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29044,
											"end": 29053,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29040,
											"end": 29058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29032,
											"end": 29058,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29032,
											"end": 29058,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29104,
											"end": 29113,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29098,
											"end": 29102,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29094,
											"end": 29114,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29090,
											"end": 29091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29079,
											"end": 29088,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29075,
											"end": 29092,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29068,
											"end": 29115,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29132,
											"end": 29263,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "766"
										},
										{
											"begin": 29258,
											"end": 29262,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29132,
											"end": 29263,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 29132,
											"end": 29263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29132,
											"end": 29263,
											"name": "tag",
											"source": 15,
											"value": "766"
										},
										{
											"begin": 29132,
											"end": 29263,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29124,
											"end": 29263,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29124,
											"end": 29263,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28851,
											"end": 29270,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28851,
											"end": 29270,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28851,
											"end": 29270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28851,
											"end": 29270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29276,
											"end": 29458,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 29276,
											"end": 29458,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29416,
											"end": 29450,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 29412,
											"end": 29413,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29404,
											"end": 29410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29400,
											"end": 29414,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29393,
											"end": 29451,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29276,
											"end": 29458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29276,
											"end": 29458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29464,
											"end": 29830,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 29464,
											"end": 29830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29606,
											"end": 29609,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29627,
											"end": 29694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "769"
										},
										{
											"begin": 29691,
											"end": 29693,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29686,
											"end": 29689,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29627,
											"end": 29694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 29627,
											"end": 29694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29627,
											"end": 29694,
											"name": "tag",
											"source": 15,
											"value": "769"
										},
										{
											"begin": 29627,
											"end": 29694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29620,
											"end": 29694,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29620,
											"end": 29694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29703,
											"end": 29796,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "770"
										},
										{
											"begin": 29792,
											"end": 29795,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29703,
											"end": 29796,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 29703,
											"end": 29796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29703,
											"end": 29796,
											"name": "tag",
											"source": 15,
											"value": "770"
										},
										{
											"begin": 29703,
											"end": 29796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29821,
											"end": 29823,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29816,
											"end": 29819,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29812,
											"end": 29824,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29805,
											"end": 29824,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29805,
											"end": 29824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29464,
											"end": 29830,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29464,
											"end": 29830,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29464,
											"end": 29830,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29464,
											"end": 29830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29836,
											"end": 30255,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 29836,
											"end": 30255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30002,
											"end": 30006,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30040,
											"end": 30042,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30029,
											"end": 30038,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30043,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30017,
											"end": 30043,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30017,
											"end": 30043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30089,
											"end": 30098,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30083,
											"end": 30087,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30079,
											"end": 30099,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30075,
											"end": 30076,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30064,
											"end": 30073,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30060,
											"end": 30077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30053,
											"end": 30100,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30117,
											"end": 30248,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "772"
										},
										{
											"begin": 30243,
											"end": 30247,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30117,
											"end": 30248,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 30117,
											"end": 30248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30117,
											"end": 30248,
											"name": "tag",
											"source": 15,
											"value": "772"
										},
										{
											"begin": 30117,
											"end": 30248,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30109,
											"end": 30248,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30109,
											"end": 30248,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29836,
											"end": 30255,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29836,
											"end": 30255,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29836,
											"end": 30255,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29836,
											"end": 30255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30261,
											"end": 30359,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 30261,
											"end": 30359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30312,
											"end": 30318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30346,
											"end": 30351,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30340,
											"end": 30352,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 30330,
											"end": 30352,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30330,
											"end": 30352,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30261,
											"end": 30359,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30261,
											"end": 30359,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30261,
											"end": 30359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30261,
											"end": 30359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30365,
											"end": 30533,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 30365,
											"end": 30533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30448,
											"end": 30459,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30482,
											"end": 30488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30477,
											"end": 30480,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30470,
											"end": 30489,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30522,
											"end": 30526,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30517,
											"end": 30520,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30513,
											"end": 30527,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30498,
											"end": 30527,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30498,
											"end": 30527,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30365,
											"end": 30533,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30365,
											"end": 30533,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30365,
											"end": 30533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30365,
											"end": 30533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30365,
											"end": 30533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30912,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 30539,
											"end": 30912,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30625,
											"end": 30628,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30653,
											"end": 30691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "776"
										},
										{
											"begin": 30685,
											"end": 30690,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30653,
											"end": 30691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 30653,
											"end": 30691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30653,
											"end": 30691,
											"name": "tag",
											"source": 15,
											"value": "776"
										},
										{
											"begin": 30653,
											"end": 30691,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30707,
											"end": 30777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "777"
										},
										{
											"begin": 30770,
											"end": 30776,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30765,
											"end": 30768,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 30707,
											"end": 30777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 30707,
											"end": 30777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30707,
											"end": 30777,
											"name": "tag",
											"source": 15,
											"value": "777"
										},
										{
											"begin": 30707,
											"end": 30777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30700,
											"end": 30777,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 30700,
											"end": 30777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30786,
											"end": 30851,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "778"
										},
										{
											"begin": 30844,
											"end": 30850,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30839,
											"end": 30842,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 30832,
											"end": 30836,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30825,
											"end": 30830,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 30821,
											"end": 30837,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30786,
											"end": 30851,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 30786,
											"end": 30851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30786,
											"end": 30851,
											"name": "tag",
											"source": 15,
											"value": "778"
										},
										{
											"begin": 30786,
											"end": 30851,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30876,
											"end": 30905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "779"
										},
										{
											"begin": 30898,
											"end": 30904,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30876,
											"end": 30905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 30876,
											"end": 30905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30876,
											"end": 30905,
											"name": "tag",
											"source": 15,
											"value": "779"
										},
										{
											"begin": 30876,
											"end": 30905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30871,
											"end": 30874,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30867,
											"end": 30906,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30860,
											"end": 30906,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30860,
											"end": 30906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30629,
											"end": 30912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30912,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30912,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31113,
											"end": 31117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31151,
											"end": 31154,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 31140,
											"end": 31149,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31136,
											"end": 31155,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31128,
											"end": 31155,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31128,
											"end": 31155,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31165,
											"end": 31236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "781"
										},
										{
											"begin": 31233,
											"end": 31234,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31222,
											"end": 31231,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31218,
											"end": 31235,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31209,
											"end": 31215,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 31165,
											"end": 31236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 31165,
											"end": 31236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31165,
											"end": 31236,
											"name": "tag",
											"source": 15,
											"value": "781"
										},
										{
											"begin": 31165,
											"end": 31236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31246,
											"end": 31318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "782"
										},
										{
											"begin": 31314,
											"end": 31316,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31303,
											"end": 31312,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31299,
											"end": 31317,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31290,
											"end": 31296,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 31246,
											"end": 31318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 31246,
											"end": 31318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31246,
											"end": 31318,
											"name": "tag",
											"source": 15,
											"value": "782"
										},
										{
											"begin": 31246,
											"end": 31318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31328,
											"end": 31400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "783"
										},
										{
											"begin": 31396,
											"end": 31398,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 31385,
											"end": 31394,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31381,
											"end": 31399,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31372,
											"end": 31378,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 31328,
											"end": 31400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 31328,
											"end": 31400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31328,
											"end": 31400,
											"name": "tag",
											"source": 15,
											"value": "783"
										},
										{
											"begin": 31328,
											"end": 31400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31447,
											"end": 31456,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31441,
											"end": 31445,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31437,
											"end": 31457,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31432,
											"end": 31434,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 31421,
											"end": 31430,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31417,
											"end": 31435,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31410,
											"end": 31458,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31475,
											"end": 31551,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "784"
										},
										{
											"begin": 31546,
											"end": 31550,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31537,
											"end": 31543,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31475,
											"end": 31551,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 31475,
											"end": 31551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31475,
											"end": 31551,
											"name": "tag",
											"source": 15,
											"value": "784"
										},
										{
											"begin": 31475,
											"end": 31551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31467,
											"end": 31551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31467,
											"end": 31551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30918,
											"end": 31558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31564,
											"end": 31705,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 31564,
											"end": 31705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31620,
											"end": 31625,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31651,
											"end": 31657,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31645,
											"end": 31658,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 31636,
											"end": 31658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31636,
											"end": 31658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31667,
											"end": 31699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "786"
										},
										{
											"begin": 31693,
											"end": 31698,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31667,
											"end": 31699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 31667,
											"end": 31699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31667,
											"end": 31699,
											"name": "tag",
											"source": 15,
											"value": "786"
										},
										{
											"begin": 31667,
											"end": 31699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31564,
											"end": 31705,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31564,
											"end": 31705,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31564,
											"end": 31705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31564,
											"end": 31705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31564,
											"end": 31705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31711,
											"end": 32060,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 31711,
											"end": 32060,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31780,
											"end": 31786,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31829,
											"end": 31831,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31817,
											"end": 31826,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31808,
											"end": 31815,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31804,
											"end": 31827,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31800,
											"end": 31832,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 31797,
											"end": 31916,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 31797,
											"end": 31916,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "788"
										},
										{
											"begin": 31797,
											"end": 31916,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 31835,
											"end": 31914,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "789"
										},
										{
											"begin": 31835,
											"end": 31914,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 31835,
											"end": 31914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31835,
											"end": 31914,
											"name": "tag",
											"source": 15,
											"value": "789"
										},
										{
											"begin": 31835,
											"end": 31914,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31797,
											"end": 31916,
											"name": "tag",
											"source": 15,
											"value": "788"
										},
										{
											"begin": 31797,
											"end": 31916,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31955,
											"end": 31956,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31980,
											"end": 32043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "790"
										},
										{
											"begin": 32035,
											"end": 32042,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 32026,
											"end": 32032,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32015,
											"end": 32024,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 32011,
											"end": 32033,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31980,
											"end": 32043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 31980,
											"end": 32043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31980,
											"end": 32043,
											"name": "tag",
											"source": 15,
											"value": "790"
										},
										{
											"begin": 31980,
											"end": 32043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31970,
											"end": 32043,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31970,
											"end": 32043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31926,
											"end": 32053,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31711,
											"end": 32060,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31711,
											"end": 32060,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31711,
											"end": 32060,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31711,
											"end": 32060,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31711,
											"end": 32060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32066,
											"end": 32246,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 32066,
											"end": 32246,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32114,
											"end": 32191,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32111,
											"end": 32112,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32104,
											"end": 32192,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 32211,
											"end": 32215,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 32208,
											"end": 32209,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 32201,
											"end": 32216,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 32235,
											"end": 32239,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 32232,
											"end": 32233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32225,
											"end": 32240,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 32252,
											"end": 32584,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 32252,
											"end": 32584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32373,
											"end": 32377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32411,
											"end": 32413,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 32400,
											"end": 32409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32396,
											"end": 32414,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32388,
											"end": 32414,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32388,
											"end": 32414,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32424,
											"end": 32495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "793"
										},
										{
											"begin": 32492,
											"end": 32493,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32481,
											"end": 32490,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32477,
											"end": 32494,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32468,
											"end": 32474,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 32424,
											"end": 32495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 32424,
											"end": 32495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32424,
											"end": 32495,
											"name": "tag",
											"source": 15,
											"value": "793"
										},
										{
											"begin": 32424,
											"end": 32495,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32505,
											"end": 32577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "794"
										},
										{
											"begin": 32573,
											"end": 32575,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32562,
											"end": 32571,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32558,
											"end": 32576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32549,
											"end": 32555,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 32505,
											"end": 32577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 32505,
											"end": 32577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32505,
											"end": 32577,
											"name": "tag",
											"source": 15,
											"value": "794"
										},
										{
											"begin": 32505,
											"end": 32577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32252,
											"end": 32584,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 32252,
											"end": 32584,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32252,
											"end": 32584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32252,
											"end": 32584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32252,
											"end": 32584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32252,
											"end": 32584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Simplify/productStore.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addProduct(string,uint256)": "b15247d9",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyProduct(uint256)": "8642269e",
							"getApproved(uint256)": "081812fc",
							"getUserProductDetails(address)": "019d2fbf",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"nextProductId()": "4de91a63",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"products(uint256)": "7acc0b20",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"token()": "fc0c546a",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"userPurchases(address,uint256)": "cf2c0334"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"BuyProduct\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_productId\",\"type\":\"uint256\"}],\"name\":\"buyProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserProductDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ProductStore.Product[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextProductId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPurchases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Simplify/productStore.sol\":\"ProductStore\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Simplify/productStore.sol\":{\"keccak256\":\"0xf261e651a4e405c771fc87e1721fbeb3c67be2222f45481dc15e756b82e7b778\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://678ca0ffbb0de604557cdefa07d3430736d9d991bf3122bbb53a911d1ade1d91\",\"dweb:/ipfs/QmVDobKtLKxdGu2Jg7XYutWTibwcHEgvMtZFaCLVPNTwXv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 360,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 362,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 366,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 370,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 374,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 380,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 7,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 3058,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "token",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IERC20)327"
							},
							{
								"astId": 3065,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "_billIds",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)1527_storage"
							},
							{
								"astId": 3085,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "products",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(Product)3080_storage)"
							},
							{
								"astId": 3090,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "userPurchases",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 3092,
								"contract": "contracts/Simplify/productStore.sol:ProductStore",
								"label": "nextProductId",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)327": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(Product)3080_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ProductStore.Product)",
								"numberOfBytes": "32",
								"value": "t_struct(Product)3080_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1527_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1526,
										"contract": "contracts/Simplify/productStore.sol:ProductStore",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Product)3080_storage": {
								"encoding": "inplace",
								"label": "struct ProductStore.Product",
								"members": [
									{
										"astId": 3075,
										"contract": "contracts/Simplify/productStore.sol:ProductStore",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3077,
										"contract": "contracts/Simplify/productStore.sol:ProductStore",
										"label": "name",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 3079,
										"contract": "contracts/Simplify/productStore.sol:ProductStore",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1521
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1522,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1521,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1521
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							249
						],
						"IERC20Errors": [
							154
						],
						"IERC721Errors": [
							202
						]
					},
					"id": 250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 124,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 129,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 134,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 143,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 148,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 153,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 250,
							"src": "278:1764:1",
							"usedErrors": [
								124,
								129,
								134,
								143,
								148,
								153
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 202,
							"linearizedBaseContracts": [
								202
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 160,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 165,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 174,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 179,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 184,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 191,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 196,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 201,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 250,
							"src": "2186:2092:1",
							"usedErrors": [
								160,
								165,
								174,
								179,
								184,
								191,
								196,
								201
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 203,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 249,
							"linearizedBaseContracts": [
								249
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 214,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 219,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 224,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 231,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 236,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 241,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 248,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 250,
							"src": "4424:2107:1",
							"usedErrors": [
								214,
								219,
								224,
								231,
								236,
								241,
								248
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							327
						]
					},
					"id": 328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 251,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 252,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 327,
							"linearizedBaseContracts": [
								327
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 261,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 270,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 327,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 327,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 327,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 327,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 327,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 327,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 328,
							"src": "202:2534:2",
							"usedErrors": [],
							"usedEvents": [
								261,
								270
							]
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1521
						],
						"ERC165": [
							1874
						],
						"ERC721": [
							1336
						],
						"IERC165": [
							1886
						],
						"IERC721": [
							1453
						],
						"IERC721Errors": [
							202
						],
						"IERC721Metadata": [
							1499
						],
						"IERC721Receiver": [
							1471
						],
						"Strings": [
							1850
						]
					},
					"id": 1337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1454,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 330,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1453,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1472,
							"src": "172:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1471,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1500,
							"src": "227:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 334,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1499,
										"src": "235:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1522,
							"src": "293:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 336,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1521,
										"src": "301:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1851,
							"src": "342:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 338,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1850,
										"src": "350:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1875,
							"src": "391:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 340,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1886,
										"src": "399:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 341,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1874,
										"src": "408:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 250,
							"src": "461:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 343,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 202,
										"src": "469:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 346,
										"name": "Context",
										"nameLocations": [
											"804:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1521,
										"src": "804:7:3"
									},
									"id": 347,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:3"
								},
								{
									"baseName": {
										"id": 348,
										"name": "ERC165",
										"nameLocations": [
											"813:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1874,
										"src": "813:6:3"
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:3"
								},
								{
									"baseName": {
										"id": 350,
										"name": "IERC721",
										"nameLocations": [
											"821:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1453,
										"src": "821:7:3"
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:3"
								},
								{
									"baseName": {
										"id": 352,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1499,
										"src": "830:15:3"
									},
									"id": 353,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:3"
								},
								{
									"baseName": {
										"id": 354,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 202,
										"src": "847:13:3"
									},
									"id": 355,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1336,
							"linearizedBaseContracts": [
								1336,
								202,
								1499,
								1453,
								1874,
								1886,
								1521
							],
							"name": "ERC721",
							"nameLocation": "794:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 358,
									"libraryName": {
										"id": 356,
										"name": "Strings",
										"nameLocations": [
											"873:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1850,
										"src": "873:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:3",
									"typeName": {
										"id": 357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 360,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1336,
									"src": "917:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 359,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 362,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1336,
									"src": "964:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 361,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 366,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1336,
									"src": "993:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 365,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:3",
										"keyType": {
											"id": 363,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 370,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1336,
									"src": "1051:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 369,
										"keyName": "owner",
										"keyNameLocation": "1067:5:3",
										"keyType": {
											"id": 367,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 368,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 374,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1336,
									"src": "1109:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 373,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:3",
										"keyType": {
											"id": 371,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 372,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1336,
									"src": "1175:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 379,
										"keyName": "owner",
										"keyNameLocation": "1191:5:3",
										"keyType": {
											"id": 375,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 378,
											"keyName": "operator",
											"keyNameLocation": "1216:8:3",
											"keyType": {
												"id": 376,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 377,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1437:57:3",
										"statements": [
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 388,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1447:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 389,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "1455:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:3"
											},
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "1470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "1480:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:3"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1393:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1414:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 384,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 1336,
									"src": "1381:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1873,
										1885
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1669:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1698:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 410,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1453,
																			"src": "1718:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1453_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1453_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 409,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1453",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1754:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 416,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1499,
																			"src": "1774:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1499_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1499_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 415,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1499",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 423,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1842:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 421,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1336_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1873,
															"src": "1818:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 407,
												"id": 426,
												"nodeType": "Return",
												"src": "1679:175:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 402,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1874,
												"src": "1637:6:3"
											},
											{
												"id": 403,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1886,
												"src": "1645:7:3"
											}
										],
										"src": "1628:25:3"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1588:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:3"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1663:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:3"
									},
									"scope": 1336,
									"src": "1561:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1378
									],
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "1992:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 436,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 437,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "2002:87:3",
												"trueBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "2027:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 443,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 442,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "2048:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 448,
															"nodeType": "RevertStatement",
															"src": "2041:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 451,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "2105:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 453,
													"indexExpression": {
														"id": 452,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2115:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 454,
												"nodeType": "Return",
												"src": "2098:23:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:3"
									},
									"scope": 1336,
									"src": "1920:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1386
									],
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "2257:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "2274:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 467,
												"nodeType": "Return",
												"src": "2267:29:3"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2202:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2248:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:3"
									},
									"scope": 1336,
									"src": "2185:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1484
									],
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2425:29:3",
										"statements": [
											{
												"expression": {
													"id": 475,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 360,
													"src": "2442:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 474,
												"id": 476,
												"nodeType": "Return",
												"src": "2435:12:3"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:3"
									},
									"scope": 1336,
									"src": "2365:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1490
									],
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "2580:31:3",
										"statements": [
											{
												"expression": {
													"id": 484,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 362,
													"src": "2597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 483,
												"id": 485,
												"nodeType": "Return",
												"src": "2590:14:3"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "2565:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:3"
									},
									"scope": 1336,
									"src": "2518:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1498
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "2756:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "2780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "2766:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:3"
											},
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "2799:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 499,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 501,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 506,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "2856:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 504,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 514,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "2892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 515,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "2901:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1663,
																	"src": "2901:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 511,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 494,
												"id": 521,
												"nodeType": "Return",
												"src": "2843:82:3"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2695:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2741:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:3"
									},
									"scope": 1336,
									"src": "2677:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3240:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 528,
												"id": 530,
												"nodeType": "Return",
												"src": "3250:9:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3225:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:3"
									},
									"scope": 1336,
									"src": "3174:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1426
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3384:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3403:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3407:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 543,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "3416:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 540,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1139,
															1205
														],
														"referencedDeclaration": 1139,
														"src": "3394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:3"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3340:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:3"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:3"
									},
									"scope": 1336,
									"src": "3323:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1442
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "3573:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 557,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "3597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 556,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "3583:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "3636:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "3623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 555,
												"id": 563,
												"nodeType": "Return",
												"src": "3616:28:3"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:3"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:3"
									},
									"scope": 1336,
									"src": "3497:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1434
									],
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "3793:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 574,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "3822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "3836:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 573,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3803:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3745:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3763:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:3"
									},
									"scope": 1336,
									"src": "3718:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1452
									],
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "4022:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 591,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "4039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 593,
														"indexExpression": {
															"id": 592,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "4058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 595,
													"indexExpression": {
														"id": 594,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "4065:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 590,
												"id": 596,
												"nodeType": "Return",
												"src": "4032:42:3"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3954:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4016:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:3"
									},
									"scope": 1336,
									"src": "3928:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1418
									],
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "4223:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 608,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "4237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 609,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "4233:87:3",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "4255:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 615,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 614,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "4276:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 620,
															"nodeType": "RevertStatement",
															"src": "4269:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													624
												],
												"declarations": [
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 643,
														"src": "4538:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 623,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [
														{
															"id": 626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "4570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "4574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 628,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "4583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 625,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 632,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "4610:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 633,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "4606:109:3",
												"trueBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "4633:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 636,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "4675:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 637,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "4681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 638,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "4690:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 635,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "4654:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 640,
															"nodeType": "RevertStatement",
															"src": "4647:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:3"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:3"
									},
									"scope": 1336,
									"src": "4143:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1408
									],
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "4863:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "4890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "4896:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 654,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															688
														],
														"referencedDeclaration": 688,
														"src": "4873:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:3"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "4813:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "4827:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "4839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:3"
									},
									"scope": 1336,
									"src": "4787:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1398
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "5088:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 675,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "5111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "5117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "5098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "5162:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "5168:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5172:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 684,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "5181:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 680,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "5139:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:3"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5054:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:3"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1336,
									"src": "4985:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "5782:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 696,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "5799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 698,
													"indexExpression": {
														"id": 697,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "5807:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 695,
												"id": 699,
												"nodeType": "Return",
												"src": "5792:23:3"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5773:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:3"
									},
									"scope": 1336,
									"src": "5707:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6017:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 709,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "6034:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 711,
													"indexExpression": {
														"id": 710,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "6050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 708,
												"id": 712,
												"nodeType": "Return",
												"src": "6027:31:3"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "5960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6008:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:3"
									},
									"scope": 1336,
									"src": "5938:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "6485:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 726,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 732,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "6552:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 733,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "6561:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 736,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "6589:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 737,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "6596:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 735,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6572:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 741,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 740,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 714,
																			"src": "6608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "6633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 746,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 725,
												"id": 748,
												"nodeType": "Return",
												"src": "6495:146:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "6399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "6414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "6431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "6479:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:3"
									},
									"scope": 1336,
									"src": "6376:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "7179:271:3",
										"statements": [
											{
												"condition": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 761,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "7208:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 762,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "7215:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 763,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "7224:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 760,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7194:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 785,
												"nodeType": "IfStatement",
												"src": "7189:255:3",
												"trueBody": {
													"id": 784,
													"nodeType": "Block",
													"src": "7234:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 766,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "7252:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 767,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 782,
																"nodeType": "Block",
																"src": "7350:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7402:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "7411:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "7375:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 781,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:3"
																	}
																]
															},
															"id": 783,
															"nodeType": "IfStatement",
															"src": "7248:186:3",
															"trueBody": {
																"id": 776,
																"nodeType": "Block",
																"src": "7273:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 773,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "7321:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 772,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 165,
																				"src": "7298:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 775,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:3"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:3"
									},
									"scope": 1336,
									"src": "7082:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "8167:78:3",
										"statements": [
											{
												"id": 801,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:3",
												"statements": [
													{
														"expression": {
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 795,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "8201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 797,
																"indexExpression": {
																	"id": 796,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "8211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 798,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "8223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 800,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "8118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "8135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 791,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:3"
									},
									"scope": 1336,
									"src": "8092:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "8933:700:3",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "8943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 815,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"arguments": [
														{
															"id": 818,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "8967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "8958:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "9035:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 822,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9031:86:3",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9055:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 828,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "9086:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 829,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "9092:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 830,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "9098:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 827,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "9069:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 832,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 835,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "9161:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 836,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "IfStatement",
												"src": "9157:256:3",
												"trueBody": {
													"id": 861,
													"nodeType": "Block",
													"src": "9181:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 842,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 846,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "9298:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 841,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1139,
																		1205
																	],
																	"referencedDeclaration": 1205,
																	"src": "9277:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 853,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:3"
														},
														{
															"id": 860,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 854,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "9368:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 856,
																			"indexExpression": {
																				"id": 855,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "9378:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 859,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "9427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 864,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 877,
												"nodeType": "IfStatement",
												"src": "9423:107:3",
												"trueBody": {
													"id": 876,
													"nodeType": "Block",
													"src": "9445:85:3",
													"statements": [
														{
															"id": 875,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 869,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "9487:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 871,
																			"indexExpression": {
																				"id": 870,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "9497:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 874,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 878,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "9540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 880,
														"indexExpression": {
															"id": 879,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "9548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 881,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "9559:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 885,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "9586:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "9592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "9577:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "EmitStatement",
												"src": "9572:32:3"
											},
											{
												"expression": {
													"id": 890,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 816,
													"src": "9622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 814,
												"id": 891,
												"nodeType": "Return",
												"src": "9615:11:3"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "8855:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "8867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "8884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:3"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "8924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:3"
									},
									"scope": 1336,
									"src": "8838:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "10008:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 901,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "10022:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 902,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 915,
												"nodeType": "IfStatement",
												"src": "10018:87:3",
												"trueBody": {
													"id": 914,
													"nodeType": "Block",
													"src": "10040:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 908,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 907,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "10061:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 913,
															"nodeType": "RevertStatement",
															"src": "10054:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "10114:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 916,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 926,
												"initialValue": {
													"arguments": [
														{
															"id": 919,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "10146:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "10150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 921,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 918,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "10138:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 927,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "10184:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 928,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "IfStatement",
												"src": "10180:96:3",
												"trueBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "10213:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 934,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 933,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "10234:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 939,
															"nodeType": "RevertStatement",
															"src": "10227:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "9970:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:3"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:3"
									},
									"scope": 1336,
									"src": "9955:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10690:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 952,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "10710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "10714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 951,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															958,
															984
														],
														"referencedDeclaration": 984,
														"src": "10700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:3"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:3"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:3"
									},
									"scope": 1336,
									"src": "10633:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "11038:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11054:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "11048:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11111:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 980,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11124:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 973,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "11076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:3"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "10973:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "10985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "11002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:3"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:3"
									},
									"scope": 1336,
									"src": "10954:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "11503:186:3",
										"statements": [
											{
												"assignments": [
													991
												],
												"declarations": [
													{
														"constant": false,
														"id": 991,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "11513:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 990,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 993,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "11557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 998,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 992,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "11537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "11591:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1005,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "11587:96:3",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "11620:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1011,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "11664:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1010,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "11641:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1013,
															"nodeType": "RevertStatement",
															"src": "11634:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "11477:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:3"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:3"
									},
									"scope": 1336,
									"src": "11462:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "12084:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1027,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "12098:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1028,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "12094:87:3",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "12116:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1034,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1033,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "12137:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1039,
															"nodeType": "RevertStatement",
															"src": "12130:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "12190:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1042,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"initialValue": {
													"arguments": [
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "12222:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "12226:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1047,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1044,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "12214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1053,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "12260:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1054,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1064,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "12362:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "12379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1074,
													"nodeType": "IfStatement",
													"src": "12358:109:3",
													"trueBody": {
														"id": 1073,
														"nodeType": "Block",
														"src": "12385:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1068,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "12427:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1069,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "12433:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1070,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1043,
																			"src": "12442:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1067,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "12406:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1072,
																"nodeType": "RevertStatement",
																"src": "12399:57:3"
															}
														]
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12256:211:3",
												"trueBody": {
													"id": 1063,
													"nodeType": "Block",
													"src": "12289:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1060,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "12333:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1059,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "12310:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1062,
															"nodeType": "RevertStatement",
															"src": "12303:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "12032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "12046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "12058:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:3"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:3"
									},
									"scope": 1336,
									"src": "12013:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "13481:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "13505:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "13511:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "13515:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1087,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1095,
															1121
														],
														"referencedDeclaration": 1121,
														"src": "13491:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:3"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "13429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "13443:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "13455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:3"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:3"
									},
									"scope": 1336,
									"src": "13406:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "13873:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1108,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "13893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "13899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "13903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1107,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "13883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1114,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "13944:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "13950:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "13954:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1117,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1113,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "13921:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:3"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "13794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "13808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "13820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "13837:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:3"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:3"
									},
									"scope": 1336,
									"src": "13771:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "14488:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1132,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "14507:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "14511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1134,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "14520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1131,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1139,
															1205
														],
														"referencedDeclaration": 1205,
														"src": "14498:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:3"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "14436:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "14448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "14465:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:3"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:3"
									},
									"scope": 1336,
									"src": "14418:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "14814:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1151,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "14880:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "14893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1197,
												"nodeType": "IfStatement",
												"src": "14876:460:3",
												"trueBody": {
													"id": 1196,
													"nodeType": "Block",
													"src": "14913:423:3",
													"statements": [
														{
															"assignments": [
																1160
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1160,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1196,
																	"src": "14927:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1159,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1164,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1162,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "14957:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1161,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "14943:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1165,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "15093:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1168,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1166,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1171,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "15115:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1172,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "15124:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1176,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "15150:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1177,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1146,
																				"src": "15157:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1175,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "15133:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1186,
															"nodeType": "IfStatement",
															"src": "15089:142:3",
															"trueBody": {
																"id": 1185,
																"nodeType": "Block",
																"src": "15164:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1182,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1146,
																					"src": "15211:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1181,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 196,
																				"src": "15189:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1184,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1187,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "15249:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1195,
															"nodeType": "IfStatement",
															"src": "15245:81:3",
															"trueBody": {
																"id": 1194,
																"nodeType": "Block",
																"src": "15260:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1189,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "15292:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1190,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1142,
																					"src": "15299:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1191,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1144,
																					"src": "15303:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1188,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1361,
																				"src": "15283:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1193,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1198,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "15346:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1200,
														"indexExpression": {
															"id": 1199,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "15362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1201,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "15373:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:3"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "14738:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "14750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "14767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "14781:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:3"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:3"
									},
									"scope": 1336,
									"src": "14720:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "15684:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "15698:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "15694:91:3",
												"trueBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "15722:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1222,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1210,
																		"src": "15765:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1221,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "15743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1224,
															"nodeType": "RevertStatement",
															"src": "15736:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1227,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "15794:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1230,
															"indexExpression": {
																"id": 1228,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "15813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1231,
														"indexExpression": {
															"id": 1229,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "15820:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1232,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "15832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1236,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "15870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "15877:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "15887:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1235,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "15855:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "EmitStatement",
												"src": "15850:46:3"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "15619:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "15634:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "15652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:3"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:3"
									},
									"scope": 1336,
									"src": "15591:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "16210:169:3",
										"statements": [
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "16220:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1250,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1255,
												"initialValue": {
													"arguments": [
														{
															"id": 1253,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "16245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1252,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "16236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1256,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "16267:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1257,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1267,
												"nodeType": "IfStatement",
												"src": "16263:88:3",
												"trueBody": {
													"id": 1266,
													"nodeType": "Block",
													"src": "16288:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1263,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "16332:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1262,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "16309:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1265,
															"nodeType": "RevertStatement",
															"src": "16302:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1268,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1251,
													"src": "16367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1269,
												"nodeType": "Return",
												"src": "16360:12:3"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "16161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:3"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "16201:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:3"
									},
									"scope": 1336,
									"src": "16138:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "17020:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1283,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "17034:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1333,
												"nodeType": "IfStatement",
												"src": "17030:664:3",
												"trueBody": {
													"id": 1332,
													"nodeType": "Block",
													"src": "17054:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "17168:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1301,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1299,
																						"src": "17190:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1302,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1471,
																								"src": "17200:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1471_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1303,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1470,
																							"src": "17200:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1304,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "17186:130:3",
																				"trueBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "17243:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1307,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1276,
																										"src": "17294:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1306,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 184,
																									"src": "17272:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1308,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1309,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1300,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1299,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "17153:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1298,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:3"
																	},
																	"src": "17144:186:3"
																},
																{
																	"block": {
																		"id": 1329,
																		"nodeType": "Block",
																		"src": "17359:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1317,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1315,
																							"src": "17381:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1318,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1319,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1327,
																					"nodeType": "Block",
																					"src": "17480:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:3",
																								"nodeType": "YulBlock",
																								"src": "17566:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:3",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:3"
																													},
																													"nativeSrc": "17599:15:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:3"
																													},
																													"nativeSrc": "17616:13:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:3"
																											},
																											"nativeSrc": "17592:38:3",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:3"
																										},
																										"nativeSrc": "17592:38:3",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1315,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1315,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1326,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:3"
																						}
																					]
																				},
																				"id": 1328,
																				"nodeType": "IfStatement",
																				"src": "17377:293:3",
																				"trueBody": {
																					"id": 1325,
																					"nodeType": "Block",
																					"src": "17401:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1322,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1276,
																										"src": "17452:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1321,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 184,
																									"src": "17430:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1323,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1324,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1330,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1316,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1315,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1330,
																				"src": "17338:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1314,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:3"
																	},
																	"src": "17331:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1292,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1511,
																			"src": "17109:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1294,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "17123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1295,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "17129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1296,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "17138:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1289,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1276,
																				"src": "17088:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1288,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "17072:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1471_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1471",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1470,
																	"src": "17072:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1331,
															"nodeType": "TryStatement",
															"src": "17068:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "16950:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "16964:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "16976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "16993:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:3"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:3"
									},
									"scope": 1336,
									"src": "16918:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1337,
							"src": "776:16926:3",
							"usedErrors": [
								160,
								165,
								174,
								179,
								184,
								191,
								196,
								201
							],
							"usedEvents": [
								1352,
								1361,
								1370
							]
						}
					],
					"src": "107:17596:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1886
						],
						"IERC721": [
							1453
						]
					},
					"id": 1454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 1887,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1339,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1886,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1342,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1886,
										"src": "287:7:4"
									},
									"id": 1343,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1341,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1453,
							"linearizedBaseContracts": [
								1453,
								1886
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1352,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1361,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1370,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 1453,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 1453,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1453,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1453,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 1453,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 1453,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 1453,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 1453,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 1453,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1454,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								1352,
								1361,
								1370
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1471
						]
					},
					"id": 1472,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1455,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1456,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1471,
							"linearizedBaseContracts": [
								1471
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1467,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1471,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1472,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1453
						],
						"IERC721Metadata": [
							1499
						]
					},
					"id": 1500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1473,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1500,
							"sourceUnit": 1454,
							"src": "153:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1474,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1453,
										"src": "161:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1477,
										"name": "IERC721",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1453,
										"src": "357:7:6"
									},
									"id": 1478,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1476,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1499,
							"linearizedBaseContracts": [
								1499,
								1453,
								1886
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"scope": 1499,
									"src": "434:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:6"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "600:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:6"
									},
									"scope": 1499,
									"src": "559:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "774:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:6"
									},
									"scope": 1499,
									"src": "716:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1500,
							"src": "328:463:6",
							"usedErrors": [],
							"usedEvents": [
								1352,
								1361,
								1370
							]
						}
					],
					"src": "127:665:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1521
						]
					},
					"id": 1522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1502,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1521,
							"linearizedBaseContracts": [
								1521
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1507,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1506,
												"id": 1509,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1521,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1516,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1515,
												"id": 1518,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1521,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1522,
							"src": "608:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1595
						]
					},
					"id": 1596,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1524,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:8",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1595,
							"linearizedBaseContracts": [
								1595
							],
							"name": "Counters",
							"nameLocation": "432:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1527,
									"members": [
										{
											"constant": false,
											"id": 1526,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1527,
											"src": "786:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1525,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:8",
									"nodeType": "StructDefinition",
									"scope": 1595,
									"src": "447:374:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "901:38:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1535,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "918:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:8",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1526,
													"src": "918:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1534,
												"id": 1537,
												"nodeType": "Return",
												"src": "911:21:8"
											}
										]
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "844:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1528,
														"name": "Counter",
														"nameLocations": [
															"844:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "844:7:8"
													},
													"referencedDeclaration": 1527,
													"src": "844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:8"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "892:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:8"
									},
									"scope": 1595,
									"src": "827:112:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "998:70:8",
										"statements": [
											{
												"id": 1551,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:8",
												"statements": [
													{
														"expression": {
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1545,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "1032:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:8",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1526,
																"src": "1032:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1550,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:8"
													}
												]
											}
										]
									},
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "964:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1540,
														"name": "Counter",
														"nameLocations": [
															"964:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "964:7:8"
													},
													"referencedDeclaration": 1527,
													"src": "964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:8"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:8"
									},
									"scope": 1595,
									"src": "945:123:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "1127:176:8",
										"statements": [
											{
												"assignments": [
													1560
												],
												"declarations": [
													{
														"constant": false,
														"id": 1560,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "1137:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"expression": {
														"id": 1561,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "1153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:8",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1526,
													"src": "1153:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1565,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "1185:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1564,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:8"
											},
											{
												"id": 1579,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:8",
												"statements": [
													{
														"expression": {
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1571,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "1260:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:8",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1526,
																"src": "1260:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1574,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "1277:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1578,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:8"
													}
												]
											}
										]
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "1093:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1554,
														"name": "Counter",
														"nameLocations": [
															"1093:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "1093:7:8"
													},
													"referencedDeclaration": 1527,
													"src": "1093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:8"
									},
									"scope": 1595,
									"src": "1074:229:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "1358:35:8",
										"statements": [
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1587,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "1368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:8",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1526,
														"src": "1368:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:8"
											}
										]
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "1324:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1582,
														"name": "Counter",
														"nameLocations": [
															"1324:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "1324:7:8"
													},
													"referencedDeclaration": 1527,
													"src": "1324:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:8"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:8"
									},
									"scope": 1595,
									"src": "1309:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1596,
							"src": "424:971:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2940
						],
						"SignedMath": [
							3045
						],
						"Strings": [
							1850
						]
					},
					"id": 1851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1597,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1851,
							"sourceUnit": 2941,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1598,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2940,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1601,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1851,
							"sourceUnit": 3046,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1600,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3045,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1602,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1850,
							"linearizedBaseContracts": [
								1850
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1605,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1603,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1604,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1608,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1606,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1607,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1615,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1661,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1624
														],
														"declarations": [
															{
																"constant": false,
																"id": 1624,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1661,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1623,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1631,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1627,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1625,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2940,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2940_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2760,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1633
														],
														"declarations": [
															{
																"constant": false,
																"id": 1633,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1661,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1632,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1638,
														"initialValue": {
															"arguments": [
																{
																	"id": 1636,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1634,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1640
														],
														"declarations": [
															{
																"constant": false,
																"id": 1640,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1661,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1639,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1641,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1633,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1624,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1640,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1642,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1657,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1644,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1640,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1646,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1605,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1640,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1618,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1647,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1648,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1651,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1652,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1656,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1655,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1658,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1659,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1622,
														"id": 1660,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1620,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 1850,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1666,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1681,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3045,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3045_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3044,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1680,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1663,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1671,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1687,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 1850,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1707,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1692,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1701,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1692,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1699,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2940,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2940_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2882,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1697,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1709,
																	1792,
																	1812
																],
																"referencedDeclaration": 1792,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1696,
														"id": 1706,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 1850,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1720
												],
												"declarations": [
													{
														"constant": false,
														"id": 1720,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1719,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1722,
												"initialValue": {
													"id": 1721,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1712,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1724
												],
												"declarations": [
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1723,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1733,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1728,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1725,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1734,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1736,
														"indexExpression": {
															"hexValue": "30",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1740,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1742,
														"indexExpression": {
															"hexValue": "31",
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1774,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1760,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1762,
																	"indexExpression": {
																		"id": 1761,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1763,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1767,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1764,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1720,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1769,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1770,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1773,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1754,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1775,
												"initializationExpression": {
													"assignments": [
														1747
													],
													"declarations": [
														{
															"constant": false,
															"id": 1747,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1775,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1746,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1753,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1749,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1757,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1759,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1776,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1785,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1784,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1780,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1781,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1779,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1783,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1788,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1786,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1718,
												"id": 1790,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 1850,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1805,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1795,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1803,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1801,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1808,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1800,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709,
															1792,
															1812
														],
														"referencedDeclaration": 1792,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1799,
												"id": 1810,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 1850,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1824,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1822,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1829,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1827,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1836,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1815,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1834,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1833,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1842,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1840,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1839,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1821,
												"id": 1847,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 1850,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1851,
							"src": "251:2847:9",
							"usedErrors": [
								1615
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1874
						],
						"IERC165": [
							1886
						]
					},
					"id": 1875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 1887,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1853,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1886,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1856,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1886,
										"src": "687:7:10"
									},
									"id": 1857,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1855,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1874,
							"linearizedBaseContracts": [
								1874,
								1886
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1885
									],
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1865,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1867,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1886_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1886_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1866,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1886",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1864,
												"id": 1871,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1859,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1874,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1875,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1886
						]
					},
					"id": 1887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1877,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1886,
							"linearizedBaseContracts": [
								1886
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1886,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1887,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2940
						]
					},
					"id": 2941,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1889,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2940,
							"linearizedBaseContracts": [
								2940
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1892,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1897,
									"members": [
										{
											"id": 1893,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 1894,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 1895,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 1896,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 1927,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															1910
														],
														"declarations": [
															{
																"constant": false,
																"id": 1910,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1927,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1909,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1914,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1911,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1900,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1912,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1915,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1916,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1900,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1922,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1920,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1908,
															"id": 1921,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1924,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1925,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1908,
														"id": 1926,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 2940,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 1955,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1941,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1942,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1948,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1940,
															"id": 1947,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1950,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1951,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1934,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1953,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1940,
														"id": 1954,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 2940,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 1997,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1969,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1960,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1976,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1974,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1968,
															"id": 1975,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															1978
														],
														"declarations": [
															{
																"constant": false,
																"id": 1978,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1997,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1977,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1982,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1979,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1960,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1980,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1983,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1984,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1960,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1986,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1992,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1990,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1968,
															"id": 1991,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1994,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1995,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1968,
														"id": 1996,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 2940,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2025,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2011,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2004,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2018,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2010,
															"id": 2017,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2020,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2021,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2004,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2023,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2010,
														"id": 2024,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 2940,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2054,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2053,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2039,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2046,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2044,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2038,
															"id": 2045,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2048,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2030,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2049,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2032,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2051,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2038,
														"id": 2052,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 2940,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2065,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2066,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2069,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2060,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2068,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2064,
												"id": 2071,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2056,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 2940,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2083,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2084,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2087,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2086,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2089,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 2940,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2101,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2102,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2096,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2104,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2105,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2106,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2096,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2100,
												"id": 2112,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 2940,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2124,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2132,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2131,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2127,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2117,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2128,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2119,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2123,
															"id": 2130,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2133,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2137,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2117,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2141,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2146,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 2940,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2272,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2161
														],
														"declarations": [
															{
																"constant": false,
																"id": 2161,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2272,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2162,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2163,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2153,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2167
														],
														"declarations": [
															{
																"constant": false,
																"id": 2167,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2272,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2166,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2168,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2161,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2161,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2167,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2151,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2153,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2169,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2170,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2178,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2177,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2173,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2174,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2155,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2159,
																	"id": 2176,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2179,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2155,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2180,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2186,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2185,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2182,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1892,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2184,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2188
														],
														"declarations": [
															{
																"constant": false,
																"id": 2188,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2272,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2187,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2189,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2155,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2161,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2161,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2161,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2167,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2167,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2188,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2188,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2188,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2151,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2153,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2190,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2192
														],
														"declarations": [
															{
																"constant": false,
																"id": 2192,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2272,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2191,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2199,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2193,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2155,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2195,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2155,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2155,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2155,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2161,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2161,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2192,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2192,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2192,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2192,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2192,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2200,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2201,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2202,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2203,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2192,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2206,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2208
														],
														"declarations": [
															{
																"constant": false,
																"id": 2208,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2272,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2207,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2215,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2210,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2155,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2212,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2216,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2218,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2219,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2223,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2224,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2226,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2227,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2231,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2232,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2234,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2235,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2239,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2240,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2242,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2243,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2247,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2248,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2250,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2251,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2255,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2256,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2258,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2259,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2263,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2264,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2265,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2266,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2269,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2270,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2159,
														"id": 2271,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 2940,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2290
												],
												"declarations": [
													{
														"constant": false,
														"id": 2290,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2316,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2296,
												"initialValue": {
													"arguments": [
														{
															"id": 2292,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2293,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2294,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2291,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2274,
															2317
														],
														"referencedDeclaration": 2274,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2298,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1897",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1897",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2297,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1897_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2301,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2302,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2303,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2281,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2300,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2313,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2312,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2308,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2311,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2314,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2290,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2288,
												"id": 2315,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1897",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2282,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1897,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 1897,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1897",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 2940,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2325,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2331,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2330,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2324,
															"id": 2329,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2333
												],
												"declarations": [
													{
														"constant": false,
														"id": 2333,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2428,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2332,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2342,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2336,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2335,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2596,
																			2631
																		],
																		"referencedDeclaration": 2596,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2340,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2427,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2343,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2344,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2333,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2345,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2346,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2349,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2353,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2354,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2355,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2333,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2356,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2357,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2360,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2364,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2365,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2366,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2333,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2367,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2368,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2371,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2375,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2376,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2377,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2333,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2378,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2379,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2387,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2388,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2333,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2389,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2390,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2393,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2397,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2398,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2399,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2333,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2400,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2401,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2404,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2408,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2409,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2410,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2333,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2411,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2412,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2415,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2419,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2421,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2422,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2423,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2333,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2420,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2324,
														"id": 2426,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 2940,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2462,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2441
														],
														"declarations": [
															{
																"constant": false,
																"id": 2441,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2462,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2440,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2445,
														"initialValue": {
															"arguments": [
																{
																	"id": 2443,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2442,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2429,
																	2464
																],
																"referencedDeclaration": 2429,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2448,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2435,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1897",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1897",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2447,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2939,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1897_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2450,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2441,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2451,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2441,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2453,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2432,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2459,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2439,
														"id": 2461,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1897",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2433,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1897,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 1897,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1897",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 2940,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2595,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2473
												],
												"declarations": [
													{
														"constant": false,
														"id": 2473,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2595,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2475,
												"initialValue": {
													"hexValue": "30",
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2592,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2490,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2489,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2481,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2484,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2491,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2505,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2504,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2496,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2499,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2506,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2520,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2519,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2511,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2514,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2521,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2535,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2534,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2526,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2529,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2536,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2549,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2541,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2551,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2565,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2564,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2559,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2566,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2580,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2579,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2571,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2574,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2581,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2591,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2590,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2593,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2473,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2471,
												"id": 2594,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2465,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 2940,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2630,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2629,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2608
														],
														"declarations": [
															{
																"constant": false,
																"id": 2608,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2629,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2607,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2612,
														"initialValue": {
															"arguments": [
																{
																	"id": 2610,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2599,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2609,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2596,
																	2631
																],
																"referencedDeclaration": 2596,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2613,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2608,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2615,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2602,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1897",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1897",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2614,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2939,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1897_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2619,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2617,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2618,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2608,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2620,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2599,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2626,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2606,
														"id": 2628,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1897",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2600,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1897,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 1897,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1897",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 2940,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2759,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2640
												],
												"declarations": [
													{
														"constant": false,
														"id": 2640,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2759,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2639,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2642,
												"initialValue": {
													"hexValue": "30",
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2756,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2643,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2659,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2658,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2648,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2653,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2654,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2657,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2660,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2676,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2675,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2670,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2671,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2674,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2677,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2693,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2692,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2682,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2687,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2691,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2694,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2710,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2709,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2699,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2704,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2705,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2708,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2711,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2727,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2726,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2716,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2728,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2738,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2742,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2745,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2755,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2754,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2750,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2753,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2757,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2640,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2638,
												"id": 2758,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2632,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 2940,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2794,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2793,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2772
														],
														"declarations": [
															{
																"constant": false,
																"id": 2772,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2793,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2771,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2776,
														"initialValue": {
															"arguments": [
																{
																	"id": 2774,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2773,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2760,
																	2795
																],
																"referencedDeclaration": 2760,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2777,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2779,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2766,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1897",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1897",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2778,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2939,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1897_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2783,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2781,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2782,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2772,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2784,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2763,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2790,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2770,
														"id": 2792,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2761,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1897",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2764,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1897,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 1897,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1897",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 2940,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2881,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2804
												],
												"declarations": [
													{
														"constant": false,
														"id": 2804,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2881,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2803,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2806,
												"initialValue": {
													"hexValue": "30",
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 2878,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2807,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2821,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 2820,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2812,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2798,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2815,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2816,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2804,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2822,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2836,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 2835,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2798,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2830,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2831,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2804,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2834,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2837,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2851,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 2850,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2842,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2798,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2845,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2846,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2804,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2849,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2852,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2866,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 2865,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2857,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2798,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2860,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2861,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2804,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2864,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2867,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2877,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 2876,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2804,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2875,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2879,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2804,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2802,
												"id": 2880,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2796,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 2940,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2919,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 2918,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															2894
														],
														"declarations": [
															{
																"constant": false,
																"id": 2894,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2918,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2893,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2898,
														"initialValue": {
															"arguments": [
																{
																	"id": 2896,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2885,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2895,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2882,
																	2920
																],
																"referencedDeclaration": 2882,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2899,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2894,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2901,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2888,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1897",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1897",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2900,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2939,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1897_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2908,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2903,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2906,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2904,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2894,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2905,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2907,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2909,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2885,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2915,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2892,
														"id": 2917,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1897",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2887,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2886,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1897,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 1897,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1897",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 2940,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2931,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2924,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1897",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1897",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2929,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2928,
												"id": 2937,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 2921,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1897",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2922,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1897,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 1897,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1897",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 2940,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2941,
							"src": "203:14914:12",
							"usedErrors": [
								1892
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3045
						]
					},
					"id": 3046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2942,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2943,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3045,
							"linearizedBaseContracts": [
								3045
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2953,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2954,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2957,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2948,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 2956,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2952,
												"id": 2959,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 2944,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2945,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2948,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2947,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2950,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3045,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2978,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2971,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2972,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2966,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2975,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2966,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 2974,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2977,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2963,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2965,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2968,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3045,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3022,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													2990
												],
												"declarations": [
													{
														"constant": false,
														"id": 2990,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3022,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2989,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3003,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2991,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2992,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2984,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2994,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2995,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2982,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2996,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2984,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2998,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3001,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3004,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2990,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3009,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2990,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3007,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3005,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3014,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2982,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3015,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2984,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3017,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3019,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2988,
												"id": 3021,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 2980,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2981,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2983,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2986,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3045,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3043,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3042,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3033,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3026,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3037,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3026,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3036,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3026,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3031,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3030,
														"id": 3041,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3024,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3025,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3045,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3046,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"contracts/Simplify/productStore.sol": {
				"ast": {
					"absolutePath": "contracts/Simplify/productStore.sol",
					"exportedSymbols": {
						"Context": [
							1521
						],
						"Counters": [
							1595
						],
						"ERC165": [
							1874
						],
						"ERC721": [
							1336
						],
						"IERC165": [
							1886
						],
						"IERC20": [
							327
						],
						"IERC721": [
							1453
						],
						"IERC721Errors": [
							202
						],
						"IERC721Metadata": [
							1499
						],
						"IERC721Receiver": [
							1471
						],
						"Ownable": [
							112
						],
						"ProductStore": [
							3268
						],
						"Strings": [
							1850
						]
					},
					"id": 3269,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3047,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3269,
							"sourceUnit": 328,
							"src": "65:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3269,
							"sourceUnit": 1337,
							"src": "123:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3269,
							"sourceUnit": 113,
							"src": "182:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3269,
							"sourceUnit": 1596,
							"src": "236:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3052,
										"name": "ERC721",
										"nameLocations": [
											"317:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "317:6:14"
									},
									"id": 3053,
									"nodeType": "InheritanceSpecifier",
									"src": "317:6:14"
								},
								{
									"baseName": {
										"id": 3054,
										"name": "Ownable",
										"nameLocations": [
											"325:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "325:7:14"
									},
									"id": 3055,
									"nodeType": "InheritanceSpecifier",
									"src": "325:7:14"
								}
							],
							"canonicalName": "ProductStore",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3268,
							"linearizedBaseContracts": [
								3268,
								112,
								1336,
								202,
								1499,
								1453,
								1874,
								1886,
								1521
							],
							"name": "ProductStore",
							"nameLocation": "301:12:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 3058,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "354:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3268,
									"src": "340:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$327",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3057,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3056,
											"name": "IERC20",
											"nameLocations": [
												"340:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 327,
											"src": "340:6:14"
										},
										"referencedDeclaration": 327,
										"src": "340:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$327",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 3062,
									"libraryName": {
										"id": 3059,
										"name": "Counters",
										"nameLocations": [
											"398:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1595,
										"src": "398:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "392:36:14",
									"typeName": {
										"id": 3061,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3060,
											"name": "Counters.Counter",
											"nameLocations": [
												"411:8:14",
												"420:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1527,
											"src": "411:16:14"
										},
										"referencedDeclaration": 1527,
										"src": "411:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3065,
									"mutability": "mutable",
									"name": "_billIds",
									"nameLocation": "459:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 3268,
									"src": "434:33:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1527_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3064,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3063,
											"name": "Counters.Counter",
											"nameLocations": [
												"434:8:14",
												"443:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1527,
											"src": "434:16:14"
										},
										"referencedDeclaration": 1527,
										"src": "434:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1527_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "52e9b4b2677873f4a0e6ac637221c8e8cfd2149accd54695cb8fdaf9491ddecc",
									"id": 3073,
									"name": "BuyProduct",
									"nameLocation": "482:10:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3067,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "509:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "493:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3069,
												"indexed": false,
												"mutability": "mutable",
												"name": "productId",
												"nameLocation": "524:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "516:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3071,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPaid",
												"nameLocation": "543:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "535:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:62:14"
									},
									"src": "476:79:14"
								},
								{
									"canonicalName": "ProductStore.Product",
									"id": 3080,
									"members": [
										{
											"constant": false,
											"id": 3075,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "597:2:14",
											"nodeType": "VariableDeclaration",
											"scope": 3080,
											"src": "589:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3074,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "589:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3077,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "617:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 3080,
											"src": "610:11:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3076,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "610:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3079,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "640:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 3080,
											"src": "632:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3078,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "632:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Product",
									"nameLocation": "570:7:14",
									"nodeType": "StructDefinition",
									"scope": 3268,
									"src": "563:90:14",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7acc0b20",
									"id": 3085,
									"mutability": "mutable",
									"name": "products",
									"nameLocation": "696:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 3268,
									"src": "661:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$3080_storage_$",
										"typeString": "mapping(uint256 => struct ProductStore.Product)"
									},
									"typeName": {
										"id": 3084,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3081,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "669:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "661:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$3080_storage_$",
											"typeString": "mapping(uint256 => struct ProductStore.Product)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3083,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3082,
												"name": "Product",
												"nameLocations": [
													"680:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3080,
												"src": "680:7:14"
											},
											"referencedDeclaration": 3080,
											"src": "680:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
												"typeString": "struct ProductStore.Product"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cf2c0334",
									"id": 3090,
									"mutability": "mutable",
									"name": "userPurchases",
									"nameLocation": "748:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 3268,
									"src": "711:50:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 3089,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3086,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "719:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "711:29:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3087,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "730:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 3088,
											"nodeType": "ArrayTypeName",
											"src": "730:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4de91a63",
									"id": 3092,
									"mutability": "mutable",
									"name": "nextProductId",
									"nameLocation": "785:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 3268,
									"src": "770:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3091,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "770:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3107,
										"nodeType": "Block",
										"src": "871:48:14",
										"statements": [
											{
												"expression": {
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3101,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3058,
														"src": "882:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$327",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3103,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3094,
																"src": "897:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3102,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "890:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$327_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "890:21:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$327",
															"typeString": "contract IERC20"
														}
													},
													"src": "882:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$327",
														"typeString": "contract IERC20"
													}
												},
												"id": 3106,
												"nodeType": "ExpressionStatement",
												"src": "882:29:14"
											}
										]
									},
									"id": 3108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50726f6475637442696c6c",
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "849:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_809623a0c38db475ec52c0e51ea49adf539db4250c349b84fec80d6db1ba6f37",
														"typeString": "literal_string \"ProductBill\""
													},
													"value": "ProductBill"
												},
												{
													"hexValue": "50424c",
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "864:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d6ecf1b7120409a098c0b7dea7321dd5d219564dfa01f5699f33331cdcade641",
														"typeString": "literal_string \"PBL\""
													},
													"value": "PBL"
												}
											],
											"id": 3099,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3096,
												"name": "ERC721",
												"nameLocations": [
													"842:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1336,
												"src": "842:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "842:28:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3094,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "827:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "819:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:23:14"
									},
									"returnParameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "871:0:14"
									},
									"scope": 3268,
									"src": "807:112:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3132,
										"nodeType": "Block",
										"src": "1003:120:14",
										"statements": [
											{
												"assignments": [
													3118
												],
												"declarations": [
													{
														"constant": false,
														"id": 3118,
														"mutability": "mutable",
														"name": "productId",
														"nameLocation": "1022:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 3132,
														"src": "1014:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1014:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3121,
												"initialValue": {
													"id": 3120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1034:15:14",
													"subExpression": {
														"id": 3119,
														"name": "nextProductId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3092,
														"src": "1034:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1014:35:14"
											},
											{
												"expression": {
													"id": 3130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3122,
															"name": "products",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3085,
															"src": "1060:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$3080_storage_$",
																"typeString": "mapping(uint256 => struct ProductStore.Product storage ref)"
															}
														},
														"id": 3124,
														"indexExpression": {
															"id": 3123,
															"name": "productId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3118,
															"src": "1069:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1060:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Product_$3080_storage",
															"typeString": "struct ProductStore.Product storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3126,
																"name": "productId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3118,
																"src": "1090:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3127,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3110,
																"src": "1101:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 3128,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3112,
																"src": "1108:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3125,
															"name": "Product",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3080,
															"src": "1082:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Product_$3080_storage_ptr_$",
																"typeString": "type(struct ProductStore.Product storage pointer)"
															}
														},
														"id": 3129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1082:33:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Product_$3080_memory_ptr",
															"typeString": "struct ProductStore.Product memory"
														}
													},
													"src": "1060:55:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Product_$3080_storage",
														"typeString": "struct ProductStore.Product storage ref"
													}
												},
												"id": 3131,
												"nodeType": "ExpressionStatement",
												"src": "1060:55:14"
											}
										]
									},
									"functionSelector": "b15247d9",
									"id": 3133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3114,
												"name": "onlyOwner",
												"nameLocations": [
													"993:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "993:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "993:9:14"
										}
									],
									"name": "addProduct",
									"nameLocation": "936:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "961:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "947:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3109,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "947:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3112,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "976:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "968:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:37:14"
									},
									"returnParameters": {
										"id": 3116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:14"
									},
									"scope": 3268,
									"src": "927:196:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3205,
										"nodeType": "Block",
										"src": "1180:614:14",
										"statements": [
											{
												"assignments": [
													3140
												],
												"declarations": [
													{
														"constant": false,
														"id": 3140,
														"mutability": "mutable",
														"name": "product",
														"nameLocation": "1207:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3205,
														"src": "1191:23:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
															"typeString": "struct ProductStore.Product"
														},
														"typeName": {
															"id": 3139,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3138,
																"name": "Product",
																"nameLocations": [
																	"1191:7:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3080,
																"src": "1191:7:14"
															},
															"referencedDeclaration": 3080,
															"src": "1191:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
																"typeString": "struct ProductStore.Product"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3144,
												"initialValue": {
													"baseExpression": {
														"id": 3141,
														"name": "products",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3085,
														"src": "1217:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$3080_storage_$",
															"typeString": "mapping(uint256 => struct ProductStore.Product storage ref)"
														}
													},
													"id": 3143,
													"indexExpression": {
														"id": 3142,
														"name": "_productId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3135,
														"src": "1226:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1217:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Product_$3080_storage",
														"typeString": "struct ProductStore.Product storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1191:46:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3146,
																	"name": "product",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3140,
																	"src": "1256:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
																		"typeString": "struct ProductStore.Product storage pointer"
																	}
																},
																"id": 3147,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1264:2:14",
																"memberName": "id",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3075,
																"src": "1256:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1270:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1256:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f6475637420646f6573206e6f74206578697374",
															"id": 3150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592",
																"typeString": "literal_string \"Product does not exist\""
															},
															"value": "Product does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592",
																"typeString": "literal_string \"Product does not exist\""
															}
														],
														"id": 3145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3152,
												"nodeType": "ExpressionStatement",
												"src": "1248:50:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3156,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1336:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1340:6:14",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1336:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3160,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1356:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ProductStore_$3268",
																				"typeString": "contract ProductStore"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ProductStore_$3268",
																				"typeString": "contract ProductStore"
																			}
																		],
																		"id": 3159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1348:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3158,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1348:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1348:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3162,
																			"name": "product",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3140,
																			"src": "1363:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
																				"typeString": "struct ProductStore.Product storage pointer"
																			}
																		},
																		"id": 3163,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1371:5:14",
																		"memberName": "price",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3079,
																		"src": "1363:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 3164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1377:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 3165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1381:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "1377:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	},
																	"src": "1363:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3154,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3058,
																	"src": "1317:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$327",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1323:12:14",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "1317:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1317:67:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 3169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1386:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 3153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1309:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:101:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3171,
												"nodeType": "ExpressionStatement",
												"src": "1309:101:14"
											},
											{
												"assignments": [
													3173
												],
												"declarations": [
													{
														"constant": false,
														"id": 3173,
														"mutability": "mutable",
														"name": "billId",
														"nameLocation": "1519:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3205,
														"src": "1511:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1511:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3177,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3174,
															"name": "_billIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3065,
															"src": "1528:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1527_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3175,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1537:7:14",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1539,
														"src": "1528:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1527_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1527_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1511:35:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3179,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1567:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1571:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1567:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3181,
															"name": "billId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3173,
															"src": "1579:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3178,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															958,
															984
														],
														"referencedDeclaration": 958,
														"src": "1557:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:29:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3183,
												"nodeType": "ExpressionStatement",
												"src": "1557:29:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3184,
															"name": "_billIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3065,
															"src": "1599:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1527_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1608:9:14",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1553,
														"src": "1599:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1527_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1527_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1599:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3188,
												"nodeType": "ExpressionStatement",
												"src": "1599:20:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3194,
															"name": "_productId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3135,
															"src": "1708:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 3189,
																"name": "userPurchases",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3090,
																"src": "1677:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 3192,
															"indexExpression": {
																"expression": {
																	"id": 3190,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1691:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1695:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1691:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1677:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1703:4:14",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1677:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 3195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:42:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3196,
												"nodeType": "ExpressionStatement",
												"src": "1677:42:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3198,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1748:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1752:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1748:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3200,
															"name": "_productId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3135,
															"src": "1760:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3201,
																"name": "product",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3140,
																"src": "1772:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
																	"typeString": "struct ProductStore.Product storage pointer"
																}
															},
															"id": 3202,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1780:5:14",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3079,
															"src": "1772:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3197,
														"name": "BuyProduct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3073,
														"src": "1737:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3204,
												"nodeType": "EmitStatement",
												"src": "1732:54:14"
											}
										]
									},
									"functionSelector": "8642269e",
									"id": 3206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyProduct",
									"nameLocation": "1140:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3135,
												"mutability": "mutable",
												"name": "_productId",
												"nameLocation": "1159:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "1151:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:20:14"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:0:14"
									},
									"scope": 3268,
									"src": "1131:663:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3266,
										"nodeType": "Block",
										"src": "1888:380:14",
										"statements": [
											{
												"assignments": [
													3219
												],
												"declarations": [
													{
														"constant": false,
														"id": 3219,
														"mutability": "mutable",
														"name": "purchasedProductIds",
														"nameLocation": "1916:19:14",
														"nodeType": "VariableDeclaration",
														"scope": 3266,
														"src": "1899:36:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3217,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1899:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3218,
															"nodeType": "ArrayTypeName",
															"src": "1899:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3223,
												"initialValue": {
													"baseExpression": {
														"id": 3220,
														"name": "userPurchases",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3090,
														"src": "1938:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 3222,
													"indexExpression": {
														"id": 3221,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3208,
														"src": "1952:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1938:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1899:58:14"
											},
											{
												"assignments": [
													3228
												],
												"declarations": [
													{
														"constant": false,
														"id": 3228,
														"mutability": "mutable",
														"name": "userDetails",
														"nameLocation": "1985:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 3266,
														"src": "1968:28:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ProductStore.Product[]"
														},
														"typeName": {
															"baseType": {
																"id": 3226,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3225,
																	"name": "Product",
																	"nameLocations": [
																		"1968:7:14"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3080,
																	"src": "1968:7:14"
																},
																"referencedDeclaration": 3080,
																"src": "1968:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
																	"typeString": "struct ProductStore.Product"
																}
															},
															"id": 3227,
															"nodeType": "ArrayTypeName",
															"src": "1968:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Product_$3080_storage_$dyn_storage_ptr",
																"typeString": "struct ProductStore.Product[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3236,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3233,
																"name": "purchasedProductIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3219,
																"src": "2013:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 3234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2033:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2013:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1999:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ProductStore.Product memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3230,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3229,
																	"name": "Product",
																	"nameLocations": [
																		"2003:7:14"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3080,
																	"src": "2003:7:14"
																},
																"referencedDeclaration": 3080,
																"src": "2003:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
																	"typeString": "struct ProductStore.Product"
																}
															},
															"id": 3231,
															"nodeType": "ArrayTypeName",
															"src": "2003:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Product_$3080_storage_$dyn_storage_ptr",
																"typeString": "struct ProductStore.Product[]"
															}
														}
													},
													"id": 3235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ProductStore.Product memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1968:72:14"
											},
											{
												"body": {
													"id": 3262,
													"nodeType": "Block",
													"src": "2110:120:14",
													"statements": [
														{
															"assignments": [
																3249
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3249,
																	"mutability": "mutable",
																	"name": "productId",
																	"nameLocation": "2133:9:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 3262,
																	"src": "2125:17:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3248,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2125:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3253,
															"initialValue": {
																"baseExpression": {
																	"id": 3250,
																	"name": "purchasedProductIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3219,
																	"src": "2145:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 3252,
																"indexExpression": {
																	"id": 3251,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3238,
																	"src": "2165:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2145:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2125:42:14"
														},
														{
															"expression": {
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3254,
																		"name": "userDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3228,
																		"src": "2182:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ProductStore.Product memory[] memory"
																		}
																	},
																	"id": 3256,
																	"indexExpression": {
																		"id": 3255,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3238,
																		"src": "2194:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2182:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Product_$3080_memory_ptr",
																		"typeString": "struct ProductStore.Product memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3257,
																		"name": "products",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3085,
																		"src": "2199:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$3080_storage_$",
																			"typeString": "mapping(uint256 => struct ProductStore.Product storage ref)"
																		}
																	},
																	"id": 3259,
																	"indexExpression": {
																		"id": 3258,
																		"name": "productId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3249,
																		"src": "2208:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2199:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Product_$3080_storage",
																		"typeString": "struct ProductStore.Product storage ref"
																	}
																},
																"src": "2182:36:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$3080_memory_ptr",
																	"typeString": "struct ProductStore.Product memory"
																}
															},
															"id": 3261,
															"nodeType": "ExpressionStatement",
															"src": "2182:36:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3241,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3238,
														"src": "2073:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3242,
															"name": "purchasedProductIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3219,
															"src": "2077:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 3243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2097:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2077:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2073:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3263,
												"initializationExpression": {
													"assignments": [
														3238
													],
													"declarations": [
														{
															"constant": false,
															"id": 3238,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2066:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3263,
															"src": "2058:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3237,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2058:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3240,
													"initialValue": {
														"hexValue": "30",
														"id": 3239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2070:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2058:13:14"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2105:3:14",
														"subExpression": {
															"id": 3245,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3238,
															"src": "2105:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3247,
													"nodeType": "ExpressionStatement",
													"src": "2105:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2053:177:14"
											},
											{
												"expression": {
													"id": 3264,
													"name": "userDetails",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3228,
													"src": "2249:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ProductStore.Product memory[] memory"
													}
												},
												"functionReturnParameters": 3214,
												"id": 3265,
												"nodeType": "Return",
												"src": "2242:18:14"
											}
										]
									},
									"functionSelector": "019d2fbf",
									"id": 3267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserProductDetails",
									"nameLocation": "1811:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1841:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "1833:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:14:14"
									},
									"returnParameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "1870:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Product_$3080_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ProductStore.Product[]"
												},
												"typeName": {
													"baseType": {
														"id": 3211,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3210,
															"name": "Product",
															"nameLocations": [
																"1870:7:14"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3080,
															"src": "1870:7:14"
														},
														"referencedDeclaration": 3080,
														"src": "1870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Product_$3080_storage_ptr",
															"typeString": "struct ProductStore.Product"
														}
													},
													"id": 3212,
													"nodeType": "ArrayTypeName",
													"src": "1870:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Product_$3080_storage_$dyn_storage_ptr",
														"typeString": "struct ProductStore.Product[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:18:14"
									},
									"scope": 3268,
									"src": "1802:466:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3269,
							"src": "292:1979:14",
							"usedErrors": [
								160,
								165,
								174,
								179,
								184,
								191,
								196,
								201
							],
							"usedEvents": [
								13,
								1352,
								1361,
								1370,
								3073
							]
						}
					],
					"src": "37:2237:14"
				},
				"id": 14
			}
		}
	}
}